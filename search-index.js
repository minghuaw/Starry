var searchIndex = JSON.parse('{\
"allocator":{"doc":"Various allocator algorithms in a unified interface.","t":"GIFKFFKPKPPPPPTKFFMNNNNMNNNMMMNNMMNNNMNNNNNNNNNNNNNNNMNNNMMNNNNNNNNNMNNNNNNNNNNMNNNNNMNMNNNMNNNNNNNNNNNNNNNNNNNMMNNNMN","n":["AllocError","AllocResult","AllocatorRc","BaseAllocator","BitmapPageAllocator","BuddyByteAllocator","ByteAllocator","Err","IdAllocator","InvalidParam","MemoryOverlap","NoMemory","NotAllocated","Ok","PAGE_SIZE","PageAllocator","SlabByteAllocator","TlsfByteAllocator","add_memory","add_memory","add_memory","add_memory","add_memory","alloc","alloc","alloc","alloc","alloc_fixed_id","alloc_id","alloc_pages","alloc_pages","allocate","available","available_bytes","available_bytes","available_bytes","available_bytes","available_pages","available_pages","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","dealloc","dealloc","dealloc","dealloc","dealloc_id","dealloc_pages","dealloc_pages","deallocate","fmt","from","from","from","from","from","from","init","init","init","init","init","into","into","into","into","into","into","is_allocated","new","new","new","new","new","size","to_owned","total_bytes","total_bytes","total_bytes","total_bytes","total_pages","total_pages","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","used","used_bytes","used_bytes","used_bytes","used_bytes","used_pages","used_pages"],"q":[[0,"allocator"],[118,"core::alloc::layout"],[119,"core::ptr::non_null"],[120,"core::alloc"],[121,"core::result"],[122,"core::fmt"],[123,"core::fmt"]],"d":["The error type used for allocation.","A <code>Result</code> type with <code>AllocError</code> as the error type.","A byte-allocator wrapped in <code>Rc&lt;RefCell&gt;</code> that implements …","The base allocator inherited by other allocators.","A page-granularity memory allocator based on the …","A byte-granularity memory allocator based on the …","Byte-granularity allocator.","Contains the error value","Used to allocate unique IDs (e.g., thread ID).","Invalid <code>size</code> or <code>align_pow2</code>. (e.g. unaligned)","Memory added by <code>add_memory</code> overlapped with existed memory.","No enough memory to allocate.","Deallocate an unallocated memory region.","Contains the success value","The size of a memory page.","Page-granularity allocator.","A byte-granularity memory allocator based on the slab …","A TLSF (Two-Level Segregated Fit) memory allocator.","Add a free memory region to the allocator.","","","","","Allocate memory with the given size (in bytes) and …","","","","Mark the given <code>id</code> has been allocated and cannot be …","Allocate contiguous IDs with given count and alignment.","Allocate contiguous memory pages with given count and …","","","Returns the number of available IDs.","Returns available memory size in bytes.","","","","Returns the number of available memory pages.","","","","","","","","","","","","","","","","Deallocate memory at the given position, size, and …","","","","Deallocate contiguous IDs with given position and count.","Deallocate contiguous memory pages with given position and …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Initialize the allocator with a free memory region.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Whether the given <code>id</code> was allocated.","Creates a new empty <code>BitmapPageAllocator</code>.","Creates a new empty <code>BuddyByteAllocator</code>.","Creates a new empty <code>SlabByteAllocator</code>.","Creates a new empty <code>TlsfByteAllocator</code>.","Creates a new allocator with the given memory pool.","Returns the maximum number of supported IDs.","","Returns total memory size in bytes.","","","","Returns the total number of memory pages.","","","","","","","","","","","","","","","","","","","","Returns the number of allocated IDs.","Returns allocated memory size in bytes.","","","","Returns the number of allocated memory pages.",""],"i":[0,0,0,0,0,0,0,3,0,19,19,19,19,3,13,0,0,0,1,4,5,6,7,8,5,6,7,12,12,13,4,14,12,8,5,6,7,13,4,4,5,6,7,14,19,4,5,6,7,14,19,14,14,8,5,6,7,12,13,4,14,19,4,5,6,7,14,19,1,4,5,6,7,4,5,6,7,14,19,12,4,5,6,7,14,12,14,8,5,6,7,13,4,4,5,6,7,14,19,4,5,6,7,14,19,4,5,6,7,14,19,12,8,5,6,7,13,4],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,2],3],[[4,2,2],3],[[5,2,2],3],[[6,2,2],3],[[7,2,2],3],[[8,9],[[3,[[11,[10]]]]]],[[5,9],[[3,[[11,[10]]]]]],[[6,9],[[3,[[11,[10]]]]]],[[7,9],[[3,[[11,[10]]]]]],[[12,2],3],[[12,2,2],[[3,[2]]]],[[13,2,2],[[3,[2]]]],[[4,2,2],[[3,[2]]]],[[[14,[-1]],9],[[17,[[11,[[15,[10]]]],16]]],8],[12,2],[8,2],[5,2],[6,2],[7,2],[13,2],[4,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[14,[-1]]],[[14,[-1]]],8],[[-1,-2],18,[],[]],[[8,[11,[10]],9],18],[[5,[11,[10]],9],18],[[6,[11,[10]],9],18],[[7,[11,[10]],9],18],[[12,2,2],18],[[13,2,2],18],[[4,2,2],18],[[[14,[-1]],[11,[10]],9],18,8],[[19,20],21],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[1,2,2],18],[[4,2,2],18],[[5,2,2],18],[[6,2,2],18],[[7,2,2],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[12,2],22],[[],4],[[],5],[[],6],[[],7],[[-1,[15,[10]]],[[14,[-1]]],8],[12,2],[-1,-2,[],[]],[8,2],[5,2],[6,2],[7,2],[13,2],[4,2],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[12,2],[8,2],[5,2],[6,2],[7,2],[13,2],[4,2]],"c":[],"p":[[10,"BaseAllocator",0],[1,"usize"],[8,"AllocResult",0],[5,"BitmapPageAllocator",0],[5,"BuddyByteAllocator",0],[5,"SlabByteAllocator",0],[5,"TlsfByteAllocator",0],[10,"ByteAllocator",0],[5,"Layout",118],[1,"u8"],[5,"NonNull",119],[10,"IdAllocator",0],[10,"PageAllocator",0],[5,"AllocatorRc",0],[1,"slice"],[5,"AllocError",120],[6,"Result",121],[1,"tuple"],[6,"AllocError",0],[5,"Formatter",122],[8,"Result",122],[1,"bool"],[5,"TypeId",123]],"b":[]},\
"arceos_api":{"doc":"Public APIs and types for ArceOS modules","t":"PPGIPPPPPPPPPPPPPPPPPPPPPPPPNNNNNNNNCCNNNNNCNCCCCCCCNNNNNNSSSSSSSSSSSSSSSSSSSSSSSSSSFNNHHNNNNOONNONNNNNOIFFIFIIFGPPPPPPPKPPPNNNNNNNNNNNHHHHHHHHHHHHHHHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNONNNNOHHFFNNNNHHHHHHHHHHHHHHHHHHHHHHHHHHNNNNNNNNNNNNNNHHHHFFNNNNHHHHHHHHHNNNNNNNNNNNNNNNNIH","n":["AddrInUse","AlreadyExists","AxError","AxResult","BadAddress","BadState","ConnectionRefused","ConnectionReset","DirectoryNotEmpty","Err","Interrupted","InvalidData","InvalidInput","Io","IsADirectory","NoMemory","NotADirectory","NotConnected","NotFound","Ok","PermissionDenied","ResourceBusy","StorageFull","Timeout","UnexpectedEof","Unsupported","WouldBlock","WriteZero","as_any","as_any_mut","as_str","borrow","borrow_mut","clone","clone_into","code","config","display","eq","fmt","fmt","from","from","fs","into","io","mem","net","stdio","sys","task","time","to_owned","to_string","try_from","try_from","try_into","type_id","ARCH","FAMILY","KERNEL_BASE_PADDR","KERNEL_BASE_VADDR","MAX_USER_HEAP_SIZE","MAX_USER_STACK_SIZE","MMIO_REGIONS","PCI_BUS_END","PCI_ECAM_BASE","PCI_RANGES","PHYS_MEMORY_BASE","PHYS_MEMORY_END","PHYS_MEMORY_SIZE","PHYS_VIRT_OFFSET","PLATFORM","SIGNAL_TRAMPOLINE","SMP","TASK_STACK_SIZE","TESTCASE_MEMORY_SIZE","TESTCASE_MEMORY_START","TICKS_PER_SEC","TIMER_FREQUENCY","USER_HEAP_BASE","USER_MEMORY_START","USER_STACK_TOP","VIRTIO_MMIO_REGIONS","AxDisplayInfo","as_any","as_any_mut","ax_framebuffer_flush","ax_framebuffer_info","borrow","borrow_mut","clone","clone_into","fb_base_vaddr","fb_size","fmt","from","height","into","to_owned","try_from","try_into","type_id","width","AxDirEntry","AxDirHandle","AxDisk","AxFileAttr","AxFileHandle","AxFilePerm","AxFileType","AxOpenOptions","AxSeekFrom","BlockDevice","CharDevice","Current","Dir","End","Fifo","File","MyFileSystemIf","Socket","Start","SymLink","append","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","ax_create_dir","ax_current_dir","ax_file_attr","ax_flush_file","ax_open_dir","ax_open_file","ax_read_dir","ax_read_file","ax_read_file_at","ax_remove_dir","ax_remove_file","ax_rename","ax_seek_file","ax_set_current_dir","ax_truncate_file","ax_write_file","ax_write_file_at","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create","create_new","eq","fmt","fmt","from","from","from","from","from","into","into","into","into","into","new","new","new_myfs","position","read","read_one","set_position","size","to_owned","to_owned","truncate","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","write","write_one","AxPollState","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","default","fmt","from","into","readable","to_owned","try_from","try_into","type_id","writable","ax_alloc","ax_dealloc","AxTcpSocketHandle","AxUdpSocketHandle","as_any","as_any","as_any_mut","as_any_mut","ax_dns_query","ax_poll_interfaces","ax_tcp_accept","ax_tcp_bind","ax_tcp_connect","ax_tcp_listen","ax_tcp_peer_addr","ax_tcp_poll","ax_tcp_recv","ax_tcp_send","ax_tcp_set_nonblocking","ax_tcp_shutdown","ax_tcp_socket","ax_tcp_socket_addr","ax_udp_bind","ax_udp_connect","ax_udp_peek_from","ax_udp_peer_addr","ax_udp_poll","ax_udp_recv","ax_udp_recv_from","ax_udp_send","ax_udp_send_to","ax_udp_set_nonblocking","ax_udp_socket","ax_udp_socket_addr","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","try_from","try_from","try_into","try_into","type_id","type_id","ax_console_read_byte","ax_console_write_bytes","ax_console_write_fmt","ax_terminate","AxTaskHandle","AxWaitQueueHandle","as_any","as_any","as_any_mut","as_any_mut","ax_current_task_id","ax_exit","ax_set_current_priority","ax_sleep_until","ax_spawn","ax_wait_for_exit","ax_wait_queue_wait","ax_wait_queue_wake","ax_yield_now","borrow","borrow","borrow_mut","borrow_mut","from","from","id","into","into","new","try_from","try_from","try_into","try_into","type_id","type_id","AxTimeValue","ax_current_time"],"q":[[0,"arceos_api"],[58,"arceos_api::config"],[84,"arceos_api::display"],[104,"arceos_api::fs"],[209,"arceos_api::io"],[226,"arceos_api::mem"],[228,"arceos_api::net"],[274,"arceos_api::stdio"],[277,"arceos_api::sys"],[278,"arceos_api::task"],[309,"arceos_api::time"],[311,"core::any"],[312,"core::fmt"],[313,"core::fmt"],[314,"capability"],[315,"alloc::string"],[316,"core::any"],[317,"alloc::sync"],[318,"driver_common"],[319,"core::alloc::layout"],[320,"core::ptr::non_null"],[321,"core::option"],[322,"core::net::ip_addr"],[323,"alloc::vec"],[324,"core::net::socket_addr"],[325,"core::fmt"],[326,"core::marker"],[327,"core::time"],[328,"core::ops::function"]],"d":["A socket address could not be bound because the address is …","An entity already exists, often a file.","The error type used by ArceOS.","A specialized <code>Result</code> type with <code>AxError</code> as the error type.","Bad address.","Bad internal state.","The connection was refused by the remote server,","The connection was reset by the remote server.","A non-empty directory was specified where an empty …","Contains the error value","Syscall interrupted by a caught signal","Data not valid for the operation were encountered.","Invalid parameter/argument.","Input/output error.","The filesystem object is, unexpectedly, a directory.","Not enough space/cannot allocate memory.","A filesystem object is, unexpectedly, not a directory.","The network operation failed because it was not connected …","The requested entity is not found.","Contains the success value","The operation lacked the necessary privileges to complete.","Device or resource is busy.","The underlying storage (typically, a filesystem) is full.","Syscall timed out","An error returned when an operation could not be completed …","This operation is unsupported or unimplemented.","The operation needs to block to complete, but the blocking …","An error returned when an operation could not be completed …","","","Returns the error description.","","","","","Returns the error code value in <code>i32</code>.","Platform-specific constants and parameters.","Graphics manipulation operations.","","","","","Returns the argument unchanged.","Filesystem manipulation operations.","Calls <code>U::from(self)</code>.","Input/output operations.","Memory management.","Networking primitives for TCP/UDP communication.","Standard input and output.","System operations.","Multi-threading management.","Time-related operations.","","","","","","","Architecture identifier.","Platform family.","Base physical address of the kernel image.","Base virtual address of the kernel image.","The size of the user heap.","The size of the user stack.","MMIO regions with format (<code>base_paddr</code>, <code>size</code>).","End PCI bus number.","Base physical address of the PCIe ECAM space (should read …","PCI device memory ranges (not used on x86).","Base address of the whole physical memory.","End address of the whole physical memory.","Size of the whole physical memory.","Linear mapping offset, for quick conversions between …","Platform identifier.","The base address of the signal trampoline.","Number of CPUs","Stack size of each task.","Testcase memory size.","Testcase memory start address.","Number of timer ticks per second (Hz). A timer tick may …","Timer interrupt frequencyin Hz.","The base address of the user heap.","user memory","The base address of the user stack. And the stack bottom …","VirtIO MMIO regions with format (<code>base_paddr</code>, <code>size</code>).","The information of the graphics device.","","","Flushes the framebuffer, i.e. show on the screen.","Gets the framebuffer information.","","","","","The base virtual address of the framebuffer.","The size of the framebuffer in bytes.","","Returns the argument unchanged.","The visible height.","Calls <code>U::from(self)</code>.","","","","","The visible width.","Alias of <code>axfs_vfs::VfsDirEntry</code>.","A handle to an opened directory.","A disk device with a cursor.","Alias of <code>axfs_vfs::VfsNodeAttr</code>.","A handle to an opened file.","Alias of <code>axfs_vfs::VfsNodePerm</code>.","Alias of <code>axfs_vfs::VfsNodeType</code>.","Options and flags which can be used to configure how a …","Enumeration of possible methods to seek within an I/O …","Block device","Character device","Sets the offset to the current position plus the specified …","Directory","Sets the offset to the size of this object plus the …","FIFO (named pipe)","Regular file","The interface to define custom filesystems in user apps.","Socket","Sets the offset to the provided number of bytes.","Symbolic link","Sets the option for the append mode.","","","","","","","","","","","Creates a new, empty directory at the provided path.","Returns the current working directory.","Returns attributes of the file.","Flushes the file, writes all buffered data to the …","Opens a directory at the path relative to the current …","Opens a file at the path relative to the current directory …","Reads directory entries starts from the current position …","Reads the file at the current position, returns the number …","Reads the file at the given position, returns the number …","Removes an empty directory.","Removes a file from the filesystem.","Rename a file or directory to a new name.","Sets the cursor of the file to the specified offset. …","Changes the current working directory to the specified …","Truncates the file to the specified size.","Writes the file at the current position, returns the …","Writes the file at the given position, returns the number …","","","","","","","","","","","","","","","Sets the option to create a new file, or open it if it …","Sets the option to create a new file, failing if it …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new disk.","Creates a blank new set of options ready for configuration.","Creates a new instance of the filesystem with …","Get the position of the cursor.","Sets the option for read access.","Read within one block, returns the number of bytes read.","Set the position of the cursor.","Get the size of the disk.","","","Sets the option for truncating a previous file.","","","","","","","","","","","","","","","","Sets the option for write access.","Write within one block, returns the number of bytes …","I/O poll results.","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Object can be read now.","","","","","Object can be writen now.","Allocate a continuous memory blocks with the given <code>layout</code> …","Deallocate the memory block at the given <code>ptr</code> pointer with …","A handle to a TCP socket.","A handle to a UDP socket.","","","","","Resolves the host name to a list of IP addresses.","Poll the network stack.","Accepts a new connection on the TCP socket.","Binds the TCP socket to the given address and port.","Connects the TCP socket to the given address and port.","Starts listening on the bound address and port.","Returns the remote address and port of the TCP socket.","Returns whether the TCP socket is readable or writable.","Receives data on the TCP socket, and stores it in the …","Transmits data in the given buffer on the TCP socket.","Moves this TCP socket into or out of nonblocking mode.","Closes the connection on the TCP socket.","Creates a new TCP socket.","Returns the local address and port of the TCP socket.","Binds the UDP socket to the given address and port.","Connects this UDP socket to a remote address, allowing the …","Receives a single datagram message on the UDP socket, …","Returns the remote address and port of the UDP socket.","Returns whether the UDP socket is readable or writable.","Receives a single datagram message on the UDP socket from …","Receives a single datagram message on the UDP socket.","Sends data on the UDP socket to the remote address to …","Sends data on the UDP socket to the given address. On …","Moves this UDP socket into or out of nonblocking mode.","Creates a new UDP socket.","Returns the local address and port of the UDP socket.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Reads a byte from the console, or returns <code>None</code> if no input …","Writes a slice of bytes to the console, returns the number …","Writes a formatted string to the console.","Shutdown the whole system and all CPUs.","A handle to a task.","A handle to a wait queue.","","","","","Returns the current task’s ID.","Exits the current task with the given exit code.","Sets the priority of the current task.","Current task is going to sleep, it will be woken up at the …","Spawns a new task with the given entry point and other …","Waits for the given task to exit, and returns its exit …","Blocks the current task and put it into the wait queue, …","Wakes up one or more tasks in the wait queue.","Current task gives up the CPU time voluntarily, and …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the task ID.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new empty wait queue.","","","","","","","A measurement of the system clock.","Returns the current clock time."],"i":[2,2,0,0,2,2,2,2,2,15,2,2,2,2,2,2,2,2,2,15,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,2,2,2,2,2,0,2,0,0,0,0,0,0,0,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,0,0,0,0,0,0,51,51,24,51,24,51,51,0,51,24,51,14,25,16,18,24,14,25,16,18,24,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,16,18,24,14,25,16,18,24,14,24,14,24,14,14,14,24,24,14,25,16,18,24,14,25,16,18,24,14,25,14,52,25,14,25,25,25,24,14,14,25,16,18,24,14,25,16,18,24,14,25,16,18,24,14,14,25,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,0,0,0,35,37,35,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,37,35,37,35,37,35,37,35,37,35,37,35,37,0,0,0,0,0,0,43,46,43,46,0,0,0,0,0,0,0,0,0,43,46,43,46,43,46,43,43,46,46,43,46,43,46,43,46,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,1,[]],[-1,1,[]],[2,3],[-1,-2,[],[]],[-1,-2,[],[]],[2,2],[[-1,-2],4,[],[]],[2,5],0,0,[[2,2],6],[[2,7],[[9,[4,8]]]],[[2,7],[[9,[4,8]]]],[10,2],[-1,-1,[]],0,[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,11,[]],[5,[[9,[2]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,12,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,1,[]],[-1,1,[]],[[],4],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[13,13],[[-1,-2],4,[],[]],0,0,[[13,7],[[9,[4,8]]]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,12,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[14,6],4],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[3,15],[[],[[15,[11]]]],[16,[[15,[17]]]],[16,15],[[3,14],[[15,[18]]]],[[3,14],[[15,[16]]]],[[18,[20,[19]]],[[15,[21]]]],[[16,[20,[22]]],[[15,[21]]]],[[16,23,[20,[22]]],[[15,[21]]]],[3,15],[3,15],[[3,3],15],[[16,24],[[15,[23]]]],[3,15],[[16,23],15],[[16,[20,[22]]],[[15,[21]]]],[[16,23,[20,[22]]],[[15,[21]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[24,24],[14,14],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[14,6],4],[[14,6],4],[[24,24],6],[[24,7],[[9,[4,8]]]],[[14,7],[[9,[4,8]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],25],[[],14],[25,[[27,[26]]]],[25,23],[[14,6],4],[[25,[20,[22]]],[[9,[21,28]]]],[[25,23],4],[25,23],[-1,-2,[],[]],[-1,-2,[],[]],[[14,6],4],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[[14,6],4],[[25,[20,[22]]],[[9,[21,28]]]],0,[-1,1,[]],[-1,1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[29,29],[[-1,-2],4,[],[]],[[],29],[[29,7],[[9,[4,8]]]],[-1,-1,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,12,[]],0,[30,[[32,[[31,[22]]]]]],[[[31,[22]],30],4],0,0,[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[3,[[15,[[34,[33]]]]]],[[],15],[35,[[15,[[4,[35,36]]]]]],[[35,36],15],[[35,36],15],[[35,21],15],[35,[[15,[36]]]],[35,[[15,[29]]]],[[35,[20,[22]]],[[15,[21]]]],[[35,[20,[22]]],[[15,[21]]]],[[35,6],15],[35,15],[[],35],[35,[[15,[36]]]],[[37,36],15],[[37,36],15],[[37,[20,[22]]],[[15,[[4,[21,36]]]]]],[37,[[15,[36]]]],[37,[[15,[29]]]],[[37,[20,[22]]],[[15,[21]]]],[[37,[20,[22]]],[[15,[[4,[21,36]]]]]],[[37,[20,[22]]],[[15,[21]]]],[[37,[20,[22]],36],[[15,[21]]]],[[37,6],15],[[],37],[37,[[15,[36]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[[],[[32,[22]]]],[[[20,[22]]],[[15,[21]]]],[38,39],[[],40],0,0,[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[[],23],[5,40],[41,15],[42,4],[[-1,11,21],43,[44,45]],[43,[[32,[5]]]],[[46,-1,[32,[47]]],6,[[49,[],[[48,[6]]]]]],[[46,50],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[43,23],[-1,-2,[],[]],[-1,-2,[],[]],[[],46],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],0,[[],42]],"c":[],"p":[[10,"Any",311],[6,"AxError",0],[1,"str"],[1,"tuple"],[1,"i32"],[1,"bool"],[5,"Formatter",312],[5,"Error",312],[6,"Result",313],[5,"CapError",314],[5,"String",315],[5,"TypeId",311],[5,"AxDisplayInfo",84],[5,"AxOpenOptions",104],[8,"AxResult",0],[5,"AxFileHandle",104],[8,"AxFileAttr",104],[5,"AxDirHandle",104],[8,"AxDirEntry",104],[1,"slice"],[1,"usize"],[1,"u8"],[1,"u64"],[6,"AxSeekFrom",104],[5,"AxDisk",104],[10,"VfsOps",316],[5,"Arc",317],[6,"DevError",318],[5,"AxPollState",209],[5,"Layout",319],[5,"NonNull",320],[6,"Option",321],[6,"IpAddr",322],[5,"Vec",323],[5,"AxTcpSocketHandle",228],[6,"SocketAddr",324],[5,"AxUdpSocketHandle",228],[5,"Arguments",312],[8,"Result",312],[1,"never"],[1,"isize"],[8,"AxTimeValue",309],[5,"AxTaskHandle",278],[10,"FnOnce",325],[10,"Send",326],[5,"AxWaitQueueHandle",278],[5,"Duration",327],[17,"Output"],[10,"Fn",325],[1,"u32"],[8,"AxFileType",104],[10,"MyFileSystemIf",104]],"b":[[39,"impl-Display-for-AxError"],[40,"impl-Debug-for-AxError"]]},\
"arceos_posix_api":{"doc":"POSIX-compatible APIs for ArceOS modules","t":"CCHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSOOOOOOOOOOOOFOOOOOOOOOFUNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNIINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNIUIFOOOFONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNIFUFIIINNNNNNNNNNNNNNNNNNNNNNOOFOIIIFUFFIOOOOOIFOOOOIOOOOOOOOOOOIOFFFFIOIOOOOOOOOOOOOOFIFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNOOOOI","n":["config","ctypes","sys_accept","sys_bind","sys_clock_gettime","sys_close","sys_connect","sys_dup","sys_dup2","sys_epoll_create","sys_epoll_ctl","sys_epoll_wait","sys_exit","sys_fcntl","sys_freeaddrinfo","sys_fstat","sys_getaddrinfo","sys_getcwd","sys_getpeername","sys_getpid","sys_getrlimit","sys_getsockname","sys_listen","sys_lseek","sys_lstat","sys_nanosleep","sys_open","sys_pipe","sys_pthread_create","sys_pthread_exit","sys_pthread_join","sys_pthread_mutex_init","sys_pthread_mutex_lock","sys_pthread_mutex_unlock","sys_pthread_self","sys_read","sys_recv","sys_recvfrom","sys_rename","sys_sched_yield","sys_select","sys_send","sys_sendto","sys_setrlimit","sys_shutdown","sys_socket","sys_stat","sys_sysconf","sys_write","sys_writev","ARCH","FAMILY","KERNEL_BASE_PADDR","KERNEL_BASE_VADDR","MAX_USER_HEAP_SIZE","MAX_USER_STACK_SIZE","MMIO_REGIONS","PCI_BUS_END","PCI_ECAM_BASE","PCI_RANGES","PHYS_MEMORY_BASE","PHYS_MEMORY_END","PHYS_MEMORY_SIZE","PHYS_VIRT_OFFSET","PLATFORM","SIGNAL_TRAMPOLINE","SMP","TASK_STACK_SIZE","TESTCASE_MEMORY_SIZE","TESTCASE_MEMORY_START","TICKS_PER_SEC","TIMER_FREQUENCY","USER_HEAP_BASE","USER_MEMORY_START","USER_STACK_TOP","VIRTIO_MMIO_REGIONS","AF_ALG","AF_APPLETALK","AF_ASH","AF_ATMPVC","AF_ATMSVC","AF_AX25","AF_BLUETOOTH","AF_BRIDGE","AF_CAIF","AF_CAN","AF_DECnet","AF_ECONET","AF_FILE","AF_IB","AF_IEEE802154","AF_INET","AF_INET6","AF_IPX","AF_IRDA","AF_ISDN","AF_IUCV","AF_KCM","AF_KEY","AF_LLC","AF_LOCAL","AF_MAX","AF_MPLS","AF_NETBEUI","AF_NETLINK","AF_NETROM","AF_NFC","AF_PACKET","AF_PHONET","AF_PPPOX","AF_QIPCRTR","AF_RDS","AF_ROSE","AF_ROUTE","AF_RXRPC","AF_SECURITY","AF_SMC","AF_SNA","AF_TIPC","AF_UNIX","AF_UNSPEC","AF_VSOCK","AF_WANPIPE","AF_X25","AF_XDP","EAI_AGAIN","EAI_BADFLAGS","EAI_FAIL","EAI_FAMILY","EAI_MEMORY","EAI_NONAME","EAI_OVERFLOW","EAI_SERVICE","EAI_SOCKTYPE","EAI_SYSTEM","EPOLLERR","EPOLLET","EPOLLEXCLUSIVE","EPOLLHUP","EPOLLIN","EPOLLMSG","EPOLLNVAL","EPOLLONESHOT","EPOLLOUT","EPOLLPRI","EPOLLRDBAND","EPOLLRDHUP","EPOLLRDNORM","EPOLLWAKEUP","EPOLLWRBAND","EPOLLWRNORM","EPOLL_CLOEXEC","EPOLL_CTL_ADD","EPOLL_CTL_DEL","EPOLL_CTL_MOD","EPOLL_NONBLOCK","FD_CLOEXEC","FD_SETSIZE","F_DUPFD","F_DUPFD_CLOEXEC","F_GETFD","F_GETFL","F_GETLK","F_GETOWN","F_GETSIG","F_LOCK","F_OK","F_RDLCK","F_SETFD","F_SETFL","F_SETLK","F_SETLKW","F_SETOWN","F_SETSIG","F_TEST","F_TLOCK","F_ULOCK","F_UNLCK","F_WRLCK","IPPROTO_AH","IPPROTO_BEETPH","IPPROTO_COMP","IPPROTO_DCCP","IPPROTO_DSTOPTS","IPPROTO_EGP","IPPROTO_ENCAP","IPPROTO_ESP","IPPROTO_ETHERNET","IPPROTO_FRAGMENT","IPPROTO_GRE","IPPROTO_HOPOPTS","IPPROTO_ICMP","IPPROTO_ICMPV6","IPPROTO_IDP","IPPROTO_IGMP","IPPROTO_IP","IPPROTO_IPIP","IPPROTO_IPV6","IPPROTO_MAX","IPPROTO_MH","IPPROTO_MPLS","IPPROTO_MPTCP","IPPROTO_MTP","IPPROTO_NONE","IPPROTO_PIM","IPPROTO_PUP","IPPROTO_RAW","IPPROTO_ROUTING","IPPROTO_RSVP","IPPROTO_SCTP","IPPROTO_TCP","IPPROTO_TP","IPPROTO_UDP","IPPROTO_UDPLITE","MAXADDRS","O_ACCMODE","O_APPEND","O_ASYNC","O_CLOEXEC","O_CREAT","O_DIRECT","O_DIRECTORY","O_DSYNC","O_EXCL","O_EXEC","O_LARGEFILE","O_NDELAY","O_NOATIME","O_NOCTTY","O_NOFOLLOW","O_NONBLOCK","O_PATH","O_RDONLY","O_RDWR","O_RSYNC","O_SEARCH","O_SYNC","O_TMPFILE","O_TRUNC","O_TTY_INIT","O_WRONLY","RLIMIT_AS","RLIMIT_CORE","RLIMIT_CPU","RLIMIT_DATA","RLIMIT_FSIZE","RLIMIT_LOCKS","RLIMIT_MEMLOCK","RLIMIT_MSGQUEUE","RLIMIT_NICE","RLIMIT_NLIMITS","RLIMIT_NOFILE","RLIMIT_NPROC","RLIMIT_RSS","RLIMIT_RTPRIO","RLIMIT_RTTIME","RLIMIT_SIGPENDING","RLIMIT_STACK","SOCK_CLOEXEC","SOCK_DCCP","SOCK_DGRAM","SOCK_NONBLOCK","SOCK_PACKET","SOCK_RAW","SOCK_RDM","SOCK_SEQPACKET","SOCK_STREAM","_SC_2_CHAR_TERM","_SC_2_C_BIND","_SC_2_C_DEV","_SC_2_FORT_DEV","_SC_2_FORT_RUN","_SC_2_LOCALEDEF","_SC_2_PBS","_SC_2_PBS_ACCOUNTING","_SC_2_PBS_CHECKPOINT","_SC_2_PBS_LOCATE","_SC_2_PBS_MESSAGE","_SC_2_PBS_TRACK","_SC_2_SW_DEV","_SC_2_UPE","_SC_2_VERSION","_SC_ADVISORY_INFO","_SC_AIO_LISTIO_MAX","_SC_AIO_MAX","_SC_AIO_PRIO_DELTA_MAX","_SC_ARG_MAX","_SC_ASYNCHRONOUS_IO","_SC_ATEXIT_MAX","_SC_AVPHYS_PAGES","_SC_BARRIERS","_SC_BC_BASE_MAX","_SC_BC_DIM_MAX","_SC_BC_SCALE_MAX","_SC_BC_STRING_MAX","_SC_CHILD_MAX","_SC_CLK_TCK","_SC_CLOCK_SELECTION","_SC_COLL_WEIGHTS_MAX","_SC_CPUTIME","_SC_DELAYTIMER_MAX","_SC_EXPR_NEST_MAX","_SC_FSYNC","_SC_GETGR_R_SIZE_MAX","_SC_GETPW_R_SIZE_MAX","_SC_HOST_NAME_MAX","_SC_IOV_MAX","_SC_IPV6","_SC_JOB_CONTROL","_SC_LINE_MAX","_SC_LOGIN_NAME_MAX","_SC_MAPPED_FILES","_SC_MEMLOCK","_SC_MEMLOCK_RANGE","_SC_MEMORY_PROTECTION","_SC_MESSAGE_PASSING","_SC_MONOTONIC_CLOCK","_SC_MQ_OPEN_MAX","_SC_MQ_PRIO_MAX","_SC_NGROUPS_MAX","_SC_NPROCESSORS_CONF","_SC_NPROCESSORS_ONLN","_SC_NZERO","_SC_OPEN_MAX","_SC_PAGESIZE","_SC_PAGE_SIZE","_SC_PASS_MAX","_SC_PHYS_PAGES","_SC_PRIORITIZED_IO","_SC_PRIORITY_SCHEDULING","_SC_RAW_SOCKETS","_SC_READER_WRITER_LOCKS","_SC_REALTIME_SIGNALS","_SC_REGEXP","_SC_RE_DUP_MAX","_SC_RTSIG_MAX","_SC_SAVED_IDS","_SC_SEMAPHORES","_SC_SEM_NSEMS_MAX","_SC_SEM_VALUE_MAX","_SC_SHARED_MEMORY_OBJECTS","_SC_SHELL","_SC_SIGQUEUE_MAX","_SC_SPAWN","_SC_SPIN_LOCKS","_SC_SPORADIC_SERVER","_SC_SS_REPL_MAX","_SC_STREAMS","_SC_STREAM_MAX","_SC_SYMLOOP_MAX","_SC_SYNCHRONIZED_IO","_SC_THREADS","_SC_THREAD_ATTR_STACKADDR","_SC_THREAD_ATTR_STACKSIZE","_SC_THREAD_CPUTIME","_SC_THREAD_DESTRUCTOR_ITERATIONS","_SC_THREAD_KEYS_MAX","_SC_THREAD_PRIORITY_SCHEDULING","_SC_THREAD_PRIO_INHERIT","_SC_THREAD_PRIO_PROTECT","_SC_THREAD_PROCESS_SHARED","_SC_THREAD_ROBUST_PRIO_INHERIT","_SC_THREAD_ROBUST_PRIO_PROTECT","_SC_THREAD_SAFE_FUNCTIONS","_SC_THREAD_SPORADIC_SERVER","_SC_THREAD_STACK_MIN","_SC_THREAD_THREADS_MAX","_SC_TIMEOUTS","_SC_TIMERS","_SC_TIMER_MAX","_SC_TRACE","_SC_TRACE_EVENT_FILTER","_SC_TRACE_EVENT_NAME_MAX","_SC_TRACE_INHERIT","_SC_TRACE_LOG","_SC_TRACE_NAME_MAX","_SC_TRACE_SYS_MAX","_SC_TRACE_USER_EVENT_MAX","_SC_TTY_NAME_MAX","_SC_TYPED_MEMORY_OBJECTS","_SC_TZNAME_MAX","_SC_UIO_MAXIOV","_SC_V6_ILP32_OFF32","_SC_V6_ILP32_OFFBIG","_SC_V6_LP64_OFF64","_SC_V6_LPBIG_OFFBIG","_SC_V7_ILP32_OFF32","_SC_V7_ILP32_OFFBIG","_SC_V7_LP64_OFF64","_SC_V7_LPBIG_OFFBIG","_SC_VERSION","_SC_XBS5_ILP32_OFF32","_SC_XBS5_ILP32_OFFBIG","_SC_XBS5_LP64_OFF64","_SC_XBS5_LPBIG_OFFBIG","_SC_XOPEN_CRYPT","_SC_XOPEN_ENH_I18N","_SC_XOPEN_LEGACY","_SC_XOPEN_REALTIME","_SC_XOPEN_REALTIME_THREADS","_SC_XOPEN_SHM","_SC_XOPEN_STREAMS","_SC_XOPEN_UNIX","_SC_XOPEN_VERSION","_SC_XOPEN_XCU_VERSION","_SC_XOPEN_XPG2","_SC_XOPEN_XPG3","_SC_XOPEN_XPG4","__attr","__i","__in6_union","__l","__s","__s6_addr","__s6_addr16","__s6_addr32","__ss_align","__ss_padding","__u","__vi","addrinfo","ai","ai_addr","ai_addrlen","ai_canonname","ai_family","ai_flags","ai_next","ai_protocol","ai_socktype","aibuf","aibuf_sa","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blkcnt_t","blksize_t","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clockid_t","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","dev_t","epoll_data","epoll_data_t","epoll_event","events","fd","fd","fd_set","fds_bits","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","gid_t","in6_addr","in6_addr__bindgen_ty_1","in_addr","in_addr_t","in_port_t","ino_t","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","iov_base","iov_len","iovec","lock","mode_t","nlink_t","off_t","pthread_attr_t","pthread_attr_t__bindgen_ty_1","pthread_mutex_t","pthread_mutexattr_t","pthread_t","ptr","ptr","ref_","rlim_cur","rlim_max","rlim_t","rlimit","s_addr","sa","sa_data","sa_family","sa_family_t","sin","sin6","sin6_addr","sin6_family","sin6_flowinfo","sin6_port","sin6_scope_id","sin_addr","sin_family","sin_port","sin_zero","size_t","slot","sockaddr","sockaddr_in","sockaddr_in6","sockaddr_storage","socklen_t","ss_family","ssize_t","st_atime","st_blksize","st_blocks","st_ctime","st_dev","st_gid","st_ino","st_mode","st_mtime","st_nlink","st_rdev","st_size","st_uid","stat","time_t","timespec","timeval","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tv_nsec","tv_sec","tv_sec","tv_usec","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u32_","u32_","u64_","u64_","uid_t"],"q":[[0,"arceos_posix_api"],[50,"arceos_posix_api::config"],[76,"arceos_posix_api::ctypes"],[824,"core::ffi"],[825,"core::ffi"],[826,"core::fmt"],[827,"core::fmt"],[828,"core::time"],[829,"core::result"],[830,"core::any"]],"d":["Platform-specific constants and parameters.","POSIX C types.","Accept for connections on a socket","Bind a address to a socket.","Get clock time since booting","Close a file by <code>fd</code>.","Connects the socket to the address specified.","Duplicate a file descriptor.","Duplicate a file descriptor, but it uses the file …","Creates a new epoll instance.","Control interface for an epoll file descriptor","Waits for events on the epoll instance referred to by the …","Exit current task","Manipulate file descriptor.","Free queried <code>addrinfo</code> struct","Get file metadata by <code>fd</code> and write into <code>buf</code>.","Query addresses for a domain name.","Get the path of the current directory.","Get peer address to which the socket sockfd is connected.","Get current thread ID.","Get resource limitations","Get current address to which the socket sockfd is bound.","Listen for connections on a socket","Set the position of the file indicated by <code>fd</code>.","Get the metadata of the symbolic link and write into <code>buf</code>.","Sleep some nanoseconds","Open a file by <code>filename</code> and insert it into the file …","Create a pipe","Create a new thread with the given entry point and …","Exits the current thread. The value <code>retval</code> will be …","Waits for the given thread to exit, and stores the return …","Initialize a mutex.","Lock the given mutex.","Unlock the given mutex.","Returns the <code>pthread</code> struct of current thread.","Read data from the file indicated by <code>fd</code>.","Receive a message on a socket.","Receive a message on a socket and get its source address.","Rename <code>old</code> to <code>new</code> If new exists, it is first removed.","Relinquish the CPU, and switches to another task.","Monitor multiple file descriptors, waiting until one or …","Send a message on a socket to the address connected.","Send a message on a socket to the address specified.","Set resource limitations","Shut down a full-duplex connection.","Create an socket for communication.","Get the file metadata by <code>path</code> and write into <code>buf</code>.","Return system configuration infomation","Write data to the file indicated by <code>fd</code>.","Write a vector.","Architecture identifier.","Platform family.","Base physical address of the kernel image.","Base virtual address of the kernel image.","The size of the user heap.","The size of the user stack.","MMIO regions with format (<code>base_paddr</code>, <code>size</code>).","End PCI bus number.","Base physical address of the PCIe ECAM space (should read …","PCI device memory ranges (not used on x86).","Base address of the whole physical memory.","End address of the whole physical memory.","Size of the whole physical memory.","Linear mapping offset, for quick conversions between …","Platform identifier.","The base address of the signal trampoline.","Number of CPUs","Stack size of each task.","Testcase memory size.","Testcase memory start address.","Number of timer ticks per second (Hz). A timer tick may …","Timer interrupt frequencyin Hz.","The base address of the user heap.","user memory","The base address of the user stack. And the stack bottom …","VirtIO MMIO regions with format (<code>base_paddr</code>, <code>size</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,37,32,21,37,33,33,33,29,29,19,37,0,35,9,9,9,9,9,9,9,9,0,0,2,29,30,31,32,33,34,9,35,36,25,5,21,22,19,37,38,6,13,24,11,27,2,29,30,31,32,33,34,9,35,36,25,5,21,22,19,37,38,6,13,24,11,27,0,0,2,29,30,31,32,33,34,9,35,36,25,5,21,22,19,37,38,6,13,24,11,27,2,29,30,31,32,33,34,9,35,36,25,5,21,22,19,37,38,6,13,24,11,27,0,2,29,30,31,32,33,34,9,35,36,25,5,21,22,19,37,38,6,13,24,11,27,2,29,30,31,32,33,34,9,35,36,25,5,21,22,19,37,38,6,13,24,11,27,6,2,29,30,31,32,33,34,9,35,36,25,5,21,22,19,37,38,6,13,24,11,27,0,0,0,0,6,45,38,0,24,2,29,30,31,9,25,5,21,22,13,24,11,27,2,29,30,31,31,32,33,34,9,35,36,25,25,5,5,21,22,19,37,38,6,13,24,11,27,0,0,0,0,0,0,0,2,29,30,31,32,33,34,9,35,36,25,5,21,22,19,37,38,6,13,24,11,27,27,27,0,35,0,0,0,0,0,0,0,0,45,38,35,13,13,0,0,30,35,2,2,0,36,36,34,34,34,34,34,31,31,31,31,0,35,0,0,0,0,0,29,0,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,2,29,30,31,32,33,34,9,35,36,25,5,21,22,19,37,38,6,13,24,11,27,2,29,30,31,32,33,34,9,35,36,25,5,21,22,19,37,38,6,13,24,11,27,2,29,30,31,32,33,34,9,35,36,25,5,21,22,19,37,38,6,13,24,11,27,5,25,5,25,2,29,30,31,32,33,34,9,35,36,25,5,21,22,19,37,38,6,13,24,11,27,45,38,45,38,0],"f":[0,0,[[1,2,3],1],[[1,2,3],1],[[4,5],1],[1,1],[[1,2,3],1],[1,1],[[1,1],1],[1,1],[[1,1,1,6],1],[[1,6,1,1],1],[1,7],[[1,1,8],1],[9,10],[[1,11],1],[[12,12,9,9],1],[[12,8],12],[[1,2,3],1],[[],1],[[1,13],1],[[1,2,3],1],[[1,1],1],[[1,14,1],14],[[12,11],15],[[5,5],1],[[12,1,16],1],[[[17,[1]]],1],[[18,19,20],1],[20,7],[[18,20],1],[[21,22],1],[21,1],[21,1],[[],18],[[1,20,8],15],[[1,20,23,1],15],[[1,20,23,1,2,3],15],[[12,12],1],[[],1],[[1,24,24,24,25],1],[[1,20,23,1],15],[[1,20,23,1,2,3],15],[[1,13],1],[[1,1],1],[[1,1,1],1],[[12,11],1],[1,26],[[1,20,8],15],[[1,27,1],15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[2,2],[29,29],[30,30],[31,31],[32,32],[33,33],[34,34],[9,9],[35,35],[36,36],[25,25],[5,5],[21,21],[22,22],[19,19],[37,37],[38,38],[6,6],[13,13],[24,24],[11,11],[27,27],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],0,[[],2],[[],29],[[],30],[[],31],[[],32],[[],33],[[],34],[[],9],[[],35],[[],36],[[],25],[[],5],[[],21],[[],22],[[],19],[[],37],[[],38],[[],6],[[],13],[[],24],[[],11],[[],27],0,0,0,0,0,0,0,0,0,[[2,39],40],[[29,39],40],[[30,39],40],[[31,39],40],[[9,39],40],[[25,39],40],[[5,39],40],[[21,39],40],[[22,39],40],[[13,39],40],[[24,39],40],[[11,39],40],[[27,39],40],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[41,31],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[42,25],[-1,-1,[]],[42,5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],[-1,[[43,[-2]]],[],[]],0,0,0,0,[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],[-1,44,[]],0,0,0,0,0],"c":[],"p":[[8,"c_int",824],[5,"sockaddr",76],[8,"socklen_t",76],[8,"clockid_t",76],[5,"timespec",76],[5,"epoll_event",76],[1,"never"],[1,"usize"],[5,"addrinfo",76],[1,"tuple"],[5,"stat",76],[8,"c_char",824],[5,"rlimit",76],[8,"off_t",76],[8,"ssize_t",76],[8,"mode_t",76],[1,"slice"],[8,"pthread_t",76],[5,"pthread_attr_t",76],[6,"c_void",824],[5,"pthread_mutex_t",76],[5,"pthread_mutexattr_t",76],[8,"size_t",76],[5,"fd_set",76],[5,"timeval",76],[8,"c_long",824],[5,"iovec",76],[10,"Any",825],[5,"sockaddr_storage",76],[5,"in_addr",76],[5,"sockaddr_in",76],[5,"in6_addr",76],[20,"in6_addr__bindgen_ty_1",76],[5,"sockaddr_in6",76],[5,"aibuf",76],[20,"aibuf_sa",76],[20,"pthread_attr_t__bindgen_ty_1",76],[20,"epoll_data",76],[5,"Formatter",826],[8,"Result",826],[5,"SocketAddrV4",827],[5,"Duration",828],[6,"Result",829],[5,"TypeId",825],[8,"epoll_data_t",76]],"b":[]},\
"arm_gic":{"doc":"ARM Generic Interrupt Controller (GIC) register …","t":"PSGPPSPSPSGNNNNNNCNNHNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Edge","GIC_MAX_IRQ","InterruptType","Level","PPI","PPI_RANGE","SGI","SGI_RANGE","SPI","SPI_RANGE","TriggerMode","borrow","borrow","borrow_mut","borrow_mut","from","from","gic_v2","into","into","translate_irq","try_from","try_from","try_into","try_into","type_id","type_id","GicCpuInterface","GicDistributor","borrow","borrow","borrow_mut","borrow_mut","configure_interrupt","cpu_num","eoi","from","from","handle_irq","iar","init","init","into","into","max_irqs","new","new","set_enable","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"arm_gic"],[27,"arm_gic::gic_v2"],[54,"core::option"],[55,"core::result"],[56,"core::any"],[57,"core::ops::function"]],"d":["Edge-triggered.","Maximum number of interrupts supported by the GIC.","Different types of interrupt that the GIC handles.","Level-sensitive.","Private Peripheral Interrupt.","Interrupt ID 16-31 are used for PPIs (Private Peripheral …","Software-generated interrupt.","Interrupt ID 0-15 are used for SGIs (Software-generated …","Shared Peripheral Interrupt.","Interrupt ID 32-1019 are used for SPIs (Shared Peripheral …","Interrupt trigger mode.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Types and definitions for GICv2.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Translate an interrupt of a given type to a GIC INTID.","","","","","","","The GIC CPU interface.","The GIC distributor.","","","","","Configures the trigger mode for the given interrupt.","The number of implemented CPU interfaces.","Informs the CPU interface that it has completed the …","Returns the argument unchanged.","Returns the argument unchanged.","handles the signaled interrupt.","Returns the interrupt ID of the highest priority pending …","Initializes the GIC distributor.","Initializes the GIC CPU interface.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The maximum number of interrupts that the GIC supports","Construct a new GIC distributor instance from the base …","Construct a new GIC CPU interface instance from the base …","Enables or disables the given interrupt.","","","","","",""],"i":[7,0,0,7,2,0,2,0,2,0,0,7,2,7,2,7,2,0,7,2,0,7,2,7,2,7,2,0,0,6,9,6,9,6,6,9,6,9,9,9,6,9,6,9,6,6,9,6,6,9,6,9,6,9],"f":[0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[1,2],[[3,[1]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[6,1,7],8],[6,1],[[9,10],8],[-1,-1,[]],[-1,-1,[]],[[9,-1],8,[[11,[10]]]],[9,10],[6,8],[9,8],[-1,-2,[],[]],[-1,-2,[],[]],[6,1],[12,6],[12,9],[[6,1,13],8],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[-1,5,[]]],"c":[],"p":[[1,"usize"],[6,"InterruptType",0],[6,"Option",54],[6,"Result",55],[5,"TypeId",56],[5,"GicDistributor",27],[6,"TriggerMode",0],[1,"tuple"],[5,"GicCpuInterface",27],[1,"u32"],[10,"FnOnce",57],[1,"u8"],[1,"bool"]],"b":[]},\
"arm_pl011":{"doc":"Definitions for PL011 UART.","t":"CFNNNNNNNNNNNNN","n":["pl011","Pl011Uart","ack_interrupts","borrow","borrow_mut","from","getchar","init","into","is_receive_interrupt","new","putchar","try_from","try_into","type_id"],"q":[[0,"arm_pl011"],[1,"arm_pl011::pl011"],[15,"core::option"],[16,"core::result"],[17,"core::any"]],"d":["Types and definitions for PL011 UART.","The Pl011 Uart","Clear all interrupts","","","Returns the argument unchanged.","Return a byte if pl011 has received, or it will return <code>None</code>…","Initializes the Pl011 UART.","Calls <code>U::from(self)</code>.","Return true if pl011 has received an interrupt","Constrcut a new Pl011 UART instance from the base address.","Output a char c to data register","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,[1,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[1,[[4,[3]]]],[1,2],[-1,-2,[],[]],[1,5],[3,1],[[1,3],2],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]]],"c":[],"p":[[5,"Pl011Uart",1],[1,"tuple"],[1,"u8"],[6,"Option",15],[1,"bool"],[6,"Result",16],[5,"TypeId",17]],"b":[]},\
"axalloc":{"doc":"ArceOS global memory allocator.","t":"FFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHNNNNNNNNNONNNNNNNNNNNN","n":["GlobalAllocator","GlobalPage","PhysPage","add_memory","alloc","alloc","alloc","alloc","alloc_contiguous","alloc_contiguous","alloc_pages","alloc_zero","as_mut_ptr","as_mut_ptr","as_ptr","as_ptr","as_slice","as_slice","as_slice_mut","as_slice_mut","available_bytes","available_pages","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","dealloc","dealloc","dealloc_pages","drop","drop","fill","fill","fmt","fmt","from","from","from","global_add_memory","global_allocator","global_init","init","into","into","into","name","new","size","start_paddr","start_vaddr","start_vaddr","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","used_bytes","used_pages","zero"],"q":[[0,"axalloc"],[65,"allocator"],[66,"core::alloc::layout"],[67,"core::ptr::non_null"],[68,"axerrno"],[69,"core::option"],[70,"alloc::vec"],[71,"core::fmt"],[72,"core::fmt"],[73,"memory_addr"],[74,"core::result"],[75,"core::any"]],"d":["The global allocator used by ArceOS.","A RAII wrapper of contiguous 4K-sized pages.","A safe wrapper of a single 4K page. It holds the page’s …","Add the given region to the allocator.","","Allocate arbitrary number of bytes. Returns the left bound …","Allocate one 4K-sized page.","Allocate one 4K-sized page.","Allocate contiguous 4K-sized pages.","Allocate some 4K-sized pages and fill with zero.","Allocates contiguous pages.","Allocate one 4K-sized page and fill with zero.","Convert to a mutable raw pointer.","Convert to a mutable raw pointer.","Convert to a raw pointer.","Convert to a raw pointer.","Forms a slice that can read data.","Forms a slice that can read data.","Forms a mutable slice that can write data.","Forms a mutable slice that can write data.","Returns the number of available bytes in the byte …","Returns the number of available pages in the page …","","","","","","","Gives back the allocated region to the byte allocator.","","Gives back the allocated pages starts from <code>pos</code> to the page …","","","Fill <code>self</code> with <code>byte</code>.","Fill <code>self</code> with <code>byte</code>.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Add the given memory region to the global allocator.","Returns the reference to the global allocator.","Initializes the global allocator with the given memory …","Initializes the allocator with the given region.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the name of the allocator.","Creates an empty <code>GlobalAllocator</code>.","Get the total size (in bytes) of these page(s).","Get the start physical address of this page.","Get the start virtual address of this page.","The start virtual address of this page.","","","","","","","","","","Returns the number of allocated bytes in the byte …","Returns the number of allocated pages in the page …","Fill <code>self</code> with zero."],"i":[0,0,0,1,1,1,7,9,7,9,1,7,7,9,7,9,7,9,7,9,1,1,1,7,9,1,7,9,1,1,1,7,9,7,9,7,9,1,7,9,0,0,0,1,1,7,9,1,1,7,7,7,9,1,7,9,1,7,9,1,7,9,1,1,7],"f":[0,0,0,[[1,2,2],3],[[1,4],5],[[1,4],[[3,[[6,[5]]]]]],[[],[[8,[7]]]],[[],[[8,[9]]]],[[2,2],[[8,[7]]]],[[2,2,[11,[[10,[5]]]]],[[8,[[12,[[11,[9]]]]]]]],[[1,2,2],[[3,[2]]]],[[],[[8,[7]]]],[7,5],[9,5],[7,5],[9,5],[7,[[10,[5]]]],[9,[[10,[5]]]],[7,[[10,[5]]]],[9,[[10,[5]]]],[1,2],[1,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,[6,[5]],4],13],[[1,5,4],13],[[1,2,2],13],[7,13],[9,13],[[7,5],13],[[9,5],13],[[7,14],15],[[9,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[2,2],3],[[],1],[[2,2],13],[[1,2,2],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,16],[[],1],[7,2],[[7,-1],17,[[20,[18],[[19,[17]]]]]],[7,18],0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[1,2],[1,2],[7,13]],"c":[],"p":[[5,"GlobalAllocator",0],[1,"usize"],[8,"AllocResult",65],[5,"Layout",66],[1,"u8"],[5,"NonNull",67],[5,"GlobalPage",0],[8,"AxResult",68],[5,"PhysPage",0],[1,"slice"],[6,"Option",69],[5,"Vec",70],[1,"tuple"],[5,"Formatter",71],[8,"Result",71],[1,"str"],[5,"PhysAddr",72],[5,"VirtAddr",72],[17,"Output"],[10,"FnOnce",73],[6,"Result",74],[5,"TypeId",75]],"b":[[4,"impl-GlobalAlloc-for-GlobalAllocator"],[5,"impl-GlobalAllocator"],[28,"impl-GlobalAllocator"],[29,"impl-GlobalAlloc-for-GlobalAllocator"]]},\
"axconfig":{"doc":"Platform-specific constants and parameters for ArceOS.","t":"SSSSSSSSSSSSSSSSSSSSSSSSSS","n":["ARCH","FAMILY","KERNEL_BASE_PADDR","KERNEL_BASE_VADDR","MAX_USER_HEAP_SIZE","MAX_USER_STACK_SIZE","MMIO_REGIONS","PCI_BUS_END","PCI_ECAM_BASE","PCI_RANGES","PHYS_MEMORY_BASE","PHYS_MEMORY_END","PHYS_MEMORY_SIZE","PHYS_VIRT_OFFSET","PLATFORM","SIGNAL_TRAMPOLINE","SMP","TASK_STACK_SIZE","TESTCASE_MEMORY_SIZE","TESTCASE_MEMORY_START","TICKS_PER_SEC","TIMER_FREQUENCY","USER_HEAP_BASE","USER_MEMORY_START","USER_STACK_TOP","VIRTIO_MMIO_REGIONS"],"q":[[0,"axconfig"]],"d":["Architecture identifier.","Platform family.","Base physical address of the kernel image.","Base virtual address of the kernel image.","The size of the user heap.","The size of the user stack.","MMIO regions with format (<code>base_paddr</code>, <code>size</code>).","End PCI bus number.","Base physical address of the PCIe ECAM space (should read …","PCI device memory ranges (not used on x86).","Base address of the whole physical memory.","End address of the whole physical memory.","Size of the whole physical memory.","Linear mapping offset, for quick conversions between …","Platform identifier.","The base address of the signal trampoline.","Number of CPUs","Stack size of each task.","Testcase memory size.","Testcase memory start address.","Number of timer ticks per second (Hz). A timer tick may …","Timer interrupt frequencyin Hz.","The base address of the user heap.","user memory","The base address of the user stack. And the stack bottom …","VirtIO MMIO regions with format (<code>base_paddr</code>, <code>size</code>)."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[],"b":[]},\
"axdisplay":{"doc":"ArceOS graphics module.","t":"EHHH","n":["DisplayInfo","framebuffer_flush","framebuffer_info","init_display"],"q":[[0,"axdisplay"],[4,"driver_display"],[5,"axdriver::dummy"],[6,"axdriver::structs::imp"]],"d":["","Flushes the framebuffer, i.e. show on the screen.","Gets the framebuffer information.","Initializes the graphics subsystem by underlayer devices."],"i":[0,0,0,0],"f":[0,[[],1],[[],2],[[[4,[3]]],1]],"c":[],"p":[[1,"tuple"],[5,"DisplayInfo",4],[8,"AxDisplayDevice",5],[5,"AxDeviceContainer",6]],"b":[]},\
"axdriver":{"doc":"ArceOS device drivers.","t":"FIFGIIPPPONNNNNNNNNNNNONNNNNNNHNNNNNOCNNNNNNNNNNPPIIIPKPKPGIGPKPPPPKPPPPMMNNNNMMNNMMNMMMNNNNMNNMMMMMMMMNMNNNNMNNM","n":["AllDevices","AxBlockDevice","AxDeviceContainer","AxDeviceEnum","AxDisplayDevice","AxNetDevice","Block","Display","Net","block","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","default","deref","device_model","device_name","device_type","display","from","from","from","from_block","from_display","from_net","from_one","init_drivers","into","into","into","is_empty","len","net","prelude","take_one","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Again","AlreadyExists","AxBlockDevice","AxDisplayDevice","AxNetDevice","BadState","BaseDriverOps","Block","BlockDriverOps","Char","DevError","DevResult","DeviceType","Display","DisplayDriverOps","Err","InvalidParam","Io","Net","NetDriverOps","NoMemory","Ok","ResourceBusy","Unsupported","alloc_tx_buffer","block_size","borrow","borrow","borrow_mut","borrow_mut","can_receive","can_transmit","clone","clone_into","device_name","device_type","eq","fb","flush","flush","fmt","fmt","from","from","info","into","into","mac_address","need_flush","num_blocks","read_block","receive","recycle_rx_buffer","recycle_tx_buffers","rx_queue_size","to_owned","transmit","try_from","try_from","try_into","try_into","tx_queue_size","type_id","type_id","write_block"],"q":[[0,"axdriver"],[48,"axdriver::prelude"],[113,"core::option"],[114,"core::result"],[115,"core::any"],[116,"driver_net"],[117,"driver_display"],[118,"core::fmt"],[119,"core::fmt"]],"d":["A structure that contains all device drivers, organized by …","The unified type of the block storage devices.","A structure that contains all device drivers of a certain …","A unified enum that represents different categories of …","The unified type of the graphics display devices.","The unified type of the NIC devices.","Block storage device.","Graphic display device.","Network card device.","All block device drivers.","","","","","","","","","","Returns the device model used, either <code>dyn</code> or <code>static</code>.","","","All graphics device drivers.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs a block device.","Constructs a display device.","Constructs a network device.","Constructs the container from one device.","Probes and initializes all device drivers, returns the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns whether the container is empty.","Returns number of devices in this container.","All network device drivers.","Device driver prelude that includes some traits and types.","Takes one device out of the container (will remove it from …","","","","","","","","","","Try again, for non-blocking APIs.","An entity already exists.","The unified type of the block storage devices.","The unified type of the graphics display devices.","The unified type of the NIC devices.","Bad internal state.","Common operations that require all device drivers to …","Block storage device (e.g., disk).","Operations that require a block storage device driver to …","Character device (e.g., serial port).","The error type for device operation failures.","A specialized <code>Result</code> type for device operations.","All supported device types.","Graphic display device (e.g., GPU)","Operations that require a graphics device driver to …","Contains the error value","Invalid parameter/argument.","Input/output error.","Network device (e.g., ethernet card).","Operations that require a network device (NIC) driver to …","Not enough space/cannot allocate memory (DMA).","Contains the success value","Device or resource is busy.","This operation is unsupported or unimplemented.","Allocate a memory buffer of a specified size for network …","The size of each block in bytes.","","","","","Whether can receive packets.","Whether can transmit packets.","","","The name of the device.","The type of the device.","","Get the framebuffer.","Flush framebuffer to the screen.","Flushes the device to write all pending data to the …","","","Returns the argument unchanged.","Returns the argument unchanged.","Get the display information.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The ethernet address of the NIC.","Whether need to flush the framebuffer to the screen.","The number of blocks in this storage device.","Reads blocked data from the given block.","Receives a packet from the network and store it in the …","Gives back the <code>rx_buf</code> to the receive queue for later …","Poll the transmit queue and gives back the buffers for …","Size of the receive queue.","","Transmits a packet in the buffer to the network, without …","","","","","Size of the transmit queue.","","","Writes blocked data to the given block."],"i":[0,0,0,0,0,0,4,4,4,2,1,4,2,1,4,2,1,2,1,2,4,4,2,1,4,2,4,4,4,1,0,1,4,2,1,1,2,0,1,1,4,2,1,4,2,1,4,2,15,15,0,0,0,15,0,5,0,5,0,0,0,5,0,26,15,15,5,0,15,26,15,15,8,6,5,15,5,15,8,8,5,5,17,17,5,7,7,6,5,15,5,15,7,5,15,8,7,6,6,8,8,8,8,5,8,5,15,5,15,8,5,15,6],"f":[0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[1,[-1]]],[]],[[],2],[[[1,[-1]]],-2,[],[]],[[],3],[4,3],[4,5],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,4,6],[-1,4,7],[-1,4,8],[-1,[[1,[-1]]],[]],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],9,[]],[[[1,[-1]]],10,[]],0,0,[[[1,[-1]]],[[11,[-1]]],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[8,10],[[12,[14,15]]]],[6,10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[8,9],[8,9],[5,5],[[-1,-2],16,[],[]],[17,3],[17,5],[[5,5],9],[7,18],[7,[[12,[16,15]]]],[6,[[12,[16,15]]]],[[5,19],[[12,[16,20]]]],[[15,19],[[12,[16,20]]]],[-1,-1,[]],[-1,-1,[]],[7,21],[-1,-2,[],[]],[-1,-2,[],[]],[8,22],[7,9],[6,23],[[6,23,[25,[24]]],[[12,[16,15]]]],[8,[[12,[14,15]]]],[[8,14],[[12,[16,15]]]],[8,[[12,[16,15]]]],[8,10],[-1,-2,[],[]],[[8,14],[[12,[16,15]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[8,10],[-1,13,[]],[-1,13,[]],[[6,23,[25,[24]]],[[12,[16,15]]]]],"c":[],"p":[[5,"AxDeviceContainer",0],[5,"AllDevices",0],[1,"str"],[6,"AxDeviceEnum",0],[6,"DeviceType",48],[10,"BlockDriverOps",48],[10,"DisplayDriverOps",48],[10,"NetDriverOps",48],[1,"bool"],[1,"usize"],[6,"Option",113],[6,"Result",114],[5,"TypeId",115],[5,"NetBufPtr",116],[6,"DevError",48],[1,"tuple"],[10,"BaseDriverOps",48],[5,"FrameBuffer",117],[5,"Formatter",118],[5,"Error",118],[5,"DisplayInfo",117],[5,"EthernetAddress",116],[1,"u64"],[1,"u8"],[1,"slice"],[8,"DevResult",48]],"b":[]},\
"axerrno":{"doc":"Error code definition used by ArceOS.","t":"PPGIPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGIPPPPPPPPPPPPPPNNQQNNNNNNNNQNNNNNNNNNNNNNNNNNNN","n":["AddrInUse","AlreadyExists","AxError","AxResult","BadAddress","BadState","ConnectionRefused","ConnectionReset","DirectoryNotEmpty","E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EADV","EAFNOSUPPORT","EAGAIN","EALREADY","EBADE","EBADF","EBADFD","EBADMSG","EBADR","EBADRQC","EBADSLT","EBFONT","EBUSY","ECANCELED","ECHILD","ECHRNG","ECOMM","ECONNABORTED","ECONNREFUSED","ECONNRESET","EDEADLK","EDESTADDRREQ","EDOM","EDOTDOT","EDQUOT","EEXIST","EFAULT","EFBIG","EHOSTDOWN","EHOSTUNREACH","EHWPOISON","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","EISNAM","EKEYEXPIRED","EKEYREJECTED","EKEYREVOKED","EL2HLT","EL2NSYNC","EL3HLT","EL3RST","ELIBACC","ELIBBAD","ELIBEXEC","ELIBMAX","ELIBSCN","ELNRNG","ELOOP","EMEDIUMTYPE","EMFILE","EMLINK","EMSGSIZE","EMULTIHOP","ENAMETOOLONG","ENAVAIL","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOANO","ENOBUFS","ENOCSI","ENODATA","ENODEV","ENOENT","ENOEXEC","ENOKEY","ENOLCK","ENOLINK","ENOMEDIUM","ENOMEM","ENOMSG","ENONET","ENOPKG","ENOPROTOOPT","ENOSPC","ENOSR","ENOSTR","ENOSYS","ENOTBLK","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTNAM","ENOTRECOVERABLE","ENOTSOCK","ENOTTY","ENOTUNIQ","ENXIO","EOPNOTSUPP","EOVERFLOW","EOWNERDEAD","EPERM","EPFNOSUPPORT","EPIPE","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","ERANGE","EREMCHG","EREMOTE","EREMOTEIO","ERESTART","ERFKILL","EROFS","ESHUTDOWN","ESOCKTNOSUPPORT","ESPIPE","ESRCH","ESRMNT","ESTALE","ESTRPIPE","ETIME","ETIMEDOUT","ETOOMANYREFS","ETXTBSY","EUCLEAN","EUNATCH","EUSERS","EXDEV","EXFULL","Err","Err","Interrupted","InvalidData","InvalidInput","Io","IsADirectory","LinuxError","LinuxResult","NoMemory","NotADirectory","NotConnected","NotFound","Ok","Ok","PermissionDenied","ResourceBusy","StorageFull","Timeout","UnexpectedEof","Unsupported","WouldBlock","WriteZero","as_str","as_str","ax_err","ax_err_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","code","code","ensure","eq","eq","fmt","fmt","fmt","fmt","from","from","from","into","into","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"axerrno"],[195,"core::fmt"],[196,"core::fmt"],[197,"core::any"]],"d":["A socket address could not be bound because the address is …","An entity already exists, often a file.","The error type used by ArceOS.","A specialized <code>Result</code> type with <code>AxError</code> as the error type.","Bad address.","Bad internal state.","The connection was refused by the remote server,","The connection was reset by the remote server.","A non-empty directory was specified where an empty …","Argument list too long","Permission denied","Address already in use","Cannot assign requested address","Advertise error","Address family not supported by protocol","Try again","Operation already in progress","Invalid exchange","Bad file number","File descriptor in bad state","Not a data message","Invalid request descriptor","Invalid request code","Invalid slot","Bad font file format","Device or resource busy","Operation Canceled","No child processes","Channel number out of range","Communication error on send","Software caused connection abort","Connection refused","Connection reset by peer","Resource deadlock would occur","Destination address required","Math argument out of domain of func","RFS specific error","Quota exceeded","File exists","Bad address","File too large","Host is down","No route to host","Memory page has hardware error","Identifier removed","Illegal byte sequence","Operation now in progress","Interrupted system call","Invalid argument","I/O error","Transport endpoint is already connected","Is a directory","Is a named type file","Key has expired","Key was rejected by service","Key has been revoked","Level 2 halted","Level 2 not synchronized","Level 3 halted","Level 3 reset","Can not access a needed shared library","Accessing a corrupted shared library","Cannot exec a shared library directly","Attempting to link in too many shared libraries",".lib section in a.out corrupted","Link number out of range","Too many symbolic links encountered","Wrong medium type","Too many open files","Too many links","Message too long","Multihop attempted","File name too long","No XENIX semaphores available","Network is down","Network dropped connection because of reset","Network is unreachable","File table overflow","No anode","No buffer space available","No CSI structure available","No data available","No such device","No such file or directory","Exec format error","Required key not available","No record locks available","Link has been severed","No medium found","Out of memory","No message of desired type","Machine is not on the network","Package not installed","Protocol not available","No space left on device","Out of streams resources","Device not a stream","Invalid system call number","Block device required","Transport endpoint is not connected","Not a directory","Directory not empty","Not a XENIX named type file","State not recoverable","Socket operation on non-socket","Not a typewriter","Name not unique on network","No such device or address","Operation not supported on transport endpoint","Value too large for defined data type","Owner died","Operation not permitted","Protocol family not supported","Broken pipe","Protocol error","Protocol not supported","Protocol wrong type for socket","Math result not representable","Remote address changed","Object is remote","Remote I/O error","Interrupted system call should be restarted","Operation not possible due to RF-kill","Read-only file system","Cannot send after transport endpoint shutdown","Socket type not supported","Illegal seek","No such process","Srmount error","Stale file handle","Streams pipe error","Timer expired","Connection timed out","Too many references: cannot splice","Text file busy","Structure needs cleaning","Protocol driver not attached","Too many users","Cross-device link","Exchange full","Contains the error value","Contains the error value","Syscall interrupted by a caught signal","Data not valid for the operation were encountered.","Invalid parameter/argument.","Input/output error.","The filesystem object is, unexpectedly, a directory.","Linux specific error codes defined in <code>errno.h</code>.","A specialized <code>Result</code> type with <code>LinuxError</code> as the error …","Not enough space/cannot allocate memory.","A filesystem object is, unexpectedly, not a directory.","The network operation failed because it was not connected …","The requested entity is not found.","Contains the success value","Contains the success value","The operation lacked the necessary privileges to complete.","Device or resource is busy.","The underlying storage (typically, a filesystem) is full.","Syscall timed out","An error returned when an operation could not be completed …","This operation is unsupported or unimplemented.","The operation needs to block to complete, but the blocking …","An error returned when an operation could not be completed …","Returns the error description.","Returns the error description.","Convenience method to construct an <code>Err(AxError)</code> type while …","Convenience method to construct an <code>AxError</code> type while …","","","","","","","Returns the error code value in <code>i32</code>.","Returns the error code value in <code>i32</code>.","Ensure a condition is true. If it is not, return from the …","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[3,3,0,0,3,3,3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,10,11,3,3,3,3,3,0,0,3,3,3,3,10,11,3,3,3,3,3,3,3,3,1,3,0,0,1,3,1,3,1,3,1,3,0,1,3,1,1,3,3,1,1,3,1,3,1,1,3,3,1,3,1,3],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,2],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[3,3],[1,4],[3,4],0,[[1,1],5],[[3,3],5],[[1,6],7],[[1,6],7],[[3,6],7],[[3,6],7],[-1,-1,[]],[3,1],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[4,[[8,[1,-1]]],[]],[4,[[8,[3,-1]]],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]]],"c":[],"p":[[6,"LinuxError",0],[1,"str"],[6,"AxError",0],[1,"i32"],[1,"bool"],[5,"Formatter",195],[8,"Result",195],[6,"Result",196],[5,"TypeId",197],[8,"AxResult",0],[8,"LinuxResult",0]],"b":[[178,"impl-Debug-for-LinuxError"],[179,"impl-Display-for-LinuxError"],[180,"impl-Debug-for-AxError"],[181,"impl-Display-for-AxError"]]},\
"axfeat":{"doc":"Top-level feature selection for ArceOS.","t":"","n":[],"q":[],"d":[],"i":[],"f":[],"c":[],"p":[],"b":[]},\
"axfs":{"doc":"ArceOS filesystem module.","t":"SCEECHPPPPFFPPFPIFFIKFKGPPPKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNHHNNHNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNHNCHMNNHNNNHNNNHHHNMNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHMNNNNFKTTTFTTPTTPKKGFPTTTFPPTTTTTTTTTTTPPPPSTSSSTOONNMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNPPPIFFPFPIIIKFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["BLOCK_SIZE","api","axfs_devfs","axfs_ramfs","fops","init_filesystems","BlockDevice","CharDevice","Current","Dir","DirBuilder","DirEntry","End","Fifo","File","File","FileType","Metadata","OpenOptions","Permissions","Read","ReadDir","Seek","SeekFrom","Socket","Start","SymLink","Write","append","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canonicalize","clone","clone","clone","clone_into","clone_into","clone_into","create","create","create","create_dir","create_dir_all","create_new","create_new","current_dir","default","eq","executable","executable","file_name","file_type","file_type","flush","flush","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_attr","into","into","into","into","into","into","into","into_iter","is_dir","is_file","len","lookup","metadata","metadata","new","new","next","open","open","options","path","path_exists","permissions","port","read","read","read","read","read_dir","read_exact","read_full","read_to_end","read_to_string","read_to_string","readable","recursive","remove_dir","remove_file","rename","rewind","seek","seek","set_current_dir","set_len","set_permissions","size","stream_position","to_owned","to_owned","to_owned","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","writable","write","write","write","write","write_all","write_fmt","AccessMode","AsAny","BINARY","CLOEXEC","CREATE","ConsoleWinSize","DIR","DSYNC","DirDesc","EXCL","EXCLUSIVE","FileDesc","FileExt","FileIO","FileIOType","Kstat","Link","NOCTTY","NOFOLLOW","NON_BLOCK","OpenFlags","Other","Pipe","RDONLY","RDWR","S_IRGRP","S_IROTH","S_IRUSR","S_IWGRP","S_IWOTH","S_IWUSR","S_IXGRP","S_IXOTH","S_IXUSR","Socket","Stderr","Stdin","Stdout","TCGETS","TEXT","TIOCGPGRP","TIOCGWINSZ","TIOCSPGRP","WRONLY","_pad0","_pad1","all","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","complement","complement","contains","contains","creatable","default","default","default","difference","difference","empty","empty","eq","executable","executable","extend","extend","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_name","from_name","get_path","get_stat","get_status","get_type","in_exceptional_conditions","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into_iter","into_iter","ioctl","is_all","is_all","is_close_on_exec","is_dir","is_empty","is_empty","is_hang_up","iter","iter","iter_names","iter_names","new_creatable","not","not","print_content","read","read_from_seek","read_write","readable","readable","readable","ready_to_read","ready_to_write","remove","remove","seek","set","set","set_close_on_exec","set_status","st_atime_nsec","st_atime_sec","st_blksize","st_blocks","st_ctime_nsec","st_ctime_sec","st_dev","st_gid","st_ino","st_mode","st_mtime_nsec","st_mtime_sec","st_nlink","st_rdev","st_size","st_uid","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","truncate","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","union","writable","writable","writable","write","write_to_seek","BlockDevice","CharDevice","Dir","DirEntry","Directory","Disk","Fifo","File","File","FileAttr","FilePerm","FileType","MyFileSystemIf","OpenOptions","Socket","SymLink","append","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create","create_dir","create_file","create_new","drop","drop","executable","flush","fmt","from","from","from","from","get_attr","into","into","into","into","new","new","new_myfs","open","open_dir","open_dir_at","open_file_at","position","read","read","read_at","read_dir","read_one","readable","remove_dir","remove_file","rename","seek","set_position","size","to_owned","to_owned","truncate","truncate","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","writable","write","write","write_at","write_one"],"q":[[0,"axfs"],[6,"axfs::api"],[175,"axfs::api::port"],[420,"axfs::fops"],[516,"axdriver::dummy"],[517,"axdriver::structs::imp"],[518,"core::any"],[519,"alloc::string"],[520,"axerrno"],[521,"axerrno"],[522,"core::fmt"],[523,"core::fmt"],[524,"core::option"],[525,"alloc::vec"],[526,"core::any"],[527,"core::fmt"],[528,"bitflags::iter"],[529,"bitflags::iter"],[530,"driver_common"]],"d":["The block size of the file system.","<code>std::fs</code>-like high-level filesystem manipulation operations.","","","Low-level filesystem operations.","Initializes filesystems by block devices.","Block device","Character device","Sets the offset to the current position plus the specified …","Directory","A builder used to create directories in various manners.","Entries returned by the <code>ReadDir</code> iterator.","Sets the offset to the size of this object plus the …","FIFO (named pipe)","An object providing access to an open file on the …","Regular file","A structure representing a type of file with accessors for …","Metadata information about a file.","Options and flags which can be used to configure how a …","Representation of the various permissions on a file.","The <code>Read</code> trait allows for reading bytes from a source.","Iterator over the entries in a directory.","The <code>Seek</code> trait provides a cursor which can be moved within …","Enumeration of possible methods to seek within an I/O …","Socket","Sets the offset to the provided number of bytes.","Symbolic link","A trait for objects which are byte-oriented sinks.","Sets the option for the append mode.","","","","","","","","","","","","","","","Returns the number of blocks allocated to the file, in …","","","","","","","","","","","","","","","Returns the canonical, absolute form of a path with all …","","","","","","","Creates the specified directory with the options …","Opens a file in write-only mode.","Sets the option to create a new file, or open it if it …","Creates a new, empty directory at the provided path.","Recursively create a directory and all of its parent …","Creates a new file in read-write mode; error if the file …","Sets the option to create a new file, failing if it …","Returns the current working directory as a <code>String</code>.","","","Whether the file is executable.","","Returns the bare file name of this directory entry without …","Returns the file type for the file that this entry points …","Returns the file type for this metadata.","Flush this output stream, ensuring that all intermediately …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the file attributes.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if this metadata is for a directory. The …","Returns <code>true</code> if this metadata is for a regular file. The …","Returns the size of the file, in bytes, this metadata is …","Look up a file by a given path.","Given a path, query the file system to get information …","Queries metadata about the underlying file.","Creates a new set of options with default mode/security …","Creates a blank new set of options ready for configuration.","","Attempts to open a file in read-only mode.","Opens a file at <code>path</code> with the options specified by <code>self</code>.","Returns a new OpenOptions object.","Returns the full path to the file that this entry …","Check if a path exists.","Returns the permissions of the file this metadata is for.","定义与文件I/O操作相关的trait泛型","Read the entire contents of a file into a bytes vector.","Pull some bytes from this source into the specified …","","Sets the option for read access.","Returns an iterator over the entries within a directory.","Read the exact number of bytes required to fill <code>buf</code>.","Read the exact number of bytes required to fill <code>buf</code>.","Read all bytes until EOF in this source, placing them into …","Read the entire contents of a file into a string.","Read all bytes until EOF in this source, appending them to …","","Indicates that directories should be created recursively, …","Removes an empty directory.","Removes a file from the filesystem.","Rename a file or directory to a new name. Delete the …","Rewind to the beginning of a stream.","Seek to an offset, in bytes, in a stream.","","Changes the current working directory to the specified …","Truncates or extends the underlying file, updating the …","Sets the permissions of the file this metadata is for.","Returns the total size of this file in bytes.","Returns the current seek position from the start of the …","","","","To truncate the file to a specified length.","Sets the option for truncating a previous file.","","","","","","","","","","","","","","","","","","","","","","","Write a slice as the entire contents of a file.","Write a buffer into this writer, returning how many bytes …","","Sets the option for write access.","Attempts to write an entire buffer into this writer.","Writes a formatted string into this writer, returning any …","指定文件打开时的权限","<code>FileExt</code> 需要满足 <code>AsAny</code> 的要求，即可以转化为 …","…","在 exec 时需关闭","如文件不存在，可创建它","the size of the console window","是否是目录","对这个文件的输出需符合 IO …","目录","…","确认一定是创建文件。如文件已存在，返回 …","文件","用于给虚存空间进行懒分配","File I/O trait. …","文件类型","文件系统信息","链接","…","…","非阻塞读写?(虽然不知道为什么但 date.lua …","指定文件打开时的权限","其他","管道","只读","读写","用户组读权限","其他用户读权限","用户读权限","用户组写权限","其他用户写权限","用户写权限","用户组执行权限","其他用户执行权限","用户执行权限","Socket","标准错误","标准输入","标准输出","IOCTL系统调用支持","要求把 CR-LF 都换成 LF","","","","只能写入","padding","padding","Get a flags value with all known bits set.","Get a flags value with all known bits set.","把当前对象转化为 <code>Any</code> 类型，供后续 downcast …","","","","","","供 downcast_mut 使用","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","获取创建权限","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","whether the file is executable","whether the file is executable","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","刷新操作","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","获取路径","获取文件信息","获取文件状态","获取类型","处于“意外情况”。在 (p)select 和 (p)poll …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","To control the file descriptor","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","获取是否需要在 <code>exec()</code> 时关闭","获取是否是目录","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","…","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","获取创建新文件权限 …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","debug","读取操作","Read from position without changing cursor.","获得文件的读/写权限","whether the file is readable","whether the file is readable","获取读权限","已准备好读。对于 pipe …","已准备好写。对于 pipe …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","移动指针操作","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","设置 close_on_exec 位 设置成功返回false","设置文件状态","最后一次访问时间(纳秒)","最后一次访问时间(秒)","块大小","块个数","最后一次改变状态时间(纳秒)","最后一次改变状态时间(秒)","设备","用户组id","inode 编号","文件类型","最后一次修改时间(纳秒)","最后一次修改时间(秒)","硬链接数","设备号","文件大小","用户id","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","截断文件到指定长度","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","whether the file is writable","whether the file is writable","获取写权限","写入操作","Write to position without changing cursor.","Block device","Character device","Directory","Alias of <code>axfs_vfs::VfsDirEntry</code>.","An opened directory object, with open permissions and a …","A disk device with a cursor.","FIFO (named pipe)","An opened file object, with open permissions and a cursor.","Regular file","Alias of <code>axfs_vfs::VfsNodeAttr</code>.","Alias of <code>axfs_vfs::VfsNodePerm</code>.","Alias of <code>axfs_vfs::VfsNodeType</code>.","The interface to define custom filesystems in user apps.","Options and flags which can be used to configure how a …","Socket","Symbolic link","Sets the option for the append mode.","","","","","","","","","","","","","","","","","","","","","Sets the option to create a new file, or open it if it …","Creates an empty directory at the path relative to this …","Creates an empty file at the path relative to this …","Sets the option to create a new file, failing if it …","","","whether the file is executable.","Flushes the file, writes all buffered data to the …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets the file attributes.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new disk.","Creates a blank new set of options ready for configuration.","Creates a new instance of the filesystem with …","Opens a file at the path relative to the current …","Opens a directory at the path relative to the current …","Opens a directory at the path relative to this directory. …","Opens a file at the path relative to this directory. …","Get the position of the cursor.","Reads the file at the current position. Returns the number …","Sets the option for read access.","Reads the file at the given position. Returns the number …","Reads directory entries starts from the current position …","Read within one block, returns the number of bytes read.","whether the file is readable.","Removes a directory at the path relative to this directory.","Removes a file at the path relative to this directory.","Rename a file or directory to a new name. Delete the …","Sets the cursor of the file to the specified offset. …","Set the position of the cursor.","Get the size of the disk.","","","Truncates the file to the specified size.","Sets the option for truncating a previous file.","","","","","","","","","","","","","whether the file is writable.","Writes the file at the current position. Returns the …","Sets the option for write access.","Writes the file at the given position. Returns the number …","Write within one block, returns the number of bytes …"],"i":[0,0,0,0,0,0,16,16,12,16,0,0,12,16,0,16,0,0,0,0,0,0,0,0,16,12,16,0,4,25,12,15,7,14,13,4,25,12,15,7,14,13,4,7,25,12,15,7,14,13,4,25,12,15,7,14,13,4,0,12,13,4,12,13,4,14,13,4,0,0,13,4,0,14,12,13,13,15,15,7,17,13,12,15,7,14,4,25,12,15,7,14,13,4,13,25,12,15,7,14,13,4,25,7,7,7,0,0,13,14,4,25,13,4,13,15,0,7,0,0,30,13,4,0,30,30,30,0,30,13,14,0,0,0,33,33,13,0,13,7,7,33,12,13,4,13,4,25,12,15,7,14,13,4,25,12,15,7,14,13,4,25,12,15,7,14,13,4,13,0,17,13,4,17,17,0,0,37,37,37,0,37,37,43,37,37,43,0,0,0,0,43,37,37,37,0,43,43,37,37,38,38,38,38,38,38,38,38,38,43,43,43,43,0,37,0,0,0,37,42,42,37,38,39,42,37,43,38,44,39,42,37,43,38,44,37,38,37,38,37,38,37,38,37,37,38,38,37,38,37,38,42,37,43,38,44,42,37,43,38,44,42,37,43,38,44,42,37,43,38,44,37,38,37,38,37,42,37,44,37,38,37,38,43,45,46,37,38,46,42,37,37,37,37,37,43,38,38,38,38,42,37,37,43,38,38,44,37,38,37,37,38,38,37,38,37,38,37,38,46,46,46,46,46,37,38,37,38,37,38,42,37,43,38,44,37,38,46,37,38,37,37,37,38,46,37,38,37,38,37,37,38,46,46,45,37,45,46,37,46,46,37,38,46,37,38,46,46,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,37,38,37,38,37,38,42,37,43,38,44,37,38,46,42,37,43,38,44,42,37,43,38,44,42,37,43,38,44,37,38,45,46,37,46,45,59,59,59,0,0,0,59,0,59,0,0,0,0,0,59,59,51,54,53,52,51,54,53,52,51,54,53,52,51,54,53,52,51,52,51,52,51,51,53,53,51,53,52,52,52,51,54,53,52,51,52,54,53,52,51,54,51,60,52,53,53,53,54,52,51,52,53,54,52,53,53,53,52,54,54,52,51,52,51,54,53,52,51,54,53,52,51,54,53,52,51,52,52,51,52,54],"f":[0,0,0,0,0,[[[2,[1]]],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[4,5],4],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[7,8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[9,[[11,[10]]]],[12,12],[13,13],[4,4],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[14,9],[[11,[3]]]],[9,[[11,[13]]]],[[4,5],4],[9,[[11,[3]]]],[9,[[11,[3]]]],[9,[[11,[13]]]],[[4,5],4],[[],[[11,[10]]]],[[],14],[[12,12],5],[13,5],[13,5],[15,10],[15,16],[7,16],[17,[[19,[3,18]]]],[13,[[11,[3]]]],[[12,20],[[19,[3,21]]]],[[15,20],22],[[7,20],22],[[14,20],22],[[4,20],22],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[13,[[11,[23]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[7,5],[7,5],[7,8],[9,[[11,[24]]]],[9,[[11,[7]]]],[13,[[11,[7]]]],[[],14],[[],4],[25,[[26,[[11,[15]]]]]],[9,[[11,[13]]]],[[4,9],[[11,[13]]]],[[],4],[15,10],[9,5],[7,27],0,[9,[[11,[[29,[28]]]]]],[[30,[31,[28]]],[[19,[32,18]]]],[[13,[31,[28]]],[[11,[32]]]],[[4,5],4],[9,[[11,[25]]]],[[30,[31,[28]]],[[19,[3,18]]]],[[30,[31,[28]]],[[19,[32,18]]]],[[30,[29,[28]]],[[19,[32,18]]]],[9,[[11,[10]]]],[[30,10],[[19,[32,18]]]],[13,5],[[14,5],14],[9,[[11,[3]]]],[9,[[11,[3]]]],[[9,9],[[11,[3]]]],[33,[[19,[3,18]]]],[[33,12],[[19,[8,18]]]],[[13,12],[[11,[8]]]],[9,[[11,[3]]]],[[13,8],[[11,[3]]]],[[7,27],3],[7,8],[33,[[19,[8,18]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[13,32],[[11,[3]]]],[[4,5],4],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[13,5],[[9,-1],[[11,[3]]],[[35,[[31,[28]]]]]],[[17,[31,[28]]],[[19,[32,18]]]],[[13,[31,[28]]],[[11,[32]]]],[[4,5],4],[[17,[31,[28]]],[[19,[3,18]]]],[[17,36],[[19,[3,18]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],37],[[],38],[39,6],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[39,6],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[[37,37],37],[[38,38],38],[[37,37],3],[[38,38],3],[[37,37],37],[[38,38],38],[[37,37],3],[[38,38],3],[37,40],[37,40],[38,41],[38,41],[[37,37],37],[[38,38],38],[[37,37],3],[[38,38],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,42],[37,37],[43,43],[38,38],[44,44],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[37,37],[38,38],[[37,37],5],[[38,38],5],[37,5],[[],42],[[],37],[[],44],[[37,37],37],[[38,38],38],[[],37],[[],38],[[43,43],5],[45,5],[46,5],[[37,-1],3,[[48,[],[[47,[37]]]]]],[[38,-1],3,[[48,[],[[47,[38]]]]]],[46,[[11,[3]]]],[[42,20],22],[[37,20],22],[[37,20],22],[[37,20],22],[[37,20],22],[[37,20],22],[[43,20],22],[[38,20],22],[[38,20],22],[[38,20],22],[[38,20],22],[-1,-1,[]],[-1,-1,[]],[32,37],[-1,-1,[]],[-1,-1,[]],[32,38],[-1,-1,[]],[40,[[26,[37]]]],[41,[[26,[38]]]],[40,37],[40,37],[41,38],[41,38],[40,37],[41,38],[-1,37,[[48,[],[[47,[37]]]]]],[-1,38,[[48,[],[[47,[38]]]]]],[9,[[26,[37]]]],[9,[[26,[38]]]],[46,10],[46,[[11,[42]]]],[46,37],[46,43],[46,5],[[37,37],3],[[38,38],3],[[37,37],37],[[38,38],38],[[37,37],5],[[38,38],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[37,-1,[]],[38,-1,[]],[[46,32,32],[[11,[3]]]],[37,5],[38,5],[37,5],[37,5],[37,5],[38,5],[46,5],[37,[[49,[37]]]],[38,[[49,[38]]]],[37,[[50,[37]]]],[38,[[50,[38]]]],[37,5],[37,37],[38,38],[46,3],[[46,[31,[28]]],[[11,[32]]]],[[45,12,[31,[28]]],[[11,[32]]]],[37,[[3,[5,5]]]],[45,5],[46,5],[37,5],[46,5],[46,5],[[37,37],3],[[38,38],3],[[46,12],[[11,[8]]]],[[37,37,5],3],[[38,38,5],3],[[46,5],5],[[46,37],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[37,37],37],[[38,38],38],[[37,37],3],[[38,38],3],[[37,37],37],[[38,38],38],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[37,37],3],[[38,38],3],[[46,32],[[11,[3]]]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[[37,37],37],[[38,38],38],[45,5],[46,5],[37,5],[[46,[31,[28]]],[[11,[32]]]],[[45,12,[31,[28]]],[[11,[32]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[51,5],3],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[52,52],[51,51],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[51,5],3],[[53,9],11],[[53,9],[[11,[24]]]],[[51,5],3],[53,3],[52,3],[52,5],[52,11],[[51,20],22],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[52,[[11,[23]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,54],[[],51],[54,[[56,[55]]]],[[9,51],[[11,[52]]]],[[9,51],[[11,[53]]]],[[53,9,51],[[11,[53]]]],[[53,9,51],[[11,[52]]]],[54,8],[[52,[31,[28]]],[[11,[32]]]],[[51,5],3],[[52,8,[31,[28]]],[[11,[32]]]],[[53,[31,[57]]],[[11,[32]]]],[[54,[31,[28]]],[[58,[32]]]],[52,5],[[53,9],11],[[53,9],11],[[53,9,9],11],[[52,12],[[11,[8]]]],[[54,8],3],[54,8],[-1,-2,[],[]],[-1,-2,[],[]],[[52,8],11],[[51,5],3],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[52,5],[[52,[31,[28]]],[[11,[32]]]],[[51,5],3],[[52,8,[31,[28]]],[[11,[32]]]],[[54,[31,[28]]],[[58,[32]]]]],"c":[],"p":[[8,"AxBlockDevice",516],[5,"AxDeviceContainer",517],[1,"tuple"],[5,"OpenOptions",6],[1,"bool"],[10,"Any",518],[5,"Metadata",6],[1,"u64"],[1,"str"],[5,"String",519],[8,"AxResult",520],[6,"SeekFrom",6],[5,"File",6],[5,"DirBuilder",6],[5,"DirEntry",6],[8,"FileType",6],[10,"Write",6],[6,"AxError",520],[6,"Result",521],[5,"Formatter",522],[5,"Error",522],[8,"Result",522],[8,"FileAttr",420],[8,"VfsNodeRef",523],[5,"ReadDir",6],[6,"Option",524],[8,"Permissions",6],[1,"u8"],[5,"Vec",525],[10,"Read",6],[1,"slice"],[1,"usize"],[10,"Seek",6],[5,"TypeId",518],[10,"AsRef",526],[5,"Arguments",522],[5,"OpenFlags",175],[5,"AccessMode",175],[10,"AsAny",175],[1,"u32"],[1,"u16"],[5,"Kstat",175],[6,"FileIOType",175],[5,"ConsoleWinSize",175],[10,"FileExt",175],[10,"FileIO",175],[17,"Item"],[10,"IntoIterator",527],[5,"Iter",528],[5,"IterNames",528],[5,"OpenOptions",420],[5,"File",420],[5,"Directory",420],[5,"Disk",420],[10,"VfsOps",523],[5,"Arc",529],[8,"DirEntry",420],[8,"DevResult",530],[8,"FileType",420],[10,"MyFileSystemIf",420]],"b":[[75,"impl-File"],[76,"impl-FileExt-for-File"],[243,"impl-Flags-for-OpenFlags"],[244,"impl-OpenFlags"],[245,"impl-AccessMode"],[246,"impl-Flags-for-AccessMode"],[290,"impl-UpperHex-for-OpenFlags"],[291,"impl-LowerHex-for-OpenFlags"],[292,"impl-Binary-for-OpenFlags"],[293,"impl-Octal-for-OpenFlags"],[294,"impl-Debug-for-OpenFlags"],[296,"impl-Binary-for-AccessMode"],[297,"impl-Octal-for-AccessMode"],[298,"impl-LowerHex-for-AccessMode"],[299,"impl-UpperHex-for-AccessMode"],[309,"impl-Flags-for-OpenFlags"],[310,"impl-OpenFlags"],[311,"impl-Flags-for-AccessMode"],[312,"impl-AccessMode"]]},\
"axfs_devfs":{"doc":"Device filesystem used by ArceOS.","t":"FFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["DeviceFileSystem","DirNode","NullDev","RandomDev","ZeroDev","add","add","as_any","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","create","create","create","create","default","default","from","from","from","from","from","fsync","get_attr","get_attr","get_attr","get_attr","into","into","into","into","into","lookup","lookup","lookup","lookup","mkdir","mkdir","mount","new","parent","read_at","read_at","read_at","read_at","read_dir","read_dir","read_dir","read_dir","remove","remove","remove","remove","root_dir","truncate","truncate","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","write_at","write_at","write_at","write_at"],"q":[[0,"axfs_devfs"],[87,"axfs_vfs"],[88,"core::any"],[89,"axfs_vfs::structs"],[90,"axfs_vfs"],[91,"core::option"],[92,"axfs_vfs::structs"],[93,"core::any"]],"d":["A device filesystem that implements <code>axfs_vfs::VfsOps</code>.","The directory node in the device filesystem.","A null device behaves like <code>/dev/null</code>.","A random device behaves like <code>/dev/random</code> or <code>/dev/urandom</code>.","A zero device behaves like <code>/dev/zero</code>.","Add a node to this directory.","Add a node to the root directory.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Create a subdirectory at this directory.","Create a subdirectory at the root directory.","","Create a new instance.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,1,5,1,7,8,9,1,7,8,9,5,1,7,8,9,5,1,7,8,9,8,5,1,7,8,9,5,1,1,7,8,9,1,7,8,9,5,1,7,8,9,1,5,5,5,1,1,7,8,9,1,7,8,9,1,7,8,9,5,1,7,8,9,1,7,8,9,5,1,7,8,9,5,1,7,8,9,5,1,7,8,9],"f":[0,0,0,0,0,[[1,2,3],4],[[5,2,3],4],[1,6],[7,6],[8,6],[9,6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,2,10],11],[[7,2,10],11],[[8,2,10],11],[[9,2,10],11],[[],8],[[],5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[1,11],[1,[[11,[12]]]],[7,[[11,[12]]]],[8,[[11,[12]]]],[9,[[11,[12]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[13,[1]],2],[[11,[3]]]],[[[13,[7]],2],[[11,[3]]]],[[[13,[8]],2],[[11,[3]]]],[[[13,[9]],2],[[11,[3]]]],[[[13,[1]],2],[[13,[1]]]],[[5,2],[[13,[1]]]],[[5,2,3],11],[[],5],[1,[[14,[3]]]],[[1,15,[17,[16]]],[[11,[18]]]],[[7,15,[17,[16]]],[[11,[18]]]],[[8,15,[17,[16]]],[[11,[18]]]],[[9,15,[17,[16]]],[[11,[18]]]],[[1,18,[17,[19]]],[[11,[18]]]],[[7,18,[17,[19]]],[[11,[18]]]],[[8,18,[17,[19]]],[[11,[18]]]],[[9,18,[17,[19]]],[[11,[18]]]],[[1,2],11],[[7,2],11],[[8,2],11],[[9,2],11],[5,3],[[1,15],11],[[7,15],11],[[8,15],11],[[9,15],11],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[[1,15,[17,[16]]],[[11,[18]]]],[[7,15,[17,[16]]],[[11,[18]]]],[[8,15,[17,[16]]],[[11,[18]]]],[[9,15,[17,[16]]],[[11,[18]]]]],"c":[],"p":[[5,"DirNode",0],[1,"str"],[8,"VfsNodeRef",87],[1,"tuple"],[5,"DeviceFileSystem",0],[10,"Any",88],[5,"NullDev",0],[5,"RandomDev",0],[5,"ZeroDev",0],[6,"VfsNodeType",89],[8,"VfsResult",87],[5,"VfsNodeAttr",89],[5,"Arc",90],[6,"Option",91],[1,"u64"],[1,"u8"],[1,"slice"],[1,"usize"],[5,"VfsDirEntry",89],[6,"Result",92],[5,"TypeId",88]],"b":[]},\
"axfs_ramfs":{"doc":"RAM filesystem used by ArceOS.","t":"FFEEFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["DirNode","FileNode","INTERRUPT","INTERRUPT","INTERRUPT","Interrupts","RamFileSystem","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","create","create","create","create_node","default","default","deref","exist","from","from","from","from","from","fsync","get_attr","get_attr","get_attr","get_entries","into","into","into","into","into","lookup","lookup","lookup","mount","new","new","parent","read_at","read_at","read_at","read_dir","read_dir","read_dir","remove","remove","remove","remove_node","root_dir","root_dir_node","truncate","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","write_at","write_at","write_at"],"q":[[0,"axfs_ramfs"],[83,"core::any"],[84,"axfs_vfs::structs"],[85,"axfs_vfs"],[86,"spin"],[87,"axfs_vfs::structs"],[88,"alloc::vec"],[89,"alloc::sync"],[90,"axfs_vfs"],[91,"axfs_vfs::structs"],[92,"core::any"]],"d":["The directory node in the RAM filesystem.","The file node in the RAM filesystem.","","","To record the interrupt count","The file node in the RAM filesystem, which records the …","A RAM filesystem that implements <code>axfs_vfs::VfsOps</code>.","","","","","","","","","","","","","","","","","Creates a new node with the given name and type in this …","","","","Checks whether a node with the given name exists in this …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns a string list of all entries in this directory.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","To get the environment variables of the application","Create a new instance.","","","","","","","","","","","Removes a node by the given name in this directory.","","Returns the root directory node in <code>Arc&lt;DirNode&gt;</code>.","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,3,4,1,3,8,9,4,1,3,8,9,4,1,3,4,1,8,4,9,1,1,3,8,9,4,1,1,3,4,1,1,3,8,9,4,1,3,4,8,3,8,1,1,3,4,1,3,4,1,3,4,1,8,8,1,3,4,1,3,8,9,4,1,3,8,9,4,1,3,8,9,4,1,3,4],"f":[0,0,0,0,0,0,0,[1,2],[3,2],[4,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,5,6],7],[[3,5,6],7],[[4,5,6],7],[[1,5,6],7],[[],8],[[],4],[9,[[10,[0]]]],[[1,5],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[1,7],[1,[[7,[12]]]],[3,[[7,[12]]]],[4,[[7,[12]]]],[1,[[14,[13]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[15,[1]],5],[[7,[16]]]],[[[15,[3]],5],[[7,[16]]]],[[[15,[4]],5],[[7,[16]]]],[[8,5,16],7],[[],3],[[],8],[1,[[17,[16]]]],[[1,18,[20,[19]]],[[7,[21]]]],[[3,18,[20,[19]]],[[7,[21]]]],[[4,18,[20,[19]]],[[7,[21]]]],[[1,21,[20,[22]]],[[7,[21]]]],[[3,21,[20,[22]]],[[7,[21]]]],[[4,21,[20,[22]]],[[7,[21]]]],[[1,5],7],[[3,5],7],[[4,5],7],[[1,5],7],[8,16],[8,[[15,[1]]]],[[1,18],7],[[3,18],7],[[4,18],7],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[[1,18,[20,[19]]],[[7,[21]]]],[[3,18,[20,[19]]],[[7,[21]]]],[[4,18,[20,[19]]],[[7,[21]]]]],"c":[],"p":[[5,"DirNode",0],[10,"Any",83],[5,"FileNode",0],[5,"Interrupts",0],[1,"str"],[6,"VfsNodeType",84],[8,"VfsResult",85],[5,"RamFileSystem",0],[5,"INTERRUPT",0],[8,"Mutex",86],[1,"bool"],[5,"VfsNodeAttr",84],[5,"String",87],[5,"Vec",88],[5,"Arc",89],[8,"VfsNodeRef",85],[6,"Option",90],[1,"u64"],[1,"u8"],[1,"slice"],[1,"usize"],[5,"VfsDirEntry",84],[6,"Result",91],[5,"TypeId",83]],"b":[]},\
"axfs_vfs":{"doc":"Virtual filesystem interfaces used by ArceOS.","t":"PPPPPPPPPPPPPFTTTPPPPPPPPPTTTTTTPPPPPPPPPFIFKFIGKIPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNH","n":["AddrInUse","AlreadyExists","BadAddress","BadState","BlockDevice","CharDevice","ConnectionRefused","ConnectionReset","Dir","DirectoryNotEmpty","Err","Fifo","File","FileSystemInfo","GROUP_EXEC","GROUP_READ","GROUP_WRITE","Interrupted","InvalidData","InvalidInput","Io","IsADirectory","NoMemory","NotADirectory","NotConnected","NotFound","OTHER_EXEC","OTHER_READ","OTHER_WRITE","OWNER_EXEC","OWNER_READ","OWNER_WRITE","Ok","PermissionDenied","ResourceBusy","Socket","StorageFull","SymLink","Timeout","UnexpectedEof","Unsupported","VfsDirEntry","VfsError","VfsNodeAttr","VfsNodeOps","VfsNodePerm","VfsNodeRef","VfsNodeType","VfsOps","VfsResult","WouldBlock","WriteZero","all","as_any","as_char","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","blocks","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","complement","contains","create","default","default_dir","default_file","difference","empty","entry_type","eq","extend","file_type","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","fsync","get_attr","impl_vfs_dir_default","impl_vfs_non_dir_default","insert","intersection","intersects","into","into","into","into","into","into_iter","is_all","is_block_device","is_char_device","is_dir","is_dir","is_empty","is_fifo","is_file","is_file","is_socket","is_symlink","iter","iter_names","lookup","mode","mount","name_as_bytes","new","new","new_dir","new_file","not","open","owner_executable","owner_readable","owner_writable","parent","path","perm","read_at","read_dir","release","remove","remove","rename","root_dir","rwx_buf","set","set_perm","size","statfs","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","toggle","truncate","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","umount","union","write_at","canonicalize"],"q":[[0,"axfs_vfs"],[191,"axfs_vfs::path"],[192,"core::any"],[193,"core::iter::traits::collect"],[194,"core::fmt"],[195,"core::fmt"],[196,"bitflags::iter"],[197,"bitflags::iter"],[198,"core::result"],[199,"core::any"]],"d":["A socket address could not be bound because the address is …","An entity already exists, often a file.","Bad address.","Bad internal state.","Block device","Character device","The connection was refused by the remote server,","The connection was reset by the remote server.","Directory","A non-empty directory was specified where an empty …","Contains the error value","FIFO (named pipe)","Regular file","Filesystem attributes.","Group has execute permission.","Group has read permission.","Group has write permission.","Syscall interrupted by a caught signal","Data not valid for the operation were encountered.","Invalid parameter/argument.","Input/output error.","The filesystem object is, unexpectedly, a directory.","Not enough space/cannot allocate memory.","A filesystem object is, unexpectedly, not a directory.","The network operation failed because it was not connected …","The requested entity is not found.","Others have execute permission.","Others have read permission.","Others have write permission.","Owner has execute permission.","Owner has read permission.","Owner has write permission.","Contains the success value","The operation lacked the necessary privileges to complete.","Device or resource is busy.","Socket","The underlying storage (typically, a filesystem) is full.","Symbolic link","Syscall timed out","An error returned when an operation could not be completed …","This operation is unsupported or unimplemented.","Directory entry.","Alias of <code>AxError</code>.","Node (file/directory) attributes.","Node (file/directory) operations.","Node (file/directory) permission mode.","A wrapper of <code>Arc&lt;dyn VfsNodeOps&gt;</code>.","Node (file/directory) type.","Filesystem operations.","Alias of <code>AxResult</code>.","The operation needs to block to complete, but the blocking …","An error returned when an operation could not be completed …","Get a flags value with all known bits set.","Convert <code>&amp;self</code> to <code>&amp;dyn Any</code> that can use <code>Any::downcast_ref</code>.","Returns a character representation of the node type.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Returns the number of blocks the node occupies on the disk.","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Create a new node with the given <code>path</code> in the directory","Creates an empty <code>VfsDirEntry</code>.","Returns the default permission for a directory.","Returns the default permission for a file.","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Returns the type of the entry.","","The bitwise or (<code>|</code>) of the bits in each flags value.","Returns the type of the node.","","","","","","","","Format the filesystem.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Flush the file, synchronize the data to disk.","Get the attributes of the node.","When implement <code>VfsNodeOps</code> on a directory node, add dummy …","When implement <code>VfsNodeOps</code> on a non-directory node, add …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Returns <code>true</code> if this node type is a block device.","Returns <code>true</code> if this node type is a char device.","Whether the node is a directory.","Tests whether this node type represents a directory.","Whether all bits in this flags value are unset.","Returns <code>true</code> if this node type is a fifo.","Whether the node is a file.","Tests whether this node type represents a regular file.","Returns <code>true</code> if this node type is a socket.","Tests whether this node type represents a symbolic link.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Lookup the node with given <code>path</code> in the directory.","Returns the underlying raw <code>st_mode</code> bits that contain the …","Do something when the filesystem is mounted.","Converts the name of the entry to a byte slice.","Creates a new <code>VfsDirEntry</code> with the given name and type.","Creates a new <code>VfsNodeAttr</code> with the given permission mode, …","Creates a new <code>VfsNodeAttr</code> for a directory, with the …","Creates a new <code>VfsNodeAttr</code> for a file, with the default …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Do something when the node is opened.","Whether the owner has execute permission.","Whether the owner has read permission.","Whether the owner has write permission.","Get the parent directory of this directory.","Utilities for path manipulation.","Returns the permission of the node.","Read data from the file at the given offset.","Read directory entries into <code>dirents</code>, starting from …","Do something when the node is closed.","Remove the node with the given <code>path</code> in the directory.","The intersection of a source flags value with the …","Renames or moves existing file or directory.","Get the root directory of the filesystem.","Returns a 9-bytes string representation of the permission.","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Sets the permission of the node.","Returns the size of the node.","Get the attributes of the filesystem.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Truncate the file to the given size.","","","","","","","","","","","","","","","","Do something when the filesystem is unmounted.","The bitwise or (<code>|</code>) of the bits in two flags values.","Write data to the file at the given offset.","Returns the canonical form of the path with all …"],"i":[33,33,33,33,4,4,33,33,4,33,12,4,4,0,1,1,1,33,33,33,33,33,33,33,33,33,1,1,1,1,1,1,12,33,33,4,33,4,33,33,33,0,0,0,0,0,0,0,0,0,33,33,1,2,4,1,1,1,1,1,1,1,1,8,29,13,8,1,4,29,13,8,1,4,8,1,4,8,1,4,1,1,2,13,1,1,1,1,13,4,1,8,8,1,1,1,1,1,4,18,29,13,8,1,4,1,1,1,1,1,1,2,2,0,0,1,1,1,29,13,8,1,4,1,1,4,4,8,4,1,4,8,4,4,4,1,1,2,1,18,13,13,8,8,8,1,2,1,1,1,2,0,8,2,2,2,2,1,2,18,1,1,8,8,18,1,1,1,8,1,4,1,2,29,13,8,1,4,29,13,8,1,4,29,13,8,1,4,18,1,2,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[2,3],[4,5],[[1,1],1],[[1,1],6],[[1,1],1],[[1,1],6],[1,7],[1,7],[[1,1],1],[[1,1],6],[8,9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[8,8],[1,1],[4,4],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[1,1],[[1,1],10],[[2,11,4],12],[[],13],[[],1],[[],1],[[1,1],1],[[],1],[13,4],[[4,4],10],[[1,-1],6,[[15,[],[[14,[1]]]]]],[8,4],[[8,16],17],[[1,16],17],[[1,16],17],[[1,16],17],[[1,16],17],[[1,16],17],[[4,16],17],[18,12],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[7,[[19,[1]]]],[7,1],[7,1],[7,1],[-1,1,[[15,[],[[14,[1]]]]]],[11,[[19,[1]]]],[2,12],[2,[[12,[8]]]],0,0,[[1,1],6],[[1,1],1],[[1,1],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,10],[4,10],[4,10],[8,10],[4,10],[1,10],[4,10],[8,10],[4,10],[4,10],[4,10],[1,[[20,[1]]]],[1,[[21,[1]]]],[[[22,[2]],11],[[12,[23]]]],[1,24],[[18,11,23],12],[13,[[26,[25]]]],[[11,4],13],[[1,4,9,9],8],[[9,9],8],[[9,9],8],[1,1],[2,12],[1,10],[1,10],[1,10],[2,[[19,[23]]]],0,[8,1],[[2,9,[26,[25]]],[[12,[27]]]],[[2,27,[26,[13]]],[[12,[27]]]],[2,12],[[2,11],12],[[1,1],6],[[2,11,11],12],[18,23],[1,[[28,[25]]]],[[1,1,10],6],[[8,1],6],[8,9],[18,[[12,[29]]]],[[1,1],1],[[1,1],6],[[1,1],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,1],6],[[2,9],12],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[18,12],[[1,1],1],[[2,9,[26,[25]]],[[12,[27]]]],[11,32]],"c":[],"p":[[5,"VfsNodePerm",0],[10,"VfsNodeOps",0],[10,"Any",192],[6,"VfsNodeType",0],[1,"char"],[1,"tuple"],[1,"u16"],[5,"VfsNodeAttr",0],[1,"u64"],[1,"bool"],[1,"str"],[8,"VfsResult",0],[5,"VfsDirEntry",0],[17,"Item"],[10,"IntoIterator",193],[5,"Formatter",194],[8,"Result",194],[10,"VfsOps",0],[6,"Option",195],[5,"Iter",196],[5,"IterNames",196],[5,"Arc",197],[8,"VfsNodeRef",0],[1,"u32"],[1,"u8"],[1,"slice"],[1,"usize"],[1,"array"],[5,"FileSystemInfo",0],[6,"Result",198],[5,"TypeId",192],[5,"String",199],[8,"VfsError",0]],"b":[[59,"impl-Flags-for-VfsNodePerm"],[60,"impl-VfsNodePerm"],[93,"impl-Octal-for-VfsNodePerm"],[94,"impl-LowerHex-for-VfsNodePerm"],[95,"impl-Debug-for-VfsNodePerm"],[96,"impl-UpperHex-for-VfsNodePerm"],[97,"impl-Binary-for-VfsNodePerm"],[106,"impl-VfsNodePerm"],[107,"impl-Flags-for-VfsNodePerm"]]},\
"axhal":{"doc":"ArceOS hardware abstraction layer, provides unified APIs …","t":"SCCCCCCCCHHHHCCCFFFFTTTTFFFTTTNNNNNNNNNNNNNNNNNNNONHHOOOOOHHNNNNNNNONNNNNNNOOOONNNNNHNONNNNNNNOHNONNNOONNNNNNOOOOOOOOOOOOOOOHHOOOOONNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNOHHHHOHHHHHHHIHHHTTTFFEETTTETNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNHONOHNNONNNNNNNNNNNHHHEEIEFENNNNNNNNNNFTTSTSTSSSTSITNNNNNNNNNNNHHNNNNNNNHHHNNNNNNNNNNNNNNNNNNNNNNNHNNNNNHNNNNNNNHNNNNNNFNNNNNNNNNNKMMMM","n":["KERNEL_PROCESS_ID","arch","console","cpu","irq","mem","misc","mp","paging","platform_init","platform_init_secondary","platform_name","set_tss_stack_top","time","tls","trap","ExtendedState","FxsaveArea","GdtStruct","IdtStruct","KCODE32_SELECTOR","KCODE64_SELECTOR","KDATA_SELECTOR","TSS_SELECTOR","TaskContext","TaskStateSegment","TrapFrame","UCODE32_SELECTOR","UCODE64_SELECTOR","UDATA_SELECTOR","app_init_context","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cs","default","disable_irqs","enable_irqs","error_code","ext_state","fcw","fdp","fip","first_into_user","flush_tlb","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fop","from","from","from","from","from","from","from","fs_base","fsw","ftw","fxsave_area","get_pc","get_ret_code","get_sp","get_syscall_args","get_syscall_num","halt","init","interrupt_stack_table","into","into","into","into","into","into","into","iomap_base","irqs_enabled","is_user","kstack_top","load","load","load_tss","mxcsr","mxcsr_mask","new","new","new","new","pointer","pointer","privilege_stack_table","r10","r11","r12","r13","r14","r15","r8","r9","rax","rbp","rbx","rcx","rdi","rdx","read_page_table_root","read_thread_pointer","rflags","rip","rsi","rsp","rsp","set_arg0","set_arg1","set_arg2","set_pc","set_ra","set_ret_code","set_tls","set_user_sp","ss","st","switch_to","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vector","wait_for_irqs","write_page_table_root","write_page_table_root0","write_thread_pointer","xmm","getchar","putchar","write_bytes","current_task_ptr","set_current_task_ptr","this_cpu_id","this_cpu_is_bsp","IrqHandler","dispatch_irq","register_handler","set_enable","DEVICE","EXECUTE","FREE","MemRegion","MemRegionFlags","PAGE_SIZE_4K","PhysAddr","READ","RESERVED","UNCACHED","VirtAddr","WRITE","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","complement","contains","difference","empty","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","insert","intersection","intersects","into","into","into_iter","is_all","is_empty","iter","iter_names","memory_regions","name","not","paddr","phys_to_virt","remove","set","size","sub","sub_assign","symmetric_difference","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","virt_to_phys","terminate","start_secondary_cpu","MappingFlags","PageSize","PageTable","PagingError","PagingIfImpl","PagingResult","alloc_frame","borrow","borrow_mut","dealloc_frame","from","into","phys_to_virt","try_from","try_into","type_id","Duration","MAX","MICROSECOND","MICROS_PER_SEC","MILLISECOND","MILLIS_PER_SEC","NANOSECOND","NANOS_PER_MICROS","NANOS_PER_MILLIS","NANOS_PER_SEC","SECOND","TIMER_IRQ_NUM","TimeValue","ZERO","abs_diff","add","add_assign","as_micros","as_millis","as_nanos","as_secs","as_secs_f32","as_secs_f64","borrow","borrow_mut","busy_wait","busy_wait_until","checked_add","checked_div","checked_mul","checked_sub","clone","clone_into","cmp","current_ticks","current_time","current_time_nanos","default","div","div_assign","div_duration_f32","div_duration_f64","div_f32","div_f64","eq","fmt","from","from_micros","from_millis","from_nanos","from_secs","from_secs_f32","from_secs_f64","hash","into","is_zero","mul","mul_assign","mul_f32","mul_f64","nanos_to_ticks","new","partial_cmp","saturating_add","saturating_mul","saturating_sub","set_oneshot_timer","sub","sub_assign","subsec_micros","subsec_millis","subsec_nanos","sum","sum","ticks_to_nanos","to_owned","try_from","try_from_secs_f32","try_from_secs_f64","try_into","type_id","TlsArea","alloc","borrow","borrow_mut","drop","from","into","tls_ptr","try_from","try_into","type_id","TrapHandler","handle_irq","handle_page_fault","handle_signal","handle_syscall"],"q":[[0,"axhal"],[16,"axhal::arch"],[171,"axhal::console"],[174,"axhal::cpu"],[178,"axhal::irq"],[182,"axhal::mem"],[257,"axhal::misc"],[258,"axhal::mp"],[259,"axhal::paging"],[275,"axhal::time"],[356,"axhal::tls"],[367,"axhal::trap"],[372,"memory_addr"],[373,"core::option"],[374,"core::fmt"],[375,"core::fmt"],[376,"x86_64::structures"],[377,"memory_addr"],[378,"core::iter::traits::collect"],[379,"bitflags::iter"],[380,"bitflags::iter"],[381,"core::cmp"],[382,"core::hash"],[383,"core::time"],[384,"page_table_entry"]],"d":["The kernel process ID, which is always 1.","Architecture-specific types and operations.","Console input and output.","CPU-related operations.","Interrupt management.","Physical memory management.","Miscellaneous operation, e.g. terminate the system.","Multi-core operations.","Page table manipulation.","Initializes the platform devices for the primary CPU.","Initializes the platform devices for secondary CPUs.","Returns the name of the platform.","set tss stack top","Time-related operations.","Thread Local Storage (TLS) support.","Trap handling.","Extended state of a task, such as FP/SIMD states.","A 512-byte memory region for the FXSAVE/FXRSTOR …","A wrapper of the Global Descriptor Table (GDT) with …","A wrapper of the Interrupt Descriptor Table (IDT).","Kernel code segment for 32-bit mode.","Kernel code segment for 64-bit mode.","Kernel data segment.","TSS segment.","Saved hardware states of a task.","In 64-bit mode the TSS holds information that is not …","Saved registers when a trap (interrupt or exception) …","User code segment for 32-bit mode.","User code segment for 64-bit mode.","User data segment.","用于第一次进入应用程序时的初始化","","","","","","","","","","","","","","","","","","","","","Makes the current CPU to ignore interrupts.","Allows the current CPU to respond to interrupts.","","Extended states, i.e., FP/SIMD states.","","","","To handle the first time into the user space","Flushes the TLB.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Thread Local Storage (TLS).","","","Memory region for the FXSAVE/FXRSTOR instruction.","获取 pc","获取 ret","获取 sp","获取所有 syscall 参数","获取 syscall id","Halt the current CPU.","Initializes the context for a new task, with the given …","The full 64-bit canonical forms of the interrupt stack …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The 16-bit offset to the I/O permission bit map from the …","Returns whether the current CPU is allowed to respond to …","Whether the trap is from userspace.","The kernel stack top of the task.","Loads the GDT into the CPU (executes the <code>lgdt</code> …","Loads the IDT into the CPU (executes the <code>lidt</code> instruction).","Loads the TSS into the CPU (executes the <code>ltr</code> instruction).","","","Constructs a new GDT struct that filled with the default …","Constructs a new IDT struct that filled with entries from …","Creates a new default context for a new task.","Creates a new TSS with zeroed privilege and interrupt …","Returns the GDT pointer (base and limit) that can be used …","Returns the IDT pointer (base and limit) that can be used …","The full 64-bit canonical forms of the stack pointers …","","","","","","","","","","","","","","","Reads the register that stores the current page table root.","Reads the thread pointer of the current CPU.","","","","","<code>RSP</code> after all callee-saved registers are pushed.","设置 arg0","设置 arg1","设置 arg2","设置 pc","设置返回地址","set the return code","设置TLS","To set the stack pointer","","","Switches to another task.","","","","","","","","","","","","","","","","","","","","","","","","","Relaxes the current CPU and waits for interrupts.","Writes the register to update the current page table root.","Writes the register to update the current page table root.","Writes the thread pointer of the current CPU.","","Reads a byte from the console, or returns <code>None</code> if no input …","Writes a byte to the console.","Write a slice of bytes to the console.","Gets the pointer to the current task with …","Sets the pointer to the current task with …","Returns the ID of the current CPU.","Returns whether the current CPU is the primary CPU (aka …","The type if an IRQ handler.","Dispatches the IRQ.","Registers an IRQ handler for the given IRQ.","Enables or disables the given IRQ.","Device memory. (e.g., MMIO regions)","Executable.","Free memory for allocation.","A physical memory region.","The flags of a physical memory region.","","","Readable.","Reserved memory, do not use for allocation.","Uncachable memory. (e.g., framebuffer)","","Writable.","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","The bitwise or (<code>|</code>) of the bits in each flags value.","The region flags, see <code>MemRegionFlags</code>.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Returns an iterator over all physical memory regions.","The region name, used for identification.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The start physical address of the region.","Converts a physical address to a virtual address.","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The size in bytes of the region.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","Converts a virtual address to a physical address.","Shutdown the whole system (in QEMU), including all CPUs.","Starts the given secondary CPU with its boot stack.","","","The architecture-specific page table.","","Implementation of <code>PagingIf</code>, to provide physical memory …","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","A <code>Duration</code> type to represent a span of time, typically …","The maximum duration.","The duration of one microsecond.","Number of microseconds in a second.","The duration of one millisecond.","Number of milliseconds in a second.","The duration of one nanosecond.","Number of nanoseconds in a microsecond.","Number of nanoseconds in a millisecond.","Number of nanoseconds in a second.","The duration of one second.","The timer IRQ number.","A measurement of the system clock.","A duration of zero time.","Computes the absolute difference between <code>self</code> and <code>other</code>.","","","Returns the total number of whole microseconds contained …","Returns the total number of whole milliseconds contained …","Returns the total number of nanoseconds contained by this …","Returns the number of <em>whole</em> seconds contained by this …","Returns the number of seconds contained by this <code>Duration</code> …","Returns the number of seconds contained by this <code>Duration</code> …","","","Busy waiting for the given duration.","Busy waiting until reaching the given deadline.","Checked <code>Duration</code> addition. Computes <code>self + other</code>, …","Checked <code>Duration</code> division. Computes <code>self / other</code>, …","Checked <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Checked <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","","","Returns the current clock time in hardware ticks.","Returns the current clock time in <code>TimeValue</code>.","Returns the current clock time in nanoseconds.","","","","Divide <code>Duration</code> by <code>Duration</code> and return <code>f32</code>.","Divide <code>Duration</code> by <code>Duration</code> and return <code>f64</code>.","Divide <code>Duration</code> by <code>f32</code>.","Divide <code>Duration</code> by <code>f64</code>.","","","Returns the argument unchanged.","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of whole …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","","Calls <code>U::from(self)</code>.","Returns true if this <code>Duration</code> spans no time.","","","Multiplies <code>Duration</code> by <code>f32</code>.","Multiplies <code>Duration</code> by <code>f64</code>.","Converts nanoseconds to hardware ticks.","Creates a new <code>Duration</code> from the specified number of whole …","","Saturating <code>Duration</code> addition. Computes <code>self + other</code>, …","Saturating <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Saturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …","Set a one-shot timer.","","","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in …","","","Converts hardware ticks to nanoseconds.","","","The checked version of <code>from_secs_f32</code>.","The checked version of <code>from_secs_f64</code>.","","","The memory region for thread-local storage.","Allocates the memory region for TLS, and initializes it.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns the pointer to the TLS static area.","","","","Trap handler interface.","Handles interrupt requests for the given IRQ number.","Handles page faults.","Handles signals.","Handles system calls for the given syscall ID and …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,0,0,0,11,11,11,5,8,11,12,5,13,14,6,8,11,12,5,13,14,6,5,6,5,6,5,5,0,0,5,14,13,13,13,0,0,8,11,12,5,13,14,6,13,8,11,12,5,13,14,6,14,13,13,8,5,5,5,5,5,0,14,6,8,11,12,5,13,14,6,6,0,5,14,11,12,11,13,13,11,12,14,6,11,12,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,14,5,5,5,5,5,5,5,5,5,13,14,5,6,8,11,12,5,13,14,6,8,11,12,5,13,14,6,8,11,12,5,13,14,6,5,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,25,25,25,0,0,0,0,25,25,25,0,25,25,25,25,25,25,25,25,25,25,25,28,25,28,25,25,25,25,25,28,25,25,25,25,25,28,25,28,25,25,25,25,25,25,25,25,25,25,28,25,25,25,25,25,0,28,25,28,0,25,25,28,25,25,25,25,25,28,25,28,25,28,25,0,0,0,0,0,0,0,0,0,46,46,46,46,46,46,46,46,46,46,0,33,33,0,33,0,33,0,0,0,33,0,0,33,33,33,33,33,33,33,33,33,33,33,33,0,0,33,33,33,33,33,33,33,0,0,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,33,33,33,33,33,0,33,33,33,33,33,33,33,0,33,33,33,33,33,33,0,43,43,43,43,43,43,43,43,43,43,0,47,47,47,47],"f":[0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],2],[3,1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[4,4],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[5,5],[6,6],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],0,[[],5],[[],1],[[],1],0,0,0,0,0,[[4,4],1],[[[7,[3]]],1],[[8,9],10],[[11,9],10],[[12,9],10],[[5,9],10],[[13,9],10],[[14,9],10],[[6,9],[[16,[1,15]]]],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,[5,4],[5,4],[5,4],[5,[[17,[4]]]],[5,4],[[],1],[[14,4,3,3],1],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],18],[5,18],0,[11,1],[12,1],[11,1],0,0,[6,11],[[],12],[[],14],[[],6],[11,19],[12,19],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],20],[[],4],0,0,0,0,0,[[5,4],1],[[5,4],1],[[5,4],1],[[5,4],1],[[5,4],1],[[5,4],1],[[5,4],1],[[5,4],1],0,0,[[14,14],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],0,[[],1],[20,1],[20,1],[4,1],0,[[],[[7,[22]]]],[22,1],[[[23,[22]]],1],[[]],[[],1],[[],4],[[],18],0,[4,1],[[4,24],18],[[4,18],1],0,0,0,0,0,0,0,0,0,0,0,0,[[],25],[[25,25],25],[[25,25],1],[[25,25],25],[[25,25],1],[25,4],[25,4],[[25,25],25],[[25,25],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[25,25],[[25,25],18],[[25,25],25],[[],25],[[25,-1],1,[[27,[],[[26,[25]]]]]],0,[[25,9],10],[[25,9],10],[[25,9],10],[[25,9],10],[[25,9],10],[[28,9],10],[-1,-1,[]],[-1,-1,[]],[4,[[7,[25]]]],[4,25],[4,25],[4,25],[-1,25,[[27,[],[[26,[25]]]]]],[2,[[7,[25]]]],[[25,25],1],[[25,25],25],[[25,25],18],[-1,-2,[],[]],[-1,-2,[],[]],[25,-1,[]],[25,18],[25,18],[25,[[29,[25]]]],[25,[[30,[25]]]],[[],[[0,[[31,[],[[26,[28]]]]]]]],0,[25,25],0,[20,3],[[25,25],1],[[25,25,18],1],0,[[25,25],25],[[25,25],1],[[25,25],25],[[25,25],1],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[[25,25],25],[3,20],[[],32],[[4,20],1],0,0,0,0,0,0,[[],[[7,[20]]]],[-1,-2,[],[]],[-1,-2,[],[]],[20,1],[-1,-1,[]],[-1,-2,[],[]],[20,3],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,21,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[33,33],33],[[33,33],33],[[33,33],1],[33,34],[33,34],[33,34],[33,35],[33,36],[33,37],[-1,-2,[],[]],[-1,-2,[],[]],[33,1],[38,1],[[33,33],[[7,[33]]]],[[33,39],[[7,[33]]]],[[33,39],[[7,[33]]]],[[33,33],[[7,[33]]]],[33,33],[[-1,-2],1,[],[]],[[33,33],40],[[],35],[[],38],[[],35],[[],33],[[33,39],33],[[33,39],1],[[33,33],36],[[33,33],37],[[33,36],33],[[33,37],33],[[33,33],18],[[33,9],[[16,[1,15]]]],[-1,-1,[]],[35,33],[35,33],[35,33],[35,33],[36,33],[37,33],[[33,-1],1,41],[-1,-2,[],[]],[33,18],[[33,39],33],[[33,39],1],[[33,36],33],[[33,37],33],[35,35],[[35,39],33],[[33,33],[[7,[40]]]],[[33,33],33],[[33,39],33],[[33,33],33],[35,1],[[33,33],33],[[33,33],1],[33,39],[33,39],[33,39],[-1,33,[[31,[],[[26,[33]]]]]],[-1,33,[[31,[],[[26,[33]]]]]],[35,35],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[36,[[16,[33,42]]]],[37,[[16,[33,42]]]],[-1,[[16,[-2]]],[],[]],[-1,21,[]],0,[[],43],[-1,-2,[],[]],[-1,-2,[],[]],[43,1],[-1,-1,[]],[-1,-2,[],[]],[43,22],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,21,[]],0,[[4,18],1],[[3,44],1],[[],1],[[4,[17,[4]]],45]],"c":[],"p":[[1,"tuple"],[1,"str"],[5,"VirtAddr",372],[1,"usize"],[5,"TrapFrame",16],[5,"TaskStateSegment",16],[6,"Option",373],[5,"ExtendedState",16],[5,"Formatter",374],[8,"Result",374],[5,"GdtStruct",16],[5,"IdtStruct",16],[5,"FxsaveArea",16],[5,"TaskContext",16],[5,"Error",374],[6,"Result",375],[1,"array"],[1,"bool"],[5,"DescriptorTablePointer",376],[5,"PhysAddr",372],[5,"TypeId",377],[1,"u8"],[1,"slice"],[8,"IrqHandler",178],[5,"MemRegionFlags",182],[17,"Item"],[10,"IntoIterator",378],[5,"MemRegion",182],[5,"Iter",379],[5,"IterNames",379],[10,"Iterator",380],[1,"never"],[5,"Duration",275],[1,"u128"],[1,"u64"],[1,"f32"],[1,"f64"],[8,"TimeValue",275],[1,"u32"],[6,"Ordering",381],[10,"Hasher",382],[5,"TryFromFloatSecsError",383],[5,"TlsArea",356],[5,"MappingFlags",384],[1,"isize"],[5,"PagingIfImpl",259],[10,"TrapHandler",367]],"b":[[199,"impl-Flags-for-MemRegionFlags"],[200,"impl-MemRegionFlags"],[213,"impl-UpperHex-for-MemRegionFlags"],[214,"impl-Debug-for-MemRegionFlags"],[215,"impl-LowerHex-for-MemRegionFlags"],[216,"impl-Octal-for-MemRegionFlags"],[217,"impl-Binary-for-MemRegionFlags"],[222,"impl-MemRegionFlags"],[223,"impl-Flags-for-MemRegionFlags"],[347,"impl-Sum-for-Duration"],[348,"impl-Sum%3C%26Duration%3E-for-Duration"]]},\
"axio":{"doc":"<code>std::io</code>-like I/O traits for <code>no_std</code> environment.","t":"PPPPKFPPPPPPGPPPPPPPPPPPFKPIKGPPPPPPKPNNNNNNNNNNNNNNNNNNMNNNNMNMNNNNNNNNNNNNNNNNNCMNNNNNNNNNNONMNNNNNNNNNNNNNNNNNNOMNNEEEE","n":["AddrInUse","AlreadyExists","BadAddress","BadState","BufRead","BufReader","ConnectionRefused","ConnectionReset","Current","DirectoryNotEmpty","End","Err","Error","Interrupted","InvalidData","InvalidInput","Io","IsADirectory","NoMemory","NotADirectory","NotConnected","NotFound","Ok","PermissionDenied","PollState","Read","ResourceBusy","Result","Seek","SeekFrom","Start","StorageFull","Timeout","UnexpectedEof","Unsupported","WouldBlock","Write","WriteZero","as_str","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","capacity","clone","clone","clone","clone_into","clone_into","clone_into","code","consume","consume","default","eq","eq","fill_buf","fill_buf","flush","fmt","fmt","fmt","fmt","from","from","from","from","get_mut","get_ref","has_data_left","into","into","into","into","into_inner","new","prelude","read","read","read_exact","read_exact","read_full","read_line","read_to_end","read_to_end","read_to_string","read_to_string","read_until","readable","rewind","seek","stream_position","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","writable","write","write_all","write_fmt","BufRead","Read","Seek","Write"],"q":[[0,"axio"],[118,"axio::prelude"],[122,"core::fmt"],[123,"core::fmt"],[124,"alloc::string"],[125,"alloc::vec"],[126,"core::any"],[127,"core::fmt"]],"d":["A socket address could not be bound because the address is …","An entity already exists, often a file.","Bad address.","Bad internal state.","A <code>BufRead</code> is a type of <code>Read</code>er which has an internal …","The <code>BufReader&lt;R&gt;</code> struct adds buffering to any reader.","The connection was refused by the remote server,","The connection was reset by the remote server.","Sets the offset to the current position plus the specified …","A non-empty directory was specified where an empty …","Sets the offset to the size of this object plus the …","Contains the error value","The error type used by ArceOS.","Syscall interrupted by a caught signal","Data not valid for the operation were encountered.","Invalid parameter/argument.","Input/output error.","The filesystem object is, unexpectedly, a directory.","Not enough space/cannot allocate memory.","A filesystem object is, unexpectedly, not a directory.","The network operation failed because it was not connected …","The requested entity is not found.","Contains the success value","The operation lacked the necessary privileges to complete.","I/O poll results.","The <code>Read</code> trait allows for reading bytes from a source.","Device or resource is busy.","A specialized <code>Result</code> type with <code>AxError</code> as the error type.","The <code>Seek</code> trait provides a cursor which can be moved within …","Enumeration of possible methods to seek within an I/O …","Sets the offset to the provided number of bytes.","The underlying storage (typically, a filesystem) is full.","Syscall timed out","An error returned when an operation could not be completed …","This operation is unsupported or unimplemented.","The operation needs to block to complete, but the blocking …","A trait for objects which are byte-oriented sinks.","An error returned when an operation could not be completed …","Returns the error description.","","","","","","","","","Returns a reference to the internally buffered data.","Returns the number of bytes the internal buffer can hold …","","","","","","","Returns the error code value in <code>i32</code>.","Tells this buffer that <code>amt</code> bytes have been consumed from …","","","","","Returns the contents of the internal buffer, filling it …","","Flush this output stream, ensuring that all intermediately …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets a mutable reference to the underlying reader.","Gets a reference to the underlying reader.","Check if the underlying <code>Read</code> has any data left to be read.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Unwraps this <code>BufReader&lt;R&gt;</code>, returning the underlying reader.","Creates a new <code>BufReader&lt;R&gt;</code> with a default buffer capacity …","The I/O Prelude.","Pull some bytes from this source into the specified …","","","Read the exact number of bytes required to fill <code>buf</code>.","Read the exact number of bytes required to fill <code>buf</code>.","Read all bytes until a newline (the <code>0xA</code> byte) is reached, …","","Read all bytes until EOF in this source, placing them into …","","Read all bytes until EOF in this source, appending them to …","Read all bytes into <code>buf</code> until the delimiter <code>byte</code> or EOF is …","Object can be read now.","Rewind to the beginning of a stream.","Seek to an offset, in bytes, in a stream.","Returns the current seek position from the start of the …","","","","","","","","","","","","","","","","","","Object can be writen now.","Write a buffer into this writer, returning how many bytes …","Attempts to write an entire buffer into this writer.","Writes a formatted string into this writer, returning any …","","","",""],"i":[1,1,1,1,0,0,1,1,7,1,7,14,0,1,1,1,1,1,1,1,1,1,14,1,0,0,1,0,0,0,7,1,1,1,1,1,0,1,1,3,7,8,1,3,7,8,1,3,3,7,8,1,7,8,1,1,11,3,8,7,1,11,3,15,7,8,1,1,3,7,8,1,3,3,11,3,7,8,1,3,3,0,12,3,3,12,12,11,3,12,3,12,11,8,22,22,22,7,8,1,1,3,7,8,1,1,3,7,8,1,3,7,8,1,8,15,15,15,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[-1]]],[[5,[4]]],[]],[[[3,[-1]]],6,[]],[7,7],[8,8],[1,1],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[1,10],[[11,6],9],[[[3,[-1]],6],9,12],[[],8],[[7,7],13],[[1,1],13],[11,[[14,[[5,[4]]]]]],[[[3,[-1]]],[[14,[[5,[4]]]]],12],[15,14],[[7,16],17],[[8,16],17],[[1,16],[[19,[9,18]]]],[[1,16],[[19,[9,18]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[3,[-1]]],-1,[]],[[[3,[-1]]],-1,[]],[11,[[14,[13]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[-1]]],-1,[]],[-1,[[3,[-1]]],12],0,[[12,[5,[4]]],[[14,[6]]]],[[[3,[-1]],[5,[4]]],[[14,[6]]],12],[[[3,[-1]],[5,[4]]],[[14,[9]]],12],[[12,[5,[4]]],14],[[12,[5,[4]]],[[14,[6]]]],[[11,20],[[14,[6]]]],[[[3,[-1]],[21,[4]]],[[14,[6]]],12],[[12,[21,[4]]],[[14,[6]]]],[[[3,[-1]],20],[[14,[6]]],12],[[12,20],[[14,[6]]]],[[11,4,[21,[4]]],[[14,[6]]]],0,[22,[[14,[9]]]],[[22,7],[[14,[23]]]],[22,[[14,[23]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[10,[[19,[1]]]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],0,[[15,[5,[4]]],[[14,[6]]]],[[15,[5,[4]]],14],[[15,25],[[14,[9]]]],0,0,0,0],"c":[],"p":[[6,"Error",0],[1,"str"],[5,"BufReader",0],[1,"u8"],[1,"slice"],[1,"usize"],[6,"SeekFrom",0],[5,"PollState",0],[1,"tuple"],[1,"i32"],[10,"BufRead",0],[10,"Read",0],[1,"bool"],[8,"Result",0],[10,"Write",0],[5,"Formatter",122],[8,"Result",122],[5,"Error",122],[6,"Result",123],[5,"String",124],[5,"Vec",125],[10,"Seek",0],[1,"u64"],[5,"TypeId",126],[5,"Arguments",122]],"b":[[66,"impl-Display-for-AxError"],[67,"impl-Debug-for-AxError"]]},\
"axlibc":{"doc":"ArceOS user program library for C apps.","t":"HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH","n":["abort","accept","ax_fcntl","ax_open","bind","clock_gettime","close","connect","dup","dup2","dup3","epoll_create","epoll_ctl","epoll_wait","exit","free","freeaddrinfo","fstat","getaddrinfo","getcwd","getpeername","getpid","getrlimit","getsockname","listen","longjmp","lseek","lstat","malloc","mktime","nanosleep","pipe","pthread_create","pthread_exit","pthread_join","pthread_mutex_init","pthread_mutex_lock","pthread_mutex_unlock","pthread_self","rand","random","read","recv","recvfrom","rename","select","send","sendto","setjmp","setrlimit","shutdown","socket","srand","stat","strerror","strftime","strtod","strtof","sysconf","write","writev"],"q":[[0,"axlibc"],[61,"core::ffi"],[62,"arceos_posix_api::ctypes"],[63,"arceos_posix_api::ctypes"]],"d":["Abort the current process.","Accept for connections on a socket","Manipulate file descriptor.","Open a file by <code>filename</code> and insert it into the file …","Bind a address to a socket.","Get clock time since booting","Close a file by <code>fd</code>.","Connects the socket to the address specified.","Duplicate a file descriptor.","Duplicate a file descriptor, use file descriptor specified …","Duplicate a file descriptor, the caller can force the …","Creates a new epoll instance.","Control interface for an epoll file descriptor","Waits for events on the epoll instance referred to by the …","Exits the current thread.","Deallocate memory.","Free queried <code>addrinfo</code> struct","Get file metadata by <code>fd</code> and write into <code>buf</code>.","Query addresses for a domain name.","Get the path of the current directory.","Get peer address to which the socket sockfd is connected.","Get current thread ID.","Get resource limitations","Get current address to which the socket sockfd is bound.","Listen for connections on a socket","<code>longjmp</code> implementation","Set the position of the file indicated by <code>fd</code>.","Get the metadata of the symbolic link and write into <code>buf</code>.","Allocate memory and return the memory address.","Convert broken-down time into time since the Epoch.","Sleep some nanoseconds","Create a pipe","Create a new thread with the given entry point and …","Exits the current thread. The value <code>retval</code> will be …","Waits for the given thread to exit, and stores the return …","Initialize a mutex.","Lock the given mutex.","Unlock the given mutex.","Returns the <code>pthread</code> struct of current thread.","Returns a 32-bit unsigned pseudo random interger.","Returns a 64-bit unsigned pseudo random number.","Read data from the file indicated by <code>fd</code>.","Receive a message on a socket.","Receive a message on a socket and get its source address.","Rename <code>old</code> to <code>new</code> If new exists, it is first removed.","Monitor multiple file descriptors, waiting until one or …","Send a message on a socket to the address connected.","Send a message on a socket to the address specified.","<code>setjmp</code> implementation","Set resource limitations","Shut down a full-duplex connection.","Create an socket for communication.","Sets the seed for the random number generator.","Get the file metadata by <code>path</code> and write into <code>buf</code>.","Returns a pointer to the string representation of the …","Convert date and time to a string.","Convert a string to a double-precision number.","Convert a string to a float number.","Return system configuration infomation","Write data to the file indicated by <code>fd</code>.","Write a vector."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[[[],1],[[2,3,4],2],[[2,2,5],2],[[6,2,7],2],[[2,3,4],2],[[8,9],2],[2,2],[[2,3,4],2],[2,2],[[2,2],2],[[2,2,2],2],[2,2],[[2,2,2,10],2],[[2,10,2,2],2],[2,1],[11,12],[13,12],[[2,14],2],[[6,6,13,13],2],[[6,5],6],[[2,3,4],2],[[],2],[[2,15],2],[[2,3,4],2],[[2,2],2],0,[[2,16,2],16],[[6,14],2],[17,11],0,[[9,9],2],[2,2],[[19,20,11],2],[11,1],[[19,11],2],[[21,22],2],[21,2],[21,2],[[],19],[[],2],[[],23],[[2,11,5],24],[[2,11,17,2],24],[[2,11,17,2,3,4],24],[[6,6],2],[[2,25,25,25,26],2],[[2,11,17,2],24],[[2,11,17,2,3,4],24],0,[[2,15],2],[[2,2],2],[[2,2,2],2],[27,12],[[6,14],2],[2,6],0,[[6,6],28],[[6,6],29],[2,23],[[2,11,5],24],[[2,30,2],24]],"c":[],"p":[[1,"never"],[8,"c_int",61],[5,"sockaddr",62],[8,"socklen_t",62],[1,"usize"],[8,"c_char",61],[8,"mode_t",62],[8,"clockid_t",62],[5,"timespec",62],[5,"epoll_event",62],[6,"c_void",61],[1,"tuple"],[5,"addrinfo",62],[5,"stat",62],[5,"rlimit",62],[8,"off_t",62],[8,"size_t",62],[8,"time_t",62],[8,"pthread_t",62],[5,"pthread_attr_t",62],[5,"pthread_mutex_t",62],[5,"pthread_mutexattr_t",62],[8,"c_long",61],[8,"ssize_t",62],[5,"fd_set",62],[5,"timeval",62],[8,"c_uint",61],[8,"c_double",61],[8,"c_float",61],[5,"iovec",62]],"b":[]},\
"axlog":{"doc":"Macros for multi-level formatted logging used by ArceOS.","t":"KQQMMMMQQQHHHQQ","n":["LogIf","ax_print","ax_println","console_write_str","current_cpu_id","current_task_id","current_time","debug","error","info","init","print_fmt","set_max_level","trace","warn"],"q":[[0,"axlog"],[15,"core::option"],[16,"core::time"],[17,"core::fmt"],[18,"core::fmt"]],"d":["Extern interfaces that must be implemented in other crates.","Prints to the console.","Prints to the console, with a newline.","Writes a string to the console.","Gets current CPU ID.","Gets current task ID.","Gets current clock time.","Logs a message at the debug level.","Logs a message at the error level.","Logs a message at the info level.","Initializes the logger.","Prints the formatted string to the console.","Set the maximum log level.","Logs a message at the trace level.","Logs a message at the warn level."],"i":[0,0,0,9,9,9,9,0,0,0,0,0,0,0,0],"f":[0,0,0,[1,2],[[],[[4,[3]]]],[[],[[4,[5]]]],[[],6],0,0,0,[[],2],[7,8],[1,2],0,0],"c":[],"p":[[1,"str"],[1,"tuple"],[1,"usize"],[6,"Option",15],[1,"u64"],[5,"Duration",16],[5,"Arguments",17],[8,"Result",17],[10,"LogIf",0]],"b":[]},\
"axmem":{"doc":"The memory management module, which implements the memory …","t":"JFFFJNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNONN","n":["KEY_TO_SHMID","MapArea","MemBackend","MemorySet","SHARED_MEMS","add_private_shared_mem","add_shared_mem","allocated","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_slice","attach_shared_mem","backend","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_alloc","clone_into","clone_or_err","clone_with_delta","contained_in","contains","create_shared_mem","dealloc","detach_shared_mem","drop","end_va","fill","find_free_area","flags","from","from","from","get_private_shared_mem","get_shared_mem","handle_page_fault","handle_page_fault","into","into","into","manual_alloc_for_lazy","manual_alloc_range_for_lazy","manual_alloc_type_for_lazy","map_page_without_alloc","max_va","mmap","mprotect","msync","munmap","new","new_alloc","new_empty","new_lazy","new_region","new_with_kernel_mapped","overlap_with","page_table_root_ppn","page_table_token","pages","query","read","read_from_seek","readable","remove_mid","seek","shrink_left","shrink_right","size","split","split3","split_for_area","strict_contain","sync_page_with_backend","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unmap_user_areas","update_flags","vaddr","writable","write_to_seek"],"q":[[0,"axmem"],[96,"core::any"],[97,"alloc::sync"],[98,"memory_addr"],[99,"page_table_entry"],[100,"axhal::paging"],[101,"axerrno"],[102,"core::option"],[103,"memory_addr"],[104,"alloc::boxed"],[105,"page_table"],[106,"axio"],[107,"axerrno"],[108,"core::any"]],"d":["The map from key to shmid. It’s used to query shmid from …","A continuous virtual area in user memory.","File backend for Lazy load <code>MapArea</code>. <code>file</code> should be a file …","PageTable + MemoryArea for a process (task)","This struct only hold SharedMem that are not IPC_PRIVATE. …","Panics: shmid is already taken in the process.","Panics: shmid is already taken.","return whether all the pages have been allocated.","","","","","","","Safety","Attach a SharedMem to the memory set.","whether the area is backed by a file","","","","","","","","Allocating new phys pages and clone it self. This function …","","Clone the MemorySet. This will create a new page table and …","clone a new <code>MemBackend</code> with a delta offset of the file of …","If [start, end] contains self.","If self contains [start, end].","Create a new SharedMem with given key. You need to add the …","Deallocate all phys pages and unmap the area in page table.","Detach a SharedMem from the memory set.","","return the end virtual address of the area.","Fill <code>self</code> with <code>byte</code>.","Find a free area with given start virtual address and …","mapping flags of this area","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a private SharedMem by shmid.","Get a SharedMem by shmid.","…","It will map newly allocated page in the page table. You …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","判断某一个虚拟地址是否在内存集中。 …","暴力实现区间强制分配 传入区间左闭右闭","判断某一个类型的某一个对象是否被分配","Map a 4K region without allocating physical memory.","The max virtual address of the areas in this memory set.","mmap. You need to flush tlb after this.","Edit the page table to update flags in given virt address …","msync","munmap. You need to flush TLB after this.","Create a new <code>MemBackend</code> with a file and the seek offset of …","Allocated an area and map it in page table.","Create a new empty MemorySet.","Create a lazy-load area and map it in page table (page …","Allocate contiguous region. If no data, it will create a …","Create a new MemorySet with kernel mapped regions.","If [start, end) overlaps with self.","The root page table physical address.","Get the root page table token.","phys pages of this area","Query the page table to get the physical address, flags …","","read from the file of the <code>MemBackend</code> with a pos offset.","whether the file of the <code>MemBackend</code> is readable.","Create a second area in the right part of the area, […","","Deallocate some pages from the start of the area. This …","Deallocate some pages from the end of the area. This …","return the size of the area, which thinks the page size is …","Split this area into 2.","Split this area into 3.","Make [start, end) unmapped and dealloced. You need to …","If self strictly contains [start, end], which stands for …","Sync pages in index back to <code>self.backend</code> (if there is one).","","","","","","","","","","","…","Update area’s mapping flags and write it to page table. …","start virtual address","whether the file of the <code>MemBackend</code> is writable.","write to the file of the <code>MemBackend</code> with a pos offset."],"i":[0,0,0,0,0,1,1,4,4,12,1,4,12,1,4,1,4,4,12,1,4,12,1,12,4,12,1,12,4,4,1,4,1,1,4,4,1,4,4,12,1,1,1,4,1,4,12,1,1,1,1,1,1,1,1,1,1,12,4,1,4,1,1,4,1,1,4,1,12,12,12,4,12,4,4,4,4,4,1,4,4,12,4,12,1,4,12,1,4,12,1,1,4,4,12,12],"f":[0,0,0,0,0,0,0,[4,5],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[4,[[8,[7]]]],[[1,[9,[0]],10,11],3],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[12,12],[[4,13],[[14,[4]]]],[[-1,-2],3,[],[]],[1,[[14,[1]]]],[[12,15],12],[[4,10,10],5],[[4,10,10],5],[[2,16,17,18,18,19],[[14,[[3,[2,0]]]]]],[[4,13],3],[[1,2],3],[1,3],[4,10],[[4,7],3],[[1,10,16],[[20,[10]]]],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[1,2],[[20,[[9,[0]]]]]],[2,[[20,[[9,[0]]]]]],[[4,10,11,13],5],[[1,10,11],[[14,[3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,10],[[14,[3]]]],[[1,10,10],[[14,[3]]]],[1,[[14,[3]]]],[[1,10,21,11],[[14,[3]]]],[1,10],[[1,10,16,11,5,[20,[12]]],22],[[1,10,16,11],3],[[1,10,16],3],[[1,10,16],3],[[[24,[23]],17],12],[[10,16,11,[20,[[8,[7]]]],[20,[12]],13],[[14,[4]]]],[[],1],[[10,16,11,[20,[12]],13],4],[[1,10,16,11,[20,[[8,[7]]]],[20,[12]]],3],[[],1],[[4,10,10],5],[1,21],[1,16],0,[[1,10],[[14,[[3,[21,11,25]]]]]],[[12,[8,[7]]],[[14,[16]]]],[[12,26,[8,[7]]],[[28,[16,27]]]],[12,5],[[4,10,10,13],4],[[12,26],[[14,[17]]]],[[4,10,13],3],[[4,10,13],3],[4,16],[[4,10],4],[[4,10,10],[[3,[4,4]]]],[[1,10,16],3],[[4,10,10],5],[[4,16],3],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[1,3],[[4,11,13],3],0,[12,5],[[12,26,[8,[7]]],[[28,[16,27]]]]],"c":[],"p":[[5,"MemorySet",0],[1,"i32"],[1,"tuple"],[5,"MapArea",0],[1,"bool"],[10,"Any",96],[1,"u8"],[1,"slice"],[5,"Arc",97],[5,"VirtAddr",98],[5,"MappingFlags",99],[5,"MemBackend",0],[8,"PageTable",100],[8,"AxResult",101],[1,"i64"],[1,"usize"],[1,"u64"],[1,"u32"],[1,"u16"],[6,"Option",102],[5,"PhysAddr",98],[1,"isize"],[10,"FileExt",103],[5,"Box",104],[6,"PageSize",105],[6,"SeekFrom",106],[6,"AxError",101],[6,"Result",107],[5,"TypeId",96]],"b":[]},\
"axnet":{"doc":"ArceOS network module.","t":"TFGPFTTFFTFTNNNONNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNHNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["BROADCAST","Duration","IpAddr","Ipv4","Ipv4Addr","MULTICAST_ALL_ROUTERS","MULTICAST_ALL_SYSTEMS","SocketAddr","TcpSocket","UNSPECIFIED","UdpSocket","ZERO","accept","add","add_assign","addr","as_bytes","as_bytes","bench_receive","bench_transmit","bind","bind","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","close","cmp","cmp","cmp","cmp","connect","connect","default","default","div","div_assign","dns_query","drop","drop","eq","eq","eq","eq","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","from_core_sockaddr","from_micros","from_millis","from_secs","from_str","from_str","from_str","hash","hash","hash","init_network","into","into","into","into","into","into","into_address","into_core_sockaddr","is_broadcast","is_broadcast","is_connected","is_link_local","is_loopback","is_multicast","is_multicast","is_nonblocking","is_nonblocking","is_unicast","is_unicast","is_unspecified","is_unspecified","listen","local_addr","local_addr","micros","millis","mul","mul_assign","nagle_enabled","new","new","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","peek_from","peer_addr","peer_addr","poll","poll","poll_interfaces","port","prefix_len","read","read","recv","recv","recv_from","recv_from_timeout","recv_timeout","secs","send","send","send_to","set_nagle_enabled","set_nonblocking","set_nonblocking","shl","shl_assign","shr","shr_assign","shutdown","shutdown","sub","sub_assign","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","total_micros","total_millis","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","v4","version","with_socket","with_socket","with_socket_mut","write","write"],"q":[[0,"axnet"],[193,"axerrno"],[194,"core::net::socket_addr"],[195,"core::cmp"],[196,"core::net::ip_addr"],[197,"alloc::vec"],[198,"core::fmt"],[199,"core::fmt"],[200,"core::time"],[201,"core::convert"],[202,"core::hash"],[203,"axdriver::dummy"],[204,"axdriver::structs::imp"],[205,"core::option"],[206,"axio"],[207,"alloc::string"],[208,"core::any"],[209,"smoltcp::wire::ip"],[210,"smoltcp::socket::tcp"],[211,"core::ops::function"],[212,"smoltcp::socket::udp"]],"d":["The broadcast address.","A relative amount of time.","An internetworking address.","An IPv4 address.","A four-octet IPv4 address.","All multicast-capable routers","All multicast-capable nodes","An internet endpoint address.","A TCP socket that provides POSIX-like APIs.","An unspecified address.","A UDP socket that provides POSIX-like APIs.","","Accepts a new connection.","","","","Return an address as a sequence of octets, in big-endian.","Return an IPv4 address as a sequence of octets, in …","Benchmark raw socket receive bandwidth.","Benchmark raw socket transmit bandwidth.","Binds an unbound socket to the given address and port.","Binds an unbound socket to the given address and port.","","","","","","","","","","","","","","","","","","","","","Close the transmit half of the tcp socket. It will call …","","","","","Connects to the given address and port.","Connects this UDP socket to a remote address, allowing the …","","","","","Public function for DNS query.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Construct an IPv4 address from a sequence of octets, in …","Convert from <code>std::net::SocketAddr</code> to …","Create a new <code>Duration</code> from a number of microseconds.","Create a new <code>Duration</code> from a number of milliseconds.","Create a new <code>Instant</code> from a number of seconds.","Parse a string representation of an IP address.","","Parse a string representation of an IPv4 address.","","","","Initializes the network subsystem by NIC devices.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert to an <code>IpAddress</code>.","Convert from <code>smoltcp::wire::IpEndpoint</code> to …","Query whether the address is the broadcast address.","Query whether the address is the broadcast address.","Whether the socket is connected.","Query whether the address falls into the “link-local” …","Query whether the address falls into the “loopback” …","Query whether the address is a valid multicast address.","Query whether the address is a multicast address.","Returns whether this socket is in nonblocking mode.","Returns whether this socket is in nonblocking mode.","Query whether the address is a valid unicast address.","Query whether the address is an unicast address.","Query whether the address falls into the “unspecified” …","Query whether the address falls into the “unspecified” …","Starts listening on the bound address and port.","Returns the local address and port, or <code>Err(NotConnected)</code> …","Returns the local address and port, or <code>Err(NotConnected)</code> …","The fractional number of milliseconds in this <code>Duration</code>.","The fractional number of milliseconds in this <code>Duration</code>.","","","To get the nagle algorithm enabled or not.","Creates a new TCP socket.","Creates a new UDP socket.","Create an endpoint address from given address and port.","Construct an IPv4 address from parts.","","","","","Receives a single datagram message on the socket, without …","Returns the remote address and port, or <code>Err(NotConnected)</code> …","Returns the remote address and port, or <code>Err(NotConnected)</code> …","Whether the socket is readable or writable.","Whether the socket is readable or writable.","Poll the network stack.","","If <code>self</code> is a CIDR-compatible subnet mask, return …","","","Receives data from the socket, stores it in the given …","Receives a single datagram message on the socket from the …","Receives a single datagram message on the socket. On …","Receives data from the socket, stores it in the given …","Receives data from the socket, stores it in the given …","The number of whole seconds in this <code>Duration</code>.","Transmits data in the given buffer.","Sends data on the socket to the remote address to which it …","Sends data on the socket to the given address. On success, …","To set the nagle algorithm enabled or not.","Moves this TCP stream into or out of nonblocking mode.","Moves this UDP socket into or out of nonblocking mode.","","","","","Close the connection.","Close the socket.","","","","","","","","","","","The total number of microseconds in this <code>Duration</code>.","The total number of milliseconds in this <code>Duration</code>.","","","","","","","","","","","","","","","","","","","Create an address wrapping an IPv4 address with the given …","Return the protocol version.","To get the socket and call the given function.","To get the socket and call the given function.","To get the mutable socket and call the given function.","",""],"i":[8,0,0,5,0,8,8,0,0,8,0,3,1,3,3,11,5,8,0,0,1,10,1,10,3,5,11,8,1,10,3,5,11,8,3,5,11,8,3,5,11,8,1,3,5,11,8,1,10,3,8,3,3,0,1,10,3,5,11,8,1,10,3,3,5,5,11,11,8,8,1,10,3,3,5,5,11,11,8,8,0,3,3,3,5,11,8,5,11,8,0,1,10,3,5,11,8,8,0,5,8,1,8,8,5,8,1,10,5,8,5,8,1,1,10,3,3,3,3,1,1,10,11,8,3,5,11,8,10,1,10,1,10,0,11,5,1,10,1,10,10,10,1,3,1,10,10,1,1,10,3,3,3,3,1,10,3,3,3,5,11,8,3,5,11,8,3,3,1,10,3,5,11,8,1,10,3,5,11,8,1,10,3,5,11,8,5,5,1,10,1,1,10],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[1,[[2,[1]]]],[[3,3],3],[[3,3],4],0,[5,[[7,[6]]]],[8,[[7,[6]]]],[[],4],[[],4],[[1,9],2],[[10,9],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,3],[5,5],[11,11],[8,8],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[1,4],[[3,3],12],[[5,5],12],[[11,11],12],[[8,8],12],[[1,9],2],[[10,9],2],[[],3],[[],8],[[3,13],3],[[3,13],4],[14,[[2,[[16,[15]]]]]],[1,4],[10,4],[[3,3],17],[[5,5],17],[[11,11],17],[[8,8],17],[1,2],[10,2],[[3,18],[[20,[4,19]]]],[[3,18],[[20,[4,19]]]],[[5,18],[[20,[4,19]]]],[[5,18],[[20,[4,19]]]],[[11,18],[[20,[4,19]]]],[[11,18],[[20,[4,19]]]],[[8,18],[[20,[4,19]]]],[[8,18],[[20,[4,19]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[21,3],[-1,-1,[]],[8,5],[-1,-1,[]],[[[4,[-1,22]]],11,[[23,[5]]]],[-1,-1,[]],[[[7,[6]]],8],[9,11],[24,3],[24,3],[24,3],[14,[[20,[5,4]]]],[14,[[20,[11,4]]]],[14,[[20,[8,4]]]],[[5,-1],4,25],[[11,-1],4,25],[[8,-1],4,25],[[[27,[26]]],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[8,5],[11,9],[5,17],[8,17],[1,17],[8,17],[8,17],[5,17],[8,17],[1,17],[10,17],[5,17],[8,17],[5,17],[8,17],[1,2],[1,[[2,[9]]]],[10,[[2,[9]]]],[3,24],[3,24],[[3,13],3],[[3,13],4],[1,17],[[],1],[[],10],[[5,22],11],[[6,6,6,6],8],[[3,3],[[28,[12]]]],[[5,5],[[28,[12]]]],[[11,11],[[28,[12]]]],[[8,8],[[28,[12]]]],[[10,[7,[6]]],[[2,[[4,[29,9]]]]]],[1,[[2,[9]]]],[10,[[2,[9]]]],[1,[[2,[30]]]],[10,[[2,[30]]]],[[],4],0,[5,[[28,[6]]]],[[1,[7,[6]]],[[2,[29]]]],[[10,[7,[6]]],[[2,[29]]]],[[1,[7,[6]]],[[2,[29]]]],[[10,[7,[6]]],[[2,[29]]]],[[10,[7,[6]]],[[2,[[4,[29,9]]]]]],[[10,[7,[6]],24],[[2,[[4,[29,9]]]]]],[[1,[7,[6]],24],[[2,[29]]]],[3,24],[[1,[7,[6]]],[[2,[29]]]],[[10,[7,[6]]],[[2,[29]]]],[[10,[7,[6]],9],[[2,[29]]]],[[1,17],2],[[1,17],4],[[10,17],4],[[3,13],3],[[3,13],4],[[3,13],3],[[3,13],4],[1,2],[10,2],[[3,3],3],[[3,3],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[3,24],[3,24],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[[6,6,6,6],5],[5,33],[[1,-2],-1,[],[[36,[[28,[34]]],[[35,[-1]]]]]],[[10,-2],-1,[],[[36,[37],[[35,[-1]]]]]],[[1,-2],-1,[],[[36,[[28,[34]]],[[35,[-1]]]]]],[[1,[7,[6]]],[[2,[29]]]],[[10,[7,[6]]],[[2,[29]]]]],"c":[],"p":[[5,"TcpSocket",0],[8,"AxResult",193],[5,"Duration",0],[1,"tuple"],[6,"IpAddr",0],[1,"u8"],[1,"slice"],[5,"Ipv4Addr",0],[6,"SocketAddr",194],[5,"UdpSocket",0],[5,"SocketAddr",0],[6,"Ordering",195],[1,"u32"],[1,"str"],[6,"IpAddr",196],[5,"Vec",197],[1,"bool"],[5,"Formatter",198],[5,"Error",198],[6,"Result",199],[5,"Duration",200],[1,"u16"],[10,"Into",201],[1,"u64"],[10,"Hasher",202],[8,"AxNetDevice",203],[5,"AxDeviceContainer",204],[6,"Option",205],[1,"usize"],[5,"PollState",206],[5,"String",207],[5,"TypeId",208],[6,"Version",209],[5,"Socket",210],[17,"Output"],[10,"FnOnce",211],[5,"Socket",212]],"b":[[62,"impl-Display-for-Duration"],[63,"impl-Debug-for-Duration"],[64,"impl-Display-for-IpAddress"],[65,"impl-Debug-for-IpAddress"],[66,"impl-Display-for-IpEndpoint"],[67,"impl-Debug-for-IpEndpoint"],[68,"impl-Display-for-Ipv4Address"],[69,"impl-Debug-for-Ipv4Address"]]},\
"axprocess":{"doc":"This module provides the process management API for the …","t":"JFJNNNONNONHHNOHOOCNCNNNNNNNNHNOONHNOCHNNNONONOHNNNNNNNCOHOHHHNNNHHTTTTTTTTTTTTTTTTTTFPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNJFJNNNNHNNONONNNNSFJJNNNNNNNHHNNNNNNNHHNNNNNNNHHHNNNNNFNNNNNHNNOHHHOOHONNN","n":["PID2PC","Process","TID2TASK","alloc_fd","as_any","as_any_mut","blocked_by_vfork","borrow","borrow_mut","children","clone_task","current_process","current_task","exec","exit_code","exit_current_task","fd_manager","file_path","flags","from","futex","get_code_if_exit","get_cwd","get_exit_code","get_file_path","get_heap_bottom","get_heap_top","get_parent","get_zombie","handle_page_fault","have_signals","heap_bottom","heap_top","init","init_kernel_process","into","is_zombie","link","load_app","manual_alloc_for_lazy","manual_alloc_range_for_lazy","manual_alloc_type_for_lazy","memory_set","new","parent","pid","robust_list","set_child_tid","set_exit_code","set_file_path","set_heap_bottom","set_heap_top","set_parent","set_vfork_block","set_zombie","signal","signal_modules","sleep_now_task","tasks","time_stat_from_kernel_to_user","time_stat_from_user_to_kernel","time_stat_output","try_from","try_into","type_id","wait_pid","yield_now_task","CLONE_CHILD_CLEARTID","CLONE_CHILD_SETTID","CLONE_DETACHED","CLONE_FILES","CLONE_FS","CLONE_NEWNS","CLONE_NEWTIME","CLONE_PARENT","CLONE_PARENT_SETTID","CLONE_PIDFD","CLONE_PTRACE","CLONE_SETTLS","CLONE_SIGHAND","CLONE_SYSVSEM","CLONE_THREAD","CLONE_UNTRACED","CLONE_VFORK","CLONE_VM","CloneFlags","Exited","NotExist","Running","WaitStatus","all","as_any","as_any","as_any_mut","as_any_mut","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","insert","intersection","intersects","into","into","into_iter","is_all","is_empty","iter","iter_names","not","remove","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","FUTEX_WAIT_TASK","FutexRobustList","WAIT_FOR_FUTEX","as_any","as_any_mut","borrow","borrow_mut","clear_wait","default","from","head","into","len","new","try_from","try_into","type_id","AT_FDCWD","FilePath","LINK_COUNT_MAP","LINK_PATH_MAP","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","cmp","create_link","deal_with_path","dir","end_with","eq","equal_to","file","fmt","from","get_link_count","get_str_len","into","is_dir","is_file","is_root","new","partial_cmp","path","raw_ptr_to_ref_str","real_path","remove_link","start_with","to_owned","try_from","try_into","type_id","SignalModule","as_any","as_any_mut","borrow","borrow_mut","from","handle_signals","init_signal","into","last_trap_frame_for_signal","load_trap_for_signal","send_signal_to_process","send_signal_to_thread","sig_info","signal_handler","signal_return","signal_set","try_from","try_into","type_id"],"q":[[0,"axprocess"],[67,"axprocess::flags"],[157,"axprocess::futex"],[174,"axprocess::link"],[211,"axprocess::signal"],[231,"axfs::api::port"],[232,"alloc::sync"],[233,"core::option"],[234,"alloc::vec"],[235,"axerrno"],[236,"core::any"],[237,"axtask::task"],[238,"alloc::string"],[239,"memory_addr"],[240,"page_table_entry"],[241,"axtask::api"],[242,"axmem"],[243,"spinlock"],[244,"core::time"],[245,"core::result"],[246,"core::any"],[247,"core::fmt"],[248,"core::fmt"],[249,"bitflags::iter"],[250,"axsignal"]],"d":["Map from process id to arc pointer of process","The process control block","Map from task id to arc pointer of task","为进程分配一个文件描述符","","","是否被vfork阻塞","","","子进程","实现简易的clone系统调用 …","return the <code>Arc&lt;Process&gt;</code> of the current process","current running task","将当前进程替换为指定的用户程序 …","退出状态码","退出当前任务","文件描述符管理器","该进程可执行文件所在的路径","clone 任务时指定的参数。","Returns the argument unchanged.","实现与futex相关的系统调用","若进程运行完成，则获取其返回码 …","获取当前进程的工作目录","get the exit code of the process","get the executable file path of the process","get the heap bottom of the process","get the heap top of the process","get the parent process id","whether the process is a zombie process","To deal with the page fault","查询当前任务是否存在未决信号","…","…","…","初始化内核调度进程","Calls <code>U::from(self)</code>.","进程状态","模拟的链接、挂载模块 …","返回应用程序入口，用户栈底，用户堆底","alloc physical memory for lazy allocation manually","alloc range physical memory for lazy allocation manually","alloc physical memory with the given type size for lazy …","地址空间","创建一个新的进程","父进程号","get the process id","robust list存储模块 …","设置当前任务的clear_child_tid","set the exit code of the process","set the executable file path of the process","set the heap bottom of the process","set the heap top of the process","set the parent process id","set the process as blocked by vfork","set the process as a zombie process","负责处理进程中与信号相关的内容","信号处理模块 …","以进程作为中转调用task的sleep","所管理的线程","…","…","统计时间输出 …","","","","…","以进程作为中转调用task的yield","…","要求在子任务的一个地址写入子任务的 tid","历史遗留的 flag，现在按 linux 要求应忽略","共享文件描述符(fd)表","共享文件系统新信息","子任务使用新的命名空间。目前还未用到",".","指定子任务的 ppid 为当前任务的 …","要求在父任务的一个地址写入子任务的 tid","创建指向子任务的fd，用于 sys_pidfd_open","用于 sys_ptrace","要求设置 tls","共享信号处理函数","子任务共享同一组信号量。用于 sys_semop","作为一个“线程”被创建。具体来说，它同 …","与 sys_ptrace 相关，目前未用到","…","共享地址空间","用于 sys_clone 的选项","子任务正常退出","找不到对应的子任务","子任务正在运行","sys_wait4 的返回值","Get a flags value with all known bits set.","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","…","用于存储 robust list 的结构","waiting queue which stores tasks waiting for futex variable","","","","","退出的时候清空指针","","Returns the argument unchanged.","The location of the head of the robust list in user space","Calls <code>U::from(self)</code>.","The length of the robust list","Create a new robust list","","","","The file descriptor used to specify the current working …","A struct to represent a file path, which will be …","实际文件(而不是用户文件)到链接数的映射","用户看到的文件到实际文件的映射","","","","","","","","创建一个链接","To deal with the path and return the canonicalized path","获取所属目录","判断是否end_with","","判断是否相同","获取文件/目录名","","Returns the argument unchanged.","获取文件的链接数","Safety","Calls <code>U::from(self)</code>.","返回是否是目录","返回是否是文件","返回是否是根目录","创建一个 FilePath, 传入的 path 会被 canonicalize, …","","获取路径","Safety","将用户提供的路径转换成实际的路径","删除一个链接","判断是否start_with","","","","","信号处理模块，进程间不共享","","","","","Returns the argument unchanged.","处理当前进程的信号","初始化信号模块","Calls <code>U::from(self)</code>.","保存的trap上下文","将保存的trap上下文填入内核栈中","发送信号到指定的进程","发送信号到指定的线程","是否存在siginfo","信号处理函数集","从信号处理函数返回","未决信号集","","",""],"i":[0,0,0,1,1,1,1,1,1,1,1,0,0,1,1,0,1,1,0,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,0,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,0,1,0,0,0,1,1,1,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,26,26,26,0,9,9,26,9,26,9,9,9,9,9,9,9,9,9,26,9,26,9,26,9,26,9,9,9,9,26,9,9,9,9,9,9,26,9,26,9,9,9,9,9,9,9,9,9,9,26,9,9,9,9,9,9,9,9,9,9,9,9,26,9,9,26,9,26,9,26,9,0,0,0,35,35,35,35,0,35,35,35,35,35,35,35,35,35,0,0,0,0,36,36,36,36,36,36,36,0,0,36,36,36,36,36,36,36,0,0,36,36,36,36,36,36,36,0,0,0,36,36,36,36,36,0,40,40,40,40,40,0,40,40,40,0,0,0,40,40,0,40,40,40,40],"f":[0,0,0,[[1,[5,[[4,[[3,[2]]]]]]],[[7,[6]]]],[-1,8,[]],[-1,8,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[1,9,[4,[6]],6,6,6,10],[[7,[11]]]],[[],[[3,[1]]]],[[],12],[[1,13,[5,[13]],[5,[13]]],[[7,[14]]]],0,[15,16],0,0,0,[-1,-1,[]],0,[1,[[4,[15]]]],[1,13],[1,15],[1,13],[1,11],[1,11],[1,11],[1,10],[[17,18],14],[1,[[4,[6]]]],0,0,[[[5,[13]],[5,[13]]],[[7,[19]]]],[[],14],[-1,-2,[],[]],0,0,[[13,[5,[13]],[5,[13]],20],[[7,[[14,[17,17,17]]]]]],[[1,17],[[7,[14]]]],[[1,17,17],[[7,[14]]]],[1,[[7,[14]]]],0,[[11,11,[3,[[21,[20]]]],11,[5,[[4,[[3,[2]]]]]]],1],0,[1,11],0,[6,14],[[1,15],14],[[1,13],14],[[1,11],14],[[1,11],14],[[1,11],14],[[1,10],14],[[1,10],14],0,0,[22,14],0,[[],14],[[],14],[[],[[14,[6,6,6,6]]]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,24,[]],[[25,15],[[23,[11,26]]]],[[],14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],9],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[9,9],9],[[9,9],14],[[9,9],9],[[9,9],14],[9,27],[9,27],[[9,9],9],[[9,9],14],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[9,9],[26,26],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[9,9],[[9,9],10],[[9,9],9],[[],9],[[26,26],10],[[9,-1],14,[[29,[],[[28,[9]]]]]],[[9,30],31],[[9,30],31],[[9,30],31],[[9,30],31],[[9,30],31],[[26,30],31],[-1,-1,[]],[-1,-1,[]],[27,[[4,[9]]]],[27,9],[27,9],[27,9],[-1,9,[[29,[],[[28,[9]]]]]],[32,[[4,[9]]]],[[9,9],14],[[9,9],9],[[9,9],10],[-1,-2,[],[]],[-1,-2,[],[]],[9,-1,[]],[9,10],[9,10],[9,[[33,[9]]]],[9,[[34,[9]]]],[9,9],[[9,9],14],[[9,9,10],14],[[9,9],9],[[9,9],14],[[9,9],9],[-1,-2,[],[]],[-1,-2,[],[]],[[9,9],14],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[[9,9],9],0,0,0,[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[11,10],14],[[],35],[-1,-1,[]],0,[-1,-2,[],[]],0,[[6,6],35],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,24,[]],0,0,0,0,[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[36,36],[[-1,-2],14,[],[]],[[36,36],37],[[36,36],10],[[6,[4,[38]],10],[[4,[36]]]],[36,[[7,[32]]]],[[36,36],10],[[36,36],10],[[36,36],10],[36,[[7,[32]]]],[[36,30],31],[-1,-1,[]],[13,6],[38,6],[-1,-2,[],[]],[36,10],[36,10],[36,10],[32,[[7,[36]]]],[[36,36],[[4,[37]]]],[36,32],[38,32],[13,13],[36,[[4,[13]]]],[[36,36],10],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,24,[]],0,[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[],14],[[[4,[[3,[[21,[39]]]]]]],40],[-1,-2,[],[]],0,[[],10],[[25,25],[[7,[14]]]],[[25,25],[[7,[14]]]],0,0,[[],25],0,[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,24,[]]],"c":[],"p":[[5,"Process",0],[10,"FileIO",231],[5,"Arc",232],[6,"Option",233],[5,"Vec",234],[1,"usize"],[8,"AxResult",235],[10,"Any",236],[5,"CloneFlags",67],[1,"bool"],[1,"u64"],[5,"CurrentTask",237],[5,"String",238],[1,"tuple"],[1,"i32"],[1,"never"],[5,"VirtAddr",239],[5,"MappingFlags",240],[8,"AxTaskRef",241],[5,"MemorySet",242],[8,"SpinNoIrq",243],[5,"Duration",244],[6,"Result",245],[5,"TypeId",236],[1,"isize"],[6,"WaitStatus",67],[1,"u32"],[17,"Item"],[10,"IntoIterator",246],[5,"Formatter",247],[8,"Result",247],[1,"str"],[5,"Iter",248],[5,"IterNames",248],[5,"FutexRobustList",157],[5,"FilePath",174],[6,"Ordering",249],[1,"u8"],[5,"SignalHandler",250],[5,"SignalModule",211]],"b":[[99,"impl-CloneFlags"],[100,"impl-Flags-for-CloneFlags"],[117,"impl-LowerHex-for-CloneFlags"],[118,"impl-Octal-for-CloneFlags"],[119,"impl-Binary-for-CloneFlags"],[120,"impl-Debug-for-CloneFlags"],[121,"impl-UpperHex-for-CloneFlags"],[126,"impl-Flags-for-CloneFlags"],[127,"impl-CloneFlags"]]},\
"axruntime":{"doc":"Runtime library of ArceOS.","t":"JHH","n":["KERNEL_PAGE_TABLE","rust_main","rust_main_secondary"],"q":[[0,"axruntime"]],"d":["The kernel page table.","The main entry point of the ArceOS runtime.","The main entry point of the ArceOS runtime for secondary …"],"i":[0,0,0],"f":[0,[[1,1],2],[1,2]],"c":[],"p":[[1,"usize"],[1,"never"]],"b":[]},\
"axsignal":{"doc":"信号处理模块","t":"FFCNNNNNNNNNNNNNNNOCNNONNONCNNNNNNNCPPPTTTTTTTTSSFFGPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNFNNNNNOOONNNPSPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGNNNNNNNNNNNNFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["SignalHandler","SignalSet","action","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","default","default","find_signal","from","from","get_action","get_one_signal","handlers","info","into","into","mask","new","new","pending","set_action","signal_no","try_add_signal","try_from","try_from","try_into","try_into","type_id","type_id","ucontext","Cont","Core","Ignore","SA_NOCLDSTOP","SA_NOCLDWAIT","SA_NODEFER","SA_ONSTACK","SA_RESETHAND","SA_RESTART","SA_RESTORER","SA_SIGINFO","SIG_DFL","SIG_IGN","SigAction","SigActionFlags","SignalDefault","Stop","Terminate","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","complement","contains","default","difference","empty","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","get_action","get_storer","insert","intersection","intersects","into","into","into","into_iter","is_all","is_empty","iter","iter_names","not","remove","restorer","sa_flags","sa_handler","sa_mask","set","sub","sub_assign","symmetric_difference","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","SigInfo","borrow","borrow_mut","default","from","into","si_code","si_errno","si_signo","try_from","try_into","type_id","ERR","MAX_SIG_NUM","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCONT","SIGFPE","SIGHUP","SIGILL","SIGINT","SIGIO","SIGKILL","SIGPIPE","SIGPROF","SIGPWR","SIGQUIT","SIGRT1","SIGRT10","SIGRT11","SIGRT12","SIGRT13","SIGRT14","SIGRT15","SIGRT16","SIGRT17","SIGRT18","SIGRT19","SIGRT2","SIGRT20","SIGRT21","SIGRT22","SIGRT23","SIGRT24","SIGRT25","SIGRT26","SIGRT27","SIGRT28","SIGRT29","SIGRT3","SIGRT30","SIGRT31","SIGRT4","SIGRT5","SIGRT6","SIGRT7","SIGRT8","SIGRT9","SIGRTMIN","SIGSEGV","SIGSTKFLT","SIGSTOP","SIGSYS","SIGTERM","SIGTRAP","SIGTSTP","SIGTTIN","SIGTTOU","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","SignalNo","borrow","borrow_mut","clone","eq","fmt","from","from","into","try_from","try_from","try_into","type_id","MContext","SignalStack","SignalUserContext","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","default","default","eq","fmt","fmt","from","from","from","get_pc","init","into","into","into","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"axsignal"],[36,"axsignal::action"],[126,"axsignal::info"],[138,"axsignal::signal_no"],[216,"axsignal::ucontext"],[250,"core::option"],[251,"core::result"],[252,"core::any"],[253,"core::iter::traits::collect"],[254,"core::fmt"],[255,"core::fmt"],[256,"bitflags::iter"]],"d":["处理所有信号的结构","接受信号的结构，每一个进程都有一个","To define the signal action and its flags","","","","","清空信号处理模块","清空信号处理模块","","","","","查询是否有未决信号，若有则返回对应编号","Returns the argument unchanged.","Returns the argument unchanged.","To get the action of a signal with the signal number","查询当前是否有未决信号","handlers<code>[i]</code> stands for the handler of signal <code>i+1</code>","…","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","信号掩码","新建一个信号处理函数","新建处理模块","未决信号集","设置信号处理函数","Define signal numbers.","尝试添加一个bit作为信号","","","","","","","Signal ucontext types and operations.","恢复进程执行","…","忽略信号","do not receive notification when child processes stop","do not create zombie on child process exit","do not automatically block the signal when its handler is …","call the signal handler on an alternate signal stack …","restore the signal action to the default upon entry to the …","restart system calls if possible","use the restorer field as the signal trampoline","use signal handler with 3 arguments, and sa_sigaction …","特殊取值，代表默认处理函数","特殊取值，代表忽略这个信号","The structure of the signal action","The flags of the signal action","没有显式指定处理函数时的默认行为","暂停进程执行","终止进程","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","","The intersection of a source flags value with the …","Get a flags value with all bits unset.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get the default action of a signal","get the restorer address of the signal action","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The intersection of a source flags value with the …","…","信号处理的flags","信号处理函数的地址","该信号处理函数的信号掩码","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The information of the signal","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","The code of the signal","An errno value","The signal number","","","","","The maximum number of signals.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","信号编号。","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","The <code>mcontext</code> struct for the signal action","处理信号时使用的栈","The user context saved for the signal action, which can be …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","get the pc from the user context","init the user context by the pc and the mask","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,0,1,3,1,3,1,3,1,3,1,3,3,1,3,1,3,1,0,1,3,3,1,3,3,1,0,3,1,3,1,3,1,3,0,18,18,18,9,9,9,9,9,9,9,9,0,0,0,0,0,18,18,9,9,9,9,9,9,9,9,9,18,9,6,18,9,6,9,6,9,9,9,9,9,9,9,9,9,9,9,6,18,9,6,9,9,9,9,9,9,18,6,9,9,9,18,9,6,9,9,9,9,9,9,9,6,6,6,6,9,9,9,9,9,18,9,6,18,9,6,18,9,6,9,0,21,21,21,21,21,21,21,21,21,21,21,17,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,23,24,25,23,24,25,23,24,25,23,24,24,23,24,23,24,25,25,25,23,24,25,23,24,25,23,24,25,23,24,25],"f":[0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,2],[3,2],[1,1],[3,3],[[],1],[[],3],[3,[[5,[4]]]],[-1,-1,[]],[-1,-1,[]],[[1,4],[[5,[6]]]],[3,[[5,[4]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[],1],[[],3],0,[[1,4,6],2],0,[[3,4],2],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],9],[[9,9],9],[[9,9],2],[[9,9],9],[[9,9],2],[9,10],[9,10],[[9,9],9],[[9,9],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[9,9],[6,6],[9,9],[[9,9],11],[[],9],[[9,9],9],[[],9],[[9,-1],2,[[13,[],[[12,[9]]]]]],[[9,14],15],[[9,14],15],[[9,14],15],[[9,14],15],[[9,14],15],[[6,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[10,[[5,[9]]]],[10,9],[10,9],[10,9],[-1,9,[[13,[],[[12,[9]]]]]],[16,[[5,[9]]]],[17,18],[6,[[5,[4]]]],[[9,9],2],[[9,9],9],[[9,9],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[9,-1,[]],[9,11],[9,11],[9,[[19,[9]]]],[9,[[20,[9]]]],[9,9],[[9,9],2],0,0,0,0,[[9,9,11],2],[[9,9],9],[[9,9],2],[[9,9],9],[[9,9],2],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[9,9],9],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],21],[-1,-1,[]],[-1,-2,[],[]],0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[17,17],[[17,17],11],[[17,14],15],[-1,-1,[]],[4,17],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[22,[[7,[17,22]]]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[23,23],[24,24],[25,25],[[],23],[[],24],[[24,24],11],[[23,14],15],[[24,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[25,4],[[4,4],25],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]]],"c":[],"p":[[5,"SignalHandler",0],[1,"tuple"],[5,"SignalSet",0],[1,"usize"],[6,"Option",250],[5,"SigAction",36],[6,"Result",251],[5,"TypeId",252],[5,"SigActionFlags",36],[1,"u32"],[1,"bool"],[17,"Item"],[10,"IntoIterator",253],[5,"Formatter",254],[8,"Result",254],[1,"str"],[6,"SignalNo",138],[6,"SignalDefault",36],[5,"Iter",255],[5,"IterNames",255],[5,"SigInfo",126],[1,"u8"],[5,"SignalStack",216],[5,"MContext",216],[5,"SignalUserContext",216]],"b":[[59,"impl-SigActionFlags"],[60,"impl-Flags-for-SigActionFlags"],[77,"impl-Debug-for-SigActionFlags"],[78,"impl-Binary-for-SigActionFlags"],[79,"impl-Octal-for-SigActionFlags"],[80,"impl-LowerHex-for-SigActionFlags"],[81,"impl-UpperHex-for-SigActionFlags"],[87,"impl-Flags-for-SigActionFlags"],[88,"impl-SigActionFlags"]]},\
"axstarry":{"doc":"The entry of syscall, which will distribute the syscall to …","t":"PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPIFPJFIINNNNNONNNNONNNNHNNNNNOONONNNNNNNNNNNNOONHNNNNNONNNONNHONNNHHHONNNNNNNONONNNNNNNHH","n":["E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EADV","EAFNOSUPPORT","EAGAIN","EALREADY","EBADE","EBADF","EBADFD","EBADMSG","EBADR","EBADRQC","EBADSLT","EBFONT","EBUSY","ECANCELED","ECHILD","ECHRNG","ECOMM","ECONNABORTED","ECONNREFUSED","ECONNRESET","EDEADLK","EDESTADDRREQ","EDOM","EDOTDOT","EDQUOT","EEXIST","EFAULT","EFBIG","EHOSTDOWN","EHOSTUNREACH","EHWPOISON","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","EISNAM","EKEYEXPIRED","EKEYREJECTED","EKEYREVOKED","EL2HLT","EL2NSYNC","EL3HLT","EL3RST","ELIBACC","ELIBBAD","ELIBEXEC","ELIBMAX","ELIBSCN","ELNRNG","ELOOP","EMEDIUMTYPE","EMFILE","EMLINK","EMSGSIZE","EMULTIHOP","ENAMETOOLONG","ENAVAIL","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOANO","ENOBUFS","ENOCSI","ENODATA","ENODEV","ENOENT","ENOEXEC","ENOKEY","ENOLCK","ENOLINK","ENOMEDIUM","ENOMEM","ENOMSG","ENONET","ENOPKG","ENOPROTOOPT","ENOSPC","ENOSR","ENOSTR","ENOSYS","ENOTBLK","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTNAM","ENOTRECOVERABLE","ENOTSOCK","ENOTTY","ENOTUNIQ","ENXIO","EOPNOTSUPP","EOVERFLOW","EOWNERDEAD","EPERM","EPFNOSUPPORT","EPIPE","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","ERANGE","EREMCHG","EREMOTE","EREMOTEIO","ERESTART","ERFKILL","EROFS","ESHUTDOWN","ESOCKTNOSUPPORT","ESPIPE","ESRCH","ESRMNT","ESTALE","ESTRPIPE","ETIME","ETIMEDOUT","ETOOMANYREFS","ETXTBSY","EUCLEAN","EUNATCH","EUSERS","EXDEV","EXFULL","Err","FileFlags","FilePath","Ok","PID2PC","Process","SyscallError","SyscallResult","alloc_fd","as_any","as_any","as_any_mut","as_any_mut","blocked_by_vfork","borrow","borrow","borrow_mut","borrow_mut","children","clone","clone_into","clone_task","cmp","create_link","dir","end_with","eq","equal_to","exec","exit_code","fd_manager","file","file_path","fmt","from","from","get_code_if_exit","get_cwd","get_exit_code","get_file_path","get_heap_bottom","get_heap_top","get_parent","get_zombie","have_signals","heap_bottom","heap_top","init","init_current_dir","into","into","is_dir","is_file","is_root","is_zombie","manual_alloc_for_lazy","manual_alloc_range_for_lazy","manual_alloc_type_for_lazy","memory_set","new","new","new_file","parent","partial_cmp","path","pid","println","read_file","recycle_user_process","robust_list","set_exit_code","set_file_path","set_heap_bottom","set_heap_top","set_parent","set_vfork_block","set_zombie","signal_modules","start_with","tasks","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","wait_pid","yield_now_task"],"q":[[0,"axstarry"],[220,"axfs::api::port"],[221,"alloc::sync"],[222,"core::option"],[223,"alloc::vec"],[224,"axerrno"],[225,"core::result"],[226,"core::any"],[227,"axprocess::flags"],[228,"core::cmp"],[229,"alloc::string"],[230,"core::fmt"],[231,"core::fmt"],[232,"scheduler::round_robin"],[233,"memory_addr"],[234,"axmem"],[235,"axsync::mutex"],[236,"axfs::api::port"],[237,"axerrno"]],"d":["Argument list too long","Permission denied","Address already in use","Cannot assign requested address","Advertise error","Address family not supported by protocol","Try again","Operation already in progress","Invalid exchange","Bad file number","File descriptor in bad state","Not a data message","Invalid request descriptor","Invalid request code","Invalid slot","Bad font file format","Device or resource busy","Operation Canceled","No child processes","Channel number out of range","Communication error on send","Software caused connection abort","Connection refused","Connection reset by peer","Resource deadlock would occur","Destination address required","Math argument out of domain of func","RFS specific error","Quota exceeded","File exists","Bad address","File too large","Host is down","No route to host","Memory page has hardware error","Identifier removed","Illegal byte sequence","Operation now in progress","Interrupted system call","Invalid argument","I/O error","Transport endpoint is already connected","Is a directory","Is a named type file","Key has expired","Key was rejected by service","Key has been revoked","Level 2 halted","Level 2 not synchronized","Level 3 halted","Level 3 reset","Can not access a needed shared library","Accessing a corrupted shared library","Cannot exec a shared library directly","Attempting to link in too many shared libraries",".lib section in a.out corrupted","Link number out of range","Too many symbolic links encountered","Wrong medium type","Too many open files","Too many links","Message too long","Multihop attempted","File name too long","No XENIX semaphores available","Network is down","Network dropped connection because of reset","Network is unreachable","File table overflow","No anode","No buffer space available","No CSI structure available","No data available","No such device","No such file or directory","Exec format error","Required key not available","No record locks available","Link has been severed","No medium found","Out of memory","No message of desired type","Machine is not on the network","Package not installed","Protocol not available","No space left on device","Out of streams resources","Device not a stream","Invalid system call number","Block device required","Transport endpoint is not connected","Not a directory","Directory not empty","Not a XENIX named type file","State not recoverable","Socket operation on non-socket","Not a typewriter","Name not unique on network","No such device or address","Operation not supported on transport endpoint","Value too large for defined data type","Owner died","Operation not permitted","Protocol family not supported","Broken pipe","Protocol error","Protocol not supported","Protocol wrong type for socket","Math result not representable","Remote address changed","Object is remote","Remote I/O error","Interrupted system call should be restarted","Operation not possible due to RF-kill","Read-only file system","Cannot send after transport endpoint shutdown","Socket type not supported","Illegal seek","No such process","Srmount error","Stale file handle","Streams pipe error","Timer expired","Connection timed out","Too many references: cannot splice","Text file busy","Structure needs cleaning","Protocol driver not attached","Too many users","Cross-device link","Exchange full","Contains the error value","Flags for opening a file","A struct to represent a file path, which will be …","Contains the success value","Map from process id to arc pointer of process","The process control block","The error of a syscall, which is a <code>LinuxError</code>","The result of a syscall","为进程分配一个文件描述符","","","","","是否被vfork阻塞","","","","","子进程","","","实现简易的clone系统调用 …","","创建一个链接","获取所属目录","判断是否end_with","","判断是否相同","将当前进程替换为指定的用户程序 …","退出状态码","文件描述符管理器","获取文件/目录名","该进程可执行文件所在的路径","","Returns the argument unchanged.","Returns the argument unchanged.","若进程运行完成，则获取其返回码 …","获取当前进程的工作目录","get the exit code of the process","get the executable file path of the process","get the heap bottom of the process","get the heap top of the process","get the parent process id","whether the process is a zombie process","查询当前任务是否存在未决信号","…","…","…","在完成一次系统调用之后，恢复全局目录","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","返回是否是目录","返回是否是文件","返回是否是根目录","进程状态","alloc physical memory for lazy allocation manually","alloc range physical memory for lazy allocation manually","alloc physical memory with the given type size for lazy …","地址空间","创建一个新的进程","创建一个 FilePath, 传入的 path 会被 canonicalize, …","若使用多次new …","父进程号","","获取路径","get the process id","To print a string","To read a file with the given path","释放所有非内核进程","robust list存储模块 …","set the exit code of the process","set the executable file path of the process","set the heap bottom of the process","set the heap top of the process","set the parent process id","set the process as blocked by vfork","set the process as a zombie process","信号处理模块 …","判断是否start_with","所管理的线程","","","","","","","","…","以进程作为中转调用task的yield"],"i":[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,33,0,0,33,0,0,0,0,1,1,10,1,10,1,1,10,1,10,1,10,10,1,10,0,10,10,10,10,1,1,1,10,1,10,1,10,1,1,1,1,1,1,1,1,1,1,1,1,0,1,10,10,10,10,1,1,1,1,1,1,10,0,1,10,10,1,0,0,0,1,1,1,1,1,1,1,1,1,10,1,10,1,10,1,10,1,10,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,[5,[[4,[[3,[2]]]]]]],[[8,[6,7]]]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[10,10],[[-1,-2],11,[],[]],[[1,12,[4,[6]],6,6,6,13],[[8,[14,7]]]],[[10,10],15],[[10,10],13],[10,[[8,[16,7]]]],[[10,10],13],[[10,10],13],[[10,10],13],[[1,17,[5,[17]],[5,[17]]],[[8,[11,7]]]],0,0,[10,[[8,[16,7]]]],0,[[10,18],[[8,[11,19]]]],[-1,-1,[]],[-1,-1,[]],[1,[[4,[20]]]],[1,17],[1,20],[1,17],[1,14],[1,14],[1,14],[1,13],[1,[[4,[6]]]],0,0,[[[5,[17]],[5,[17]]],[[8,[[3,[[22,[21]]]],7]]]],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],[10,13],[10,13],[10,13],0,[[1,23],[[8,[11,7]]]],[[1,23,23],[[8,[11,7]]]],[1,[[8,[11,7]]]],0,[[14,14,[3,[[25,[24]]]],14,[5,[[4,[[3,[2]]]]]]],1],[16,[[8,[10,7]]]],[[16,26],[[28,[27]]]],0,[[10,10],[[4,[15]]]],[10,16],[1,14],[16,11],[16,[[4,[17]]]],[[],11],0,[[1,20],11],[[1,17],11],[[1,14],11],[[1,14],11],[[1,14],11],[[1,13],11],[[1,13],11],0,[[10,10],13],0,[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,29,[]],[-1,29,[]],[[30,20],[[8,[14,31]]]],[[],11]],"c":[],"p":[[5,"Process",0],[10,"FileIO",220],[5,"Arc",221],[6,"Option",222],[5,"Vec",223],[1,"usize"],[6,"AxError",224],[6,"Result",225],[10,"Any",226],[5,"FilePath",0],[1,"tuple"],[5,"CloneFlags",227],[1,"bool"],[1,"u64"],[6,"Ordering",228],[1,"str"],[5,"String",229],[5,"Formatter",230],[5,"Error",230],[1,"i32"],[5,"TaskInner",231],[5,"RRTask",232],[5,"VirtAddr",233],[5,"MemorySet",234],[5,"Mutex",235],[5,"OpenFlags",220],[5,"File",236],[8,"AxResult",224],[5,"TypeId",226],[1,"isize"],[6,"WaitStatus",227],[8,"SyscallError",0],[8,"SyscallResult",0]],"b":[]},\
"axstd":{"doc":"The ArceOS Standard Library","t":"EEEEECECECEECECQQCEEEECCCEEHHPPPFFPFPIFFIFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNHNNHHNHHHNNNNNNNNNNNNNNNNNNNNNNNHNNPPPPKFPPPPPPGPPPPPPPPPPPKPIKGPFFFFPPPPPKPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNNNMHHNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNKKKKMMMNMNNNNNNNMNMNNTTTGFFRTTGFFFFKTTFPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCEHEFFENNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFNNNNNNNNNNNNNNNNNNNHNHNNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNNHFFTTTTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["arch","boxed","cell","cmp","collections","env","format","fs","hint","io","marker","mem","net","ops","os","print","println","process","ptr","slice","str","string","sync","thread","time","vec","vec","current_dir","set_current_dir","BlockDevice","CharDevice","Dir","DirBuilder","DirEntry","Fifo","File","File","FileType","Metadata","OpenOptions","Permissions","ReadDir","Socket","SymLink","append","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create","create","create","create_dir","create_dir_all","create_new","create_new","default","file_name","file_type","file_type","flush","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","is_dir","is_file","len","metadata","metadata","new","new","next","open","open","options","path","permissions","read","read","read","read_dir","read_to_string","recursive","remove_dir","remove_file","rename","seek","set_len","size","to_owned","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","write","write","write","AddrInUse","AlreadyExists","BadAddress","BadState","BufRead","BufReader","ConnectionRefused","ConnectionReset","Current","DirectoryNotEmpty","End","Err","Error","Interrupted","InvalidData","InvalidInput","Io","IsADirectory","NoMemory","NotADirectory","NotConnected","NotFound","Ok","PermissionDenied","Read","ResourceBusy","Result","Seek","SeekFrom","Start","Stdin","StdinLock","Stdout","StdoutLock","StorageFull","Timeout","UnexpectedEof","Unsupported","WouldBlock","Write","WriteZero","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","capacity","clone","clone","clone_into","clone_into","code","consume","consume","consume","eq","eq","fill_buf","fill_buf","fill_buf","flush","flush","flush","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_mut","get_ref","has_data_left","into","into","into","into","into","into","into","into_inner","lock","lock","new","prelude","read","read","read","read","read_exact","read_exact","read_full","read_line","read_line","read_line","read_to_end","read_to_end","read_to_string","read_to_string","read_until","read_until","rewind","seek","stdin","stdout","stream_position","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","write","write","write_all","write_fmt","BufRead","Read","Seek","Write","consume","fill_buf","flush","has_data_left","read","read_exact","read_full","read_line","read_to_end","read_to_string","read_until","rewind","seek","stream_position","write","write_all","write_fmt","BITS","BITS","BROADCAST","IpAddr","Ipv4Addr","Ipv6Addr","Iter","LOCALHOST","LOCALHOST","SocketAddr","SocketAddrV4","SocketAddrV6","TcpListener","TcpStream","ToSocketAddrs","UNSPECIFIED","UNSPECIFIED","UdpSocket","V4","V4","V6","V6","accept","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backward_checked","backward_checked","backward_unchecked","backward_unchecked","bind","bind","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","connect","connect","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","flowinfo","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward_checked","forward_checked","forward_unchecked","forward_unchecked","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_str","from_str","from_str","from_str","from_str","from_str","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","ip","ip","ip","is_benchmarking","is_benchmarking","is_benchmarking","is_broadcast","is_documentation","is_documentation","is_documentation","is_global","is_global","is_global","is_ipv4","is_ipv4","is_ipv6","is_ipv6","is_link_local","is_loopback","is_loopback","is_loopback","is_multicast","is_multicast","is_multicast","is_private","is_reserved","is_shared","is_unicast","is_unicast_global","is_unicast_link_local","is_unique_local","is_unspecified","is_unspecified","is_unspecified","local_addr","local_addr","local_addr","multicast_scope","new","new","new","new","new","not","not","not","not","octets","octets","parse_ascii","parse_ascii","parse_ascii","parse_ascii","parse_ascii","parse_ascii","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","peek_from","peer_addr","peer_addr","port","port","port","read","recv","recv_from","scope_id","segments","send","send_to","set_flowinfo","set_ip","set_ip","set_ip","set_port","set_port","set_port","set_scope_id","shutdown","steps_between","steps_between","to_bits","to_bits","to_canonical","to_canonical","to_ipv4","to_ipv4_mapped","to_ipv6_compatible","to_ipv6_mapped","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_socket_addrs","to_socket_addrs","to_socket_addrs","to_socket_addrs","to_socket_addrs","to_socket_addrs","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","arceos","api","exit","Arc","Mutex","MutexGuard","Weak","as_any","as_any","as_any_mut","as_any_mut","atomic","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref_mut","drop","fmt","fmt","force_unlock","from","from","get_mut","into","into","into_inner","is_locked","lock","new","try_from","try_from","try_into","try_into","try_lock","type_id","type_id","Builder","JoinHandle","Thread","ThreadId","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_u64","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","current","eq","exit","fmt","fmt","from","from","from","from","id","into","into","into","into","join","name","new","sleep","sleep_until","spawn","spawn","stack_size","thread","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","yield_now","Duration","Instant","MAX","MICROSECOND","MILLISECOND","NANOSECOND","SECOND","ZERO","abs_diff","add","add","add_assign","add_assign","as_any","as_any","as_any_mut","as_any_mut","as_micros","as_millis","as_nanos","as_secs","as_secs_f32","as_secs_f64","borrow","borrow","borrow","borrow_mut","borrow_mut","checked_add","checked_add","checked_div","checked_mul","checked_sub","checked_sub","clone","clone","clone_into","clone_into","cmp","default","div","div_assign","div_duration_f32","div_duration_f64","div_f32","div_f64","duration_since","elapsed","eq","fmt","from","from","from","from_micros","from_millis","from_nanos","from_secs","from_secs_f32","from_secs_f64","hash","into","into","is_zero","mul","mul_assign","mul_f32","mul_f64","new","now","partial_cmp","saturating_add","saturating_mul","saturating_sub","sub","sub","sub","sub_assign","sub_assign","subsec_micros","subsec_millis","subsec_nanos","sum","sum","to_owned","to_owned","try_from","try_from","try_from_secs_f32","try_from_secs_f64","try_into","try_into","type_id","type_id"],"q":[[0,"axstd"],[27,"axstd::env"],[29,"axstd::fs"],[149,"axstd::io"],[314,"axstd::io::prelude"],[335,"axstd::net"],[660,"axstd::os"],[661,"axstd::os::arceos"],[662,"axstd::process"],[663,"axstd::sync"],[699,"axstd::thread"],[759,"axstd::time"],[852,"alloc::string"],[853,"core::any"],[854,"core::fmt"],[855,"core::fmt"],[856,"alloc::vec"],[857,"core::result"],[858,"core::any"],[859,"core::fmt"],[860,"core::fmt"],[861,"core::convert"],[862,"core::hash"],[863,"core::net::ip_addr"],[864,"core::iter::traits::iterator"],[865,"core::option"],[866,"core::marker"],[867,"core::default"],[868,"core::fmt"],[869,"axhal::time"],[870,"core::marker"],[871,"smoltcp::time"],[872,"core::time"]],"d":["","","","","","Inspection and manipulation of the process’s environment.","","Filesystem manipulation operations.","","Traits, helpers, and type definitions for core I/O …","","","Networking primitives for TCP/UDP communication.","","OS-specific functionality.","Prints to the standard output.","Prints to the standard output, with a newline.","A module for working with processes.","","","","","Useful synchronization primitives.","Native threads.","Temporal quantification.","","","Returns the current working directory as a <code>String</code>.","Changes the current working directory to the specified …","Block device","Character device","Directory","A builder used to create directories in various manners.","Entries returned by the <code>ReadDir</code> iterator.","FIFO (named pipe)","An object providing access to an open file on the …","Regular file","A structure representing a type of file with accessors for …","Metadata information about a file.","Options and flags which can be used to configure how a …","Representation of the various permissions on a file.","Iterator over the entries in a directory.","Socket","Symbolic link","Sets the option for the append mode.","","","","","","","","","","","","","Returns the number of blocks allocated to the file, in …","","","","","","","","","","","","","","","Opens a file in write-only mode.","Creates the specified directory with the options …","Sets the option to create a new file, or open it if it …","Creates a new, empty directory at the provided path.","Recursively create a directory and all of its parent …","Creates a new file in read-write mode; error if the file …","Sets the option to create a new file, failing if it …","","Returns the bare file name of this directory entry without …","Returns the file type for the file that this entry points …","Returns the file type for this metadata.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if this metadata is for a directory. The …","Returns <code>true</code> if this metadata is for a regular file. The …","Returns the size of the file, in bytes, this metadata is …","Given a path, query the file system to get information …","Queries metadata about the underlying file.","Creates a new set of options with default mode/security …","Creates a blank new set of options ready for configuration.","","Attempts to open a file in read-only mode.","Opens a file at <code>path</code> with the options specified by <code>self</code>.","Returns a new OpenOptions object.","Returns the full path to the file that this entry …","Returns the permissions of the file this metadata is for.","Read the entire contents of a file into a bytes vector.","","Sets the option for read access.","Returns an iterator over the entries within a directory.","Read the entire contents of a file into a string.","Indicates that directories should be created recursively, …","Removes an empty directory.","Removes a file from the filesystem.","Rename a file or directory to a new name. Delete the …","","Truncates or extends the underlying file, updating the …","Returns the total size of this file in bytes.","","Sets the option for truncating a previous file.","","","","","","","","","","","","","","","","","","","Write a slice as the entire contents of a file.","","Sets the option for write access.","A socket address could not be bound because the address is …","An entity already exists, often a file.","Bad address.","Bad internal state.","A <code>BufRead</code> is a type of <code>Read</code>er which has an internal …","The <code>BufReader&lt;R&gt;</code> struct adds buffering to any reader.","The connection was refused by the remote server,","The connection was reset by the remote server.","Sets the offset to the current position plus the specified …","A non-empty directory was specified where an empty …","Sets the offset to the size of this object plus the …","Contains the error value","The error type used by ArceOS.","Syscall interrupted by a caught signal","Data not valid for the operation were encountered.","Invalid parameter/argument.","Input/output error.","The filesystem object is, unexpectedly, a directory.","Not enough space/cannot allocate memory.","A filesystem object is, unexpectedly, not a directory.","The network operation failed because it was not connected …","The requested entity is not found.","Contains the success value","The operation lacked the necessary privileges to complete.","The <code>Read</code> trait allows for reading bytes from a source.","Device or resource is busy.","A specialized <code>Result</code> type for I/O operations.","The <code>Seek</code> trait provides a cursor which can be moved within …","Enumeration of possible methods to seek within an I/O …","Sets the offset to the provided number of bytes.","A handle to the standard input stream of a process.","A locked reference to the <code>Stdin</code> handle.","A handle to the global standard output stream of the …","A locked reference to the <code>Stdout</code> handle.","The underlying storage (typically, a filesystem) is full.","Syscall timed out","An error returned when an operation could not be completed …","This operation is unsupported or unimplemented.","The operation needs to block to complete, but the blocking …","A trait for objects which are byte-oriented sinks.","An error returned when an operation could not be completed …","","","","","","","","","","","","","","","Returns the error description.","","","","","","","","","","","","","","","Returns a reference to the internally buffered data.","Returns the number of bytes the internal buffer can hold …","","","","","Returns the error code value in <code>i32</code>.","Tells this buffer that <code>amt</code> bytes have been consumed from …","","","","","Returns the contents of the internal buffer, filling it …","","","Flush this output stream, ensuring that all intermediately …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Gets a mutable reference to the underlying reader.","Gets a reference to the underlying reader.","Check if the underlying <code>Read</code> has any data left to be read.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Unwraps this <code>BufReader&lt;R&gt;</code>, returning the underlying reader.","Locks this handle to the standard input stream, returning …","Locks this handle to the standard output stream, returning …","Creates a new <code>BufReader&lt;R&gt;</code> with a default buffer capacity …","The I/O Prelude.","Pull some bytes from this source into the specified …","","","","","Read the exact number of bytes required to fill <code>buf</code>.","Read the exact number of bytes required to fill <code>buf</code>.","Locks this handle and reads a line of input, appending it …","","Read all bytes until a newline (the <code>0xA</code> byte) is reached, …","","Read all bytes until EOF in this source, placing them into …","","Read all bytes until EOF in this source, appending them to …","","Read all bytes into <code>buf</code> until the delimiter <code>byte</code> or EOF is …","Rewind to the beginning of a stream.","Seek to an offset, in bytes, in a stream.","Constructs a new handle to the standard input of the …","Constructs a new handle to the standard output of the …","Returns the current seek position from the start of the …","","","","","","","","","","","","","","","","","","","","","","","","","","Write a buffer into this writer, returning how many bytes …","","","Attempts to write an entire buffer into this writer.","Writes a formatted string into this writer, returning any …","A <code>BufRead</code> is a type of <code>Read</code>er which has an internal …","The <code>Read</code> trait allows for reading bytes from a source.","The <code>Seek</code> trait provides a cursor which can be moved within …","A trait for objects which are byte-oriented sinks.","Tells this buffer that <code>amt</code> bytes have been consumed from …","Returns the contents of the internal buffer, filling it …","Flush this output stream, ensuring that all intermediately …","Check if the underlying <code>Read</code> has any data left to be read.","Pull some bytes from this source into the specified …","Read the exact number of bytes required to fill <code>buf</code>.","Read the exact number of bytes required to fill <code>buf</code>.","Read all bytes until a newline (the <code>0xA</code> byte) is reached, …","Read all bytes until EOF in this source, placing them into …","Read all bytes until EOF in this source, appending them to …","Read all bytes into <code>buf</code> until the delimiter <code>byte</code> or EOF is …","Rewind to the beginning of a stream.","Seek to an offset, in bytes, in a stream.","Returns the current seek position from the start of the …","Write a buffer into this writer, returning how many bytes …","Attempts to write an entire buffer into this writer.","Writes a formatted string into this writer, returning any …","The size of an IPv4 address in bits.","The size of an IPv6 address in bits.","An IPv4 address representing the broadcast address: …","An IP address, either IPv4 or IPv6.","An IPv4 address.","An IPv6 address.","Returned iterator over socket addresses which this type …","An IPv4 address with the address pointing to localhost: …","An IPv6 address representing localhost: <code>::1</code>.","An internet socket address, either IPv4 or IPv6.","An IPv4 socket address.","An IPv6 socket address.","A TCP socket server, listening for connections.","A TCP stream between a local and a remote socket.","A trait for objects which can be converted or resolved to …","An IPv4 address representing an unspecified address: …","An IPv6 address representing the unspecified address: <code>::</code>","A UDP socket.","An IPv4 address.","An IPv4 socket address.","An IPv6 address.","An IPv6 socket address.","Accept a new incoming connection from this listener.","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>TcpListener</code> which will be bound to the …","Creates a UDP socket from the given address.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Opens a TCP connection to a remote host.","Connects this UDP socket to a remote address, allowing the …","","","","","","","","","","","Returns the flow information associated with this address.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Copies this address to a new <code>IpAddr::V6</code>.","Copies this address to a new <code>IpAddr::V4</code>.","Creates an <code>IpAddr::V6</code> from a sixteen element byte array.","Creates an <code>IpAddr::V4</code> from a four element byte array.","Creates an <code>IpAddr::V6</code> from an eight element 16-bit array.","Creates an <code>Ipv4Addr</code> from a four element byte array.","Returns the argument unchanged.","Uses <code>Ipv4Addr::from_bits</code> to convert a host byte order <code>u32</code> …","Creates an <code>Ipv6Addr</code> from an eight element 16-bit array.","Uses <code>Ipv6Addr::from_bits</code> to convert a host byte order <code>u128</code> …","Returns the argument unchanged.","Creates an <code>Ipv6Addr</code> from a sixteen element byte array.","Converts a tuple struct (Into&lt;<code>IpAddr</code>&gt;, <code>u16</code>) into a …","Returns the argument unchanged.","Converts a <code>SocketAddrV6</code> into a <code>SocketAddr::V6</code>.","Converts a <code>SocketAddrV4</code> into a <code>SocketAddr::V4</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a host byte order <code>u32</code> into an IPv4 address.","Converts a host byte order <code>u128</code> into an IPv6 address.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the IP address associated with this socket address.","Returns the IP address associated with this socket address.","Returns the IP address associated with this socket address.","Returns <code>true</code> if this address is in a range designated for …","Returns <code>true</code> if this address part of the <code>198.18.0.0/15</code> …","Returns <code>true</code> if this is an address reserved for …","Returns <code>true</code> if this is a broadcast address (…","Returns <code>true</code> if this address is in a range designated for …","Returns <code>true</code> if this address is in a range designated for …","Returns <code>true</code> if this is an address reserved for …","Returns <code>true</code> if the address appears to be globally …","Returns <code>true</code> if the address appears to be globally …","Returns <code>true</code> if the address appears to be globally …","Returns <code>true</code> if this address is an <code>IPv4</code> address, and <code>false</code> …","Returns <code>true</code> if the IP address in this <code>SocketAddr</code> is an …","Returns <code>true</code> if this address is an <code>IPv6</code> address, and <code>false</code> …","Returns <code>true</code> if the IP address in this <code>SocketAddr</code> is an …","Returns <code>true</code> if the address is link-local (<code>169.254.0.0/16</code>).","Returns <code>true</code> if this is a loopback address.","Returns <code>true</code> if this is a loopback address (<code>127.0.0.0/8</code>).","Returns <code>true</code> if this is the loopback address (<code>::1</code>), as …","Returns <code>true</code> if this is a multicast address.","Returns <code>true</code> if this is a multicast address (<code>224.0.0.0/4</code>).","Returns <code>true</code> if this is a multicast address (<code>ff00::/8</code>).","Returns <code>true</code> if this is a private address.","Returns <code>true</code> if this address is reserved by IANA for …","Returns <code>true</code> if this address is part of the Shared Address …","Returns <code>true</code> if this is a unicast address, as defined by …","Returns <code>true</code> if the address is a globally routable unicast …","Returns <code>true</code> if the address is a unicast address with …","Returns <code>true</code> if this is a unique local address (<code>fc00::/7</code>).","Returns <code>true</code> for the special ‘unspecified’ address.","Returns <code>true</code> for the special ‘unspecified’ address (…","Returns <code>true</code> for the special ‘unspecified’ address (<code>::</code>…","Returns the socket address of the local half of this TCP …","Returns the local socket address of this listener.","Returns the socket address that this socket was created …","Returns the address’s multicast scope if the address is …","Creates a new IPv4 address from four eight-bit octets.","Creates a new IPv6 address from eight 16-bit segments.","Creates a new socket address from an IP address and a port …","Creates a new socket address from an <code>IPv4</code> address and a …","Creates a new socket address from an <code>IPv6</code> address, a …","","","","","Returns the four eight-bit integers that make up this …","Returns the sixteen eight-bit integers the IPv6 address …","Parse an IP address from a slice of bytes.","Parse an IPv4 address from a slice of bytes.","Parse an IPv6 address from a slice of bytes.","Parse a socket address from a slice of bytes.","Parse an IPv4 socket address from a slice of bytes.","Parse an IPv6 socket address from a slice of bytes.","","","","","","","","","","","Receives a single datagram message on the socket, without …","Returns the socket address of the remote peer of this TCP …","Returns the socket address of the remote peer this socket …","Returns the port number associated with this socket …","Returns the port number associated with this socket …","Returns the port number associated with this socket …","","Receives a single datagram message on the socket from the …","Receives a single datagram message on the socket. On …","Returns the scope ID associated with this address.","Returns the eight 16-bit segments that make up this …","Sends data on the socket to the remote address to which it …","Sends data on the socket to the given address. On success, …","Changes the flow information associated with this socket …","Changes the IP address associated with this socket address.","Changes the IP address associated with this socket address.","Changes the IP address associated with this socket address.","Changes the port number associated with this socket …","Changes the port number associated with this socket …","Changes the port number associated with this socket …","Changes the scope ID associated with this socket address.","Shuts down the connection.","","","Converts an IPv4 address into host byte order <code>u32</code>.","Converts an IPv6 address into host byte order <code>u128</code>.","Converts this address to an <code>IpAddr::V4</code> if it is an …","Converts this address to an <code>IpAddr::V4</code> if it is an …","Converts this address to an <code>IPv4</code> address if it is either …","Converts this address to an <code>IPv4</code> address if it’s an …","Converts this address to an IPv4-compatible <code>IPv6</code> address.","Converts this address to an IPv4-mapped <code>IPv6</code> address.","","","","","","","Converts this object to an iterator of resolved <code>SocketAddr</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ArceOS-specific definitions.","","Shutdown the whole system.","","A mutual exclusion primitive useful for protecting shared …","A guard that provides mutable data access.","","","","","","","","","","","","","","The dropping of the <code>MutexGuard</code> will release the lock it …","","","Force unlock the <code>Mutex</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>Mutex</code> and unwraps the underlying data.","Returns <code>true</code> if the lock is currently held.","Locks the <code>Mutex</code> and returns a guard that permits access to …","Creates a new <code>Mutex</code> wrapping the supplied data.","","","","","Try to lock this <code>Mutex</code>, returning a lock guard if …","","","Thread factory, which can be used in order to configure …","An owned permission to join on a thread (block on its …","A handle to a thread.","A unique identifier for a running thread.","","","","","","","","","This returns a numeric identifier for the thread …","","","","","","","","","","","Gets a handle to the thread that invokes it.","","Exits the current thread.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets the thread’s unique identifier.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Waits for the associated thread to finish.","Names the thread-to-be.","Generates the base configuration for spawning a thread, …","Current thread is going to sleep for the given duration.","Current thread is going to sleep, it will be woken up at …","Spawns a new thread, returning a <code>JoinHandle</code> for it.","Spawns a new thread by taking ownership of the <code>Builder</code>, …","Sets the size of the stack (in bytes) for the new thread.","Extracts a handle to the underlying thread.","","","","","","","","","","","","","","Current thread gives up the CPU time voluntarily, and …","A <code>Duration</code> type to represent a span of time, typically …","A measurement of a monotonically nondecreasing clock. …","The maximum duration.","The duration of one microsecond.","The duration of one millisecond.","The duration of one nanosecond.","The duration of one second.","A duration of zero time.","Computes the absolute difference between <code>self</code> and <code>other</code>.","Panics","","","","","","","","Returns the total number of whole microseconds contained …","Returns the total number of whole milliseconds contained …","Returns the total number of nanoseconds contained by this …","Returns the number of <em>whole</em> seconds contained by this …","Returns the number of seconds contained by this <code>Duration</code> …","Returns the number of seconds contained by this <code>Duration</code> …","","","","","","Returns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> …","Checked <code>Duration</code> addition. Computes <code>self + other</code>, …","Checked <code>Duration</code> division. Computes <code>self / other</code>, …","Checked <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Returns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> …","Checked <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","","","","","","","","Divide <code>Duration</code> by <code>Duration</code> and return <code>f32</code>.","Divide <code>Duration</code> by <code>Duration</code> and return <code>f64</code>.","Divide <code>Duration</code> by <code>f32</code>.","Divide <code>Duration</code> by <code>f64</code>.","Returns the amount of time elapsed from another instant to …","Returns the amount of time elapsed since this instant was …","","","Returns the argument unchanged.","","Returns the argument unchanged.","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of whole …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if this <code>Duration</code> spans no time.","","","Multiplies <code>Duration</code> by <code>f32</code>.","Multiplies <code>Duration</code> by <code>f64</code>.","Creates a new <code>Duration</code> from the specified number of whole …","Returns an instant corresponding to “now”.","","Saturating <code>Duration</code> addition. Computes <code>self + other</code>, …","Saturating <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Saturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","Returns the amount of time elapsed from another instant to …","","","","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in …","","","","","","","The checked version of <code>from_secs_f32</code>.","The checked version of <code>from_secs_f64</code>.","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,13,0,0,13,0,13,0,0,0,0,0,13,13,5,16,12,10,8,11,5,16,12,10,8,11,5,8,16,12,10,8,11,5,16,12,10,8,11,5,5,5,10,11,5,0,0,10,5,11,12,12,8,10,12,8,11,5,16,12,10,8,11,5,16,12,10,8,11,5,16,8,8,8,0,10,11,5,16,10,5,10,12,8,0,10,5,0,0,11,0,0,0,10,10,8,5,5,16,12,10,8,11,5,16,12,10,8,11,5,16,12,10,8,11,5,0,10,5,27,27,27,27,0,0,27,27,23,27,23,2,0,27,27,27,27,27,27,27,27,27,2,27,0,27,0,0,0,23,0,0,0,0,27,27,27,27,27,0,27,28,38,32,34,35,23,27,28,38,32,34,35,23,27,27,28,38,32,34,35,23,27,28,38,32,34,35,23,27,28,28,23,27,23,27,27,30,28,32,23,27,30,28,32,33,34,35,23,27,27,28,38,32,34,35,23,27,27,28,28,30,28,38,32,34,35,23,27,28,38,34,28,0,31,28,38,32,28,31,31,38,32,30,28,31,28,31,32,30,39,39,0,0,39,23,27,27,28,38,32,34,35,23,27,27,28,38,32,34,35,23,27,28,38,32,34,35,23,27,33,34,35,33,33,0,0,0,0,30,30,33,30,31,31,31,30,31,31,30,39,39,39,33,33,33,44,45,44,0,0,0,46,44,45,0,0,0,0,0,0,44,45,0,48,43,48,43,41,42,41,47,48,44,45,43,49,50,42,41,47,48,44,45,43,49,50,44,45,44,45,41,47,44,44,44,44,45,45,45,45,44,44,45,45,44,44,44,44,45,45,45,45,44,44,45,45,42,41,47,48,44,45,43,49,50,42,41,47,48,44,45,43,49,50,48,44,45,43,49,50,48,44,45,43,49,50,48,44,45,43,49,50,42,47,48,48,48,44,44,45,45,43,49,50,50,42,48,48,44,44,45,45,43,43,49,49,50,50,44,45,44,45,42,41,47,48,48,48,48,48,48,44,44,44,45,45,45,45,43,43,43,43,49,50,44,45,48,44,45,43,49,50,48,44,45,43,49,50,42,41,47,48,44,45,43,49,50,43,49,50,48,44,45,44,48,44,45,48,44,45,48,43,48,43,44,48,44,45,48,44,45,44,44,44,45,45,45,45,48,44,45,42,41,47,45,44,45,43,49,50,44,44,45,45,44,45,48,44,45,43,49,50,48,48,48,44,44,45,45,43,49,50,47,42,47,43,49,50,42,47,47,50,45,47,47,50,43,49,50,43,49,50,50,42,44,45,44,45,48,45,45,45,44,44,48,44,45,43,49,50,46,43,43,49,49,50,48,44,45,43,49,50,42,41,47,48,44,45,43,49,50,42,41,47,48,44,45,43,49,50,42,41,47,48,44,45,43,49,50,42,0,0,0,0,0,0,0,66,69,66,69,0,66,69,66,69,66,69,69,69,66,69,66,66,69,66,66,69,66,66,66,66,66,69,66,69,66,66,69,0,0,0,0,73,75,71,74,73,75,71,74,71,73,75,71,74,73,75,71,74,71,71,0,71,0,71,74,73,75,71,74,73,73,75,71,74,75,74,74,0,0,0,74,74,75,71,73,75,71,74,73,75,71,74,73,75,71,74,0,0,0,76,76,76,76,76,76,76,81,76,81,76,81,76,81,76,76,76,76,76,76,76,81,76,76,81,76,81,76,76,76,81,76,81,76,81,76,76,76,76,76,76,76,76,76,81,81,76,76,81,76,76,76,76,76,76,76,76,76,81,76,76,76,76,76,76,76,81,76,76,76,76,81,81,76,81,76,76,76,76,76,76,81,76,81,76,76,76,81,76,81,76],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[2,[1]]]],[3,[[2,[4]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[5,6],5],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[8,9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[5,5],[[-1,-2],4,[],[]],[3,[[2,[10]]]],[[11,3],[[2,[4]]]],[[5,6],5],[3,[[2,[4]]]],[3,[[2,[4]]]],[3,[[2,[10]]]],[[5,6],5],[[],11],[12,1],[12,13],[8,13],[10,[[2,[4]]]],[[12,14],15],[[8,14],15],[[11,14],15],[[5,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[8,6],[8,6],[8,9],[3,[[2,[8]]]],[10,[[2,[8]]]],[[],11],[[],5],[16,[[17,[[2,[12]]]]]],[3,[[2,[10]]]],[[5,3],[[2,[10]]]],[[],5],[12,1],[8,18],[3,[[2,[[20,[19]]]]]],[[10,[21,[19]]],[[2,[22]]]],[[5,6],5],[3,[[2,[16]]]],[3,[[2,[1]]]],[[11,6],11],[3,[[2,[4]]]],[3,[[2,[4]]]],[[3,3],[[2,[4]]]],[[10,23],[[2,[9]]]],[[10,9],[[2,[4]]]],[8,9],[-1,-2,[],[]],[[5,6],5],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[[3,-1],[[2,[4]]],[[26,[[21,[19]]]]]],[[10,[21,[19]]],[[2,[22]]]],[[5,6],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[27,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[28,[-1]]],[[21,[19]]],[]],[[[28,[-1]]],22,[]],[23,23],[27,27],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[27,29],[[30,22],4],[[[28,[-1]],22],4,31],[[32,22],4],[[23,23],6],[[27,27],6],[30,[[24,[[21,[19]],27]]]],[[[28,[-1]]],[[24,[[21,[19]],27]]],31],[32,[[2,[[21,[19]]]]]],[33,[[24,[4,27]]]],[34,[[2,[4]]]],[35,[[2,[4]]]],[[23,14],[[24,[4,36]]]],[[27,14],[[24,[4,36]]]],[[27,14],[[24,[4,36]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[37,27],[-1,-1,[]],[[[28,[-1]]],-1,[]],[[[28,[-1]]],-1,[]],[30,[[24,[6,27]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[28,[-1]]],-1,[]],[38,32],[34,35],[-1,[[28,[-1]]],31],0,[[31,[21,[19]]],[[24,[22,27]]]],[[[28,[-1]],[21,[19]]],[[24,[22,27]]],31],[[38,[21,[19]]],[[2,[22]]]],[[32,[21,[19]]],[[2,[22]]]],[[[28,[-1]],[21,[19]]],[[24,[4,27]]],31],[[31,[21,[19]]],[[24,[4,27]]]],[[31,[21,[19]]],[[24,[22,27]]]],[[38,1],[[2,[22]]]],[[32,1],[[2,[22]]]],[[30,1],[[24,[22,27]]]],[[[28,[-1]],[20,[19]]],[[24,[22,27]]],31],[[31,[20,[19]]],[[24,[22,27]]]],[[[28,[-1]],1],[[24,[22,27]]],31],[[31,1],[[24,[22,27]]]],[[32,19,[20,[19]]],[[2,[22]]]],[[30,19,[20,[19]]],[[24,[22,27]]]],[39,[[24,[4,27]]]],[[39,23],[[24,[9,27]]]],[[],38],[[],34],[39,[[24,[9,27]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,1,[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[29,[[24,[27]]]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[[33,[21,[19]]],[[24,[22,27]]]],[[34,[21,[19]]],[[2,[22]]]],[[35,[21,[19]]],[[2,[22]]]],[[33,[21,[19]]],[[24,[4,27]]]],[[33,40],[[24,[4,27]]]],0,0,0,0,[[30,22],4],[30,[[24,[[21,[19]],27]]]],[33,[[24,[4,27]]]],[30,[[24,[6,27]]]],[[31,[21,[19]]],[[24,[22,27]]]],[[31,[21,[19]]],[[24,[4,27]]]],[[31,[21,[19]]],[[24,[22,27]]]],[[30,1],[[24,[22,27]]]],[[31,[20,[19]]],[[24,[22,27]]]],[[31,1],[[24,[22,27]]]],[[30,19,[20,[19]]],[[24,[22,27]]]],[39,[[24,[4,27]]]],[[39,23],[[24,[9,27]]]],[39,[[24,[9,27]]]],[[33,[21,[19]]],[[24,[22,27]]]],[[33,[21,[19]]],[[24,[4,27]]]],[[33,40],[[24,[4,27]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[41,[[2,[[4,[42,43]]]]]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[[44,22],[[17,[44]]]],[[45,22],[[17,[45]]]],[[44,22],44],[[45,22],45],[-1,[[2,[41]]],46],[-1,[[2,[47]]],46],[[44,44],44],[[44,44],44],[[44,44],44],[[44,44],44],[[45,45],45],[[45,45],45],[[45,45],45],[[45,45],45],[[44,44],4],[[44,44],4],[[45,45],4],[[45,45],4],[[44,44],44],[[44,44],44],[[44,44],44],[[44,44],44],[[45,45],45],[[45,45],45],[[45,45],45],[[45,45],45],[[44,44],4],[[44,44],4],[[45,45],4],[[45,45],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[48,48],[44,44],[45,45],[43,43],[49,49],[50,50],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[48,48],51],[[44,44],51],[[45,45],51],[[43,43],51],[[49,49],51],[[50,50],51],[-1,[[2,[42]]],46],[[47,43],[[2,[4]]]],[[48,44],6],[[48,48],6],[[48,45],6],[[44,44],6],[[44,48],6],[[45,48],6],[[45,45],6],[[43,43],6],[[49,49],6],[[50,50],6],[50,52],[42,[[2,[4]]]],[[48,14],[[24,[4,36]]]],[[48,14],[[24,[4,36]]]],[[44,14],[[24,[4,36]]]],[[44,14],[[24,[4,36]]]],[[45,14],[[24,[4,36]]]],[[45,14],[[24,[4,36]]]],[[43,14],[[24,[4,36]]]],[[43,14],[[24,[4,36]]]],[[49,14],[[24,[4,36]]]],[[49,14],[[24,[4,36]]]],[[50,14],[[24,[4,36]]]],[[50,14],[[24,[4,36]]]],[[44,22],[[17,[44]]]],[[45,22],[[17,[45]]]],[[44,22],44],[[45,22],45],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[45,48],[44,48],[[[53,[19]]],48],[[[53,[19]]],48],[[[53,[54]]],48],[[[53,[19]]],44],[-1,-1,[]],[52,44],[[[53,[54]]],45],[55,45],[-1,-1,[]],[[[53,[19]]],45],[[[4,[-1,54]]],43,[[56,[48]]]],[-1,-1,[]],[50,43],[49,43],[-1,-1,[]],[-1,-1,[]],[52,44],[55,45],[3,[[24,[48,57]]]],[3,[[24,[44,57]]]],[3,[[24,[45,57]]]],[3,[[24,[43,57]]]],[3,[[24,[49,57]]]],[3,[[24,[50,57]]]],[[48,-1],4,58],[[44,-1],4,58],[[45,-1],4,58],[[43,-1],4,58],[[49,-1],4,58],[[50,-1],4,58],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[43,48],[49,44],[50,45],[48,6],[44,6],[45,6],[44,6],[48,6],[44,6],[45,6],[48,6],[44,6],[45,6],[48,6],[43,6],[48,6],[43,6],[44,6],[48,6],[44,6],[45,6],[48,6],[44,6],[45,6],[44,6],[44,6],[44,6],[45,6],[45,6],[45,6],[45,6],[48,6],[44,6],[45,6],[42,[[2,[43]]]],[41,[[2,[43]]]],[47,[[2,[43]]]],[45,[[17,[59]]]],[[19,19,19,19],44],[[54,54,54,54,54,54,54,54],45],[[48,54],43],[[44,54],49],[[45,54,52,52],50],[44,44],[44,44],[45,45],[45,45],[44,[[53,[19]]]],[45,[[53,[19]]]],[[[21,[19]]],[[24,[48,57]]]],[[[21,[19]]],[[24,[44,57]]]],[[[21,[19]]],[[24,[45,57]]]],[[[21,[19]]],[[24,[43,57]]]],[[[21,[19]]],[[24,[49,57]]]],[[[21,[19]]],[[24,[50,57]]]],[[48,48],[[17,[51]]]],[[48,44],[[17,[51]]]],[[48,45],[[17,[51]]]],[[44,48],[[17,[51]]]],[[44,44],[[17,[51]]]],[[45,48],[[17,[51]]]],[[45,45],[[17,[51]]]],[[43,43],[[17,[51]]]],[[49,49],[[17,[51]]]],[[50,50],[[17,[51]]]],[[47,[21,[19]]],[[2,[[4,[22,43]]]]]],[42,[[2,[43]]]],[47,[[2,[43]]]],[43,54],[49,54],[50,54],[[42,[21,[19]]],[[2,[22]]]],[[47,[21,[19]]],[[2,[22]]]],[[47,[21,[19]]],[[2,[[4,[22,43]]]]]],[50,52],[45,[[53,[54]]]],[[47,[21,[19]]],[[2,[22]]]],[[47,[21,[19]],-1],[[2,[22]]],46],[[50,52],4],[[43,48],4],[[49,44],4],[[50,45],4],[[43,54],4],[[49,54],4],[[50,54],4],[[50,52],4],[42,[[2,[4]]]],[[44,44],[[17,[22]]]],[[45,45],[[17,[22]]]],[44,52],[45,55],[48,48],[45,48],[45,[[17,[44]]]],[45,[[17,[44]]]],[44,45],[44,45],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[46,[],[[60,[-1]]]]],[[2,[-1]]],[[62,[],[[61,[43]]]]]],[43,[[2,[[63,[43]]]]]],[43,[[24,[[63,[43]],64]]]],[49,[[2,[[63,[43]]]]]],[49,[[24,[[63,[43]],64]]]],[50,[[24,[[63,[43]],64]]]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[[42,[21,[19]]],[[2,[22]]]],0,0,[29,65],0,0,0,0,[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[66,[-1]]],[67,68]],[[[69,[-1]]],-1,67],[[[69,[-1]]],-1,67],[[[69,[-1]]],4,67],[[[66,[-1]],14],15,[67,70]],[[[69,[-1]],14],15,[67,70]],[[[66,[-1]]],4,67],[-1,-1,[]],[-1,-1,[]],[[[66,[-1]]],-1,67],[-1,-2,[],[]],[-1,-2,[],[]],[[[66,[-1]]],-1,[]],[[[66,[-1]]],6,67],[[[66,[-1]]],[[69,[-1]]],67],[-1,[[66,[-1]]],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[[[66,[-1]]],[[17,[[69,[-1]]]]],67],[-1,25,[]],[-1,25,[]],0,0,0,0,[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[71,72],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[71,71],[[-1,-2],4,[],[]],[[],73],[[71,71],6],[29,65],[[71,14],15],[[74,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[73,71],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[75,[-1]]],[[2,[-1]]],[]],[[74,1],74],[[],74],[76,4],[77,4],[-2,[[75,[-1]]],78,[[80,[],[[79,[-1]]]],78]],[[74,-2],[[2,[[75,[-1]]]]],78,[[80,[],[[79,[-1]]]],78]],[[74,22],74],[[[75,[-1]]],73,[]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[[],4],0,0,0,0,0,0,0,0,[[76,76],76],[[81,76],81],[[76,76],76],[[81,76],4],[[76,76],4],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[76,55],[76,55],[76,55],[76,9],[76,82],[76,83],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[81,76],[[17,[81]]]],[[76,76],[[17,[76]]]],[[76,52],[[17,[76]]]],[[76,52],[[17,[76]]]],[[81,76],[[17,[81]]]],[[76,76],[[17,[76]]]],[81,81],[76,76],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[76,76],51],[[],76],[[76,52],76],[[76,52],4],[[76,76],82],[[76,76],83],[[76,82],76],[[76,83],76],[[81,81],76],[81,76],[[76,76],6],[[76,14],[[24,[4,36]]]],[-1,-1,[]],[84,76],[-1,-1,[]],[9,76],[9,76],[9,76],[9,76],[82,76],[83,76],[[76,-1],4,58],[-1,-2,[],[]],[-1,-2,[],[]],[76,6],[[76,52],76],[[76,52],4],[[76,82],76],[[76,83],76],[[9,52],76],[[],81],[[76,76],[[17,[51]]]],[[76,76],76],[[76,52],76],[[76,76],76],[[81,76],81],[[81,81],76],[[76,76],76],[[81,76],4],[[76,76],4],[76,52],[76,52],[76,52],[-1,76,[[62,[],[[61,[76]]]]]],[-1,76,[[62,[],[[61,[76]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[82,[[24,[76,85]]]],[83,[[24,[76,85]]]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,25,[]],[-1,25,[]]],"c":[],"p":[[5,"String",852],[8,"Result",149],[1,"str"],[1,"tuple"],[5,"OpenOptions",29],[1,"bool"],[10,"Any",853],[5,"Metadata",29],[1,"u64"],[5,"File",29],[5,"DirBuilder",29],[5,"DirEntry",29],[8,"FileType",29],[5,"Formatter",854],[8,"Result",854],[5,"ReadDir",29],[6,"Option",855],[8,"Permissions",29],[1,"u8"],[5,"Vec",856],[1,"slice"],[1,"usize"],[6,"SeekFrom",149],[6,"Result",857],[5,"TypeId",853],[10,"AsRef",858],[6,"Error",149],[5,"BufReader",149],[1,"i32"],[10,"BufRead",149],[10,"Read",149],[5,"StdinLock",149],[10,"Write",149],[5,"Stdout",149],[5,"StdoutLock",149],[5,"Error",854],[5,"CapError",859],[5,"Stdin",149],[10,"Seek",149],[5,"Arguments",854],[5,"TcpListener",335],[5,"TcpStream",335],[6,"SocketAddr",335],[5,"Ipv4Addr",335],[5,"Ipv6Addr",335],[10,"ToSocketAddrs",335],[5,"UdpSocket",335],[6,"IpAddr",335],[5,"SocketAddrV4",335],[5,"SocketAddrV6",335],[6,"Ordering",860],[1,"u32"],[1,"array"],[1,"u16"],[1,"u128"],[10,"Into",858],[5,"AddrParseError",861],[10,"Hasher",862],[6,"Ipv6MulticastScope",863],[17,"Iter"],[17,"Item"],[10,"Iterator",864],[5,"IntoIter",855],[5,"Error",865],[1,"never"],[5,"Mutex",663],[10,"Sized",866],[10,"Default",867],[5,"MutexGuard",663],[10,"Debug",854],[5,"ThreadId",699],[5,"NonZeroU64",868],[5,"Thread",699],[5,"Builder",699],[5,"JoinHandle",699],[5,"Duration",759],[8,"TimeValue",869],[10,"Send",866],[17,"Output"],[10,"FnOnce",870],[5,"Instant",759],[1,"f32"],[1,"f64"],[5,"Duration",871],[5,"TryFromFloatSecsError",872]],"b":[[238,"impl-Display-for-Error"],[239,"impl-Debug-for-Error"],[382,"impl-BitAnd%3C%26Ipv4Addr%3E-for-Ipv4Addr"],[383,"impl-BitAnd%3CIpv4Addr%3E-for-%26Ipv4Addr"],[384,"impl-BitAnd-for-Ipv4Addr"],[385,"impl-BitAnd%3C%26Ipv4Addr%3E-for-%26Ipv4Addr"],[386,"impl-BitAnd%3CIpv6Addr%3E-for-%26Ipv6Addr"],[387,"impl-BitAnd-for-Ipv6Addr"],[388,"impl-BitAnd%3C%26Ipv6Addr%3E-for-%26Ipv6Addr"],[389,"impl-BitAnd%3C%26Ipv6Addr%3E-for-Ipv6Addr"],[390,"impl-BitAndAssign%3C%26Ipv4Addr%3E-for-Ipv4Addr"],[391,"impl-BitAndAssign-for-Ipv4Addr"],[392,"impl-BitAndAssign%3C%26Ipv6Addr%3E-for-Ipv6Addr"],[393,"impl-BitAndAssign-for-Ipv6Addr"],[394,"impl-BitOr-for-Ipv4Addr"],[395,"impl-BitOr%3C%26Ipv4Addr%3E-for-%26Ipv4Addr"],[396,"impl-BitOr%3C%26Ipv4Addr%3E-for-Ipv4Addr"],[397,"impl-BitOr%3CIpv4Addr%3E-for-%26Ipv4Addr"],[398,"impl-BitOr%3C%26Ipv6Addr%3E-for-%26Ipv6Addr"],[399,"impl-BitOr%3CIpv6Addr%3E-for-%26Ipv6Addr"],[400,"impl-BitOr-for-Ipv6Addr"],[401,"impl-BitOr%3C%26Ipv6Addr%3E-for-Ipv6Addr"],[402,"impl-BitOrAssign-for-Ipv4Addr"],[403,"impl-BitOrAssign%3C%26Ipv4Addr%3E-for-Ipv4Addr"],[404,"impl-BitOrAssign%3C%26Ipv6Addr%3E-for-Ipv6Addr"],[405,"impl-BitOrAssign-for-Ipv6Addr"],[444,"impl-PartialEq%3CIpv4Addr%3E-for-IpAddr"],[445,"impl-PartialEq-for-IpAddr"],[446,"impl-PartialEq%3CIpv6Addr%3E-for-IpAddr"],[447,"impl-PartialEq-for-Ipv4Addr"],[448,"impl-PartialEq%3CIpAddr%3E-for-Ipv4Addr"],[449,"impl-PartialEq%3CIpAddr%3E-for-Ipv6Addr"],[450,"impl-PartialEq-for-Ipv6Addr"],[456,"impl-Display-for-IpAddr"],[457,"impl-Debug-for-IpAddr"],[458,"impl-Display-for-Ipv4Addr"],[459,"impl-Debug-for-Ipv4Addr"],[460,"impl-Display-for-Ipv6Addr"],[461,"impl-Debug-for-Ipv6Addr"],[462,"impl-Display-for-SocketAddr"],[463,"impl-Debug-for-SocketAddr"],[464,"impl-Debug-for-SocketAddrV4"],[465,"impl-Display-for-SocketAddrV4"],[466,"impl-Display-for-SocketAddrV6"],[467,"impl-Debug-for-SocketAddrV6"],[476,"impl-From%3CIpv6Addr%3E-for-IpAddr"],[477,"impl-From%3CIpv4Addr%3E-for-IpAddr"],[478,"impl-From%3C%5Bu8;+16%5D%3E-for-IpAddr"],[479,"impl-From%3C%5Bu8;+4%5D%3E-for-IpAddr"],[480,"impl-From%3C%5Bu16;+8%5D%3E-for-IpAddr"],[481,"impl-From%3C%5Bu8;+4%5D%3E-for-Ipv4Addr"],[483,"impl-From%3Cu32%3E-for-Ipv4Addr"],[484,"impl-From%3C%5Bu16;+8%5D%3E-for-Ipv6Addr"],[485,"impl-From%3Cu128%3E-for-Ipv6Addr"],[487,"impl-From%3C%5Bu8;+16%5D%3E-for-Ipv6Addr"],[488,"impl-From%3C(I,+u16)%3E-for-SocketAddr"],[490,"impl-From%3CSocketAddrV6%3E-for-SocketAddr"],[491,"impl-From%3CSocketAddrV4%3E-for-SocketAddr"],[560,"impl-Not-for-%26Ipv4Addr"],[561,"impl-Not-for-Ipv4Addr"],[562,"impl-Not-for-Ipv6Addr"],[563,"impl-Not-for-%26Ipv6Addr"],[572,"impl-PartialOrd-for-IpAddr"],[573,"impl-PartialOrd%3CIpv4Addr%3E-for-IpAddr"],[574,"impl-PartialOrd%3CIpv6Addr%3E-for-IpAddr"],[575,"impl-PartialOrd%3CIpAddr%3E-for-Ipv4Addr"],[576,"impl-PartialOrd-for-Ipv4Addr"],[577,"impl-PartialOrd%3CIpAddr%3E-for-Ipv6Addr"],[578,"impl-PartialOrd-for-Ipv6Addr"],[621,"impl-ToSocketAddrs-for-SocketAddr"],[622,"impl-ToSocketAddrs-for-SocketAddr"],[623,"impl-ToSocketAddrs-for-SocketAddrV4"],[624,"impl-ToSocketAddrs-for-SocketAddrV4"],[832,"impl-Sub%3CDuration%3E-for-Instant"],[833,"impl-Sub-for-Instant"],[840,"impl-Sum-for-Duration"],[841,"impl-Sum%3C%26Duration%3E-for-Duration"]],"a":{"in6addr_any":[351],"in6addr_any_init":[351],"in6addr_loopback":[343],"in6addr_loopback_init":[343],"inaddr_any":[350]}},\
"axsync":{"doc":"ArceOS synchronization primitives.","t":"FFNNNNNNNNNNNNNNNNNNNNENNNNNNN","n":["Mutex","MutexGuard","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref_mut","drop","fmt","fmt","force_unlock","from","from","get_mut","into","into","into_inner","is_locked","lock","new","spin","try_from","try_from","try_into","try_into","try_lock","type_id","type_id"],"q":[[0,"axsync"],[30,"core::marker"],[31,"core::default"],[32,"core::fmt"],[33,"core::fmt"],[34,"core::option"],[35,"core::any"]],"d":["A mutual exclusion primitive useful for protecting shared …","A guard that provides mutable data access.","","","","","","","","The dropping of the <code>MutexGuard</code> will release the lock it …","","","Force unlock the <code>Mutex</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>Mutex</code> and unwraps the underlying data.","Returns <code>true</code> if the lock is currently held.","Locks the <code>Mutex</code> and returns a guard that permits access to …","Creates a new <code>Mutex</code> wrapping the supplied data.","","","","","","Try to lock this <code>Mutex</code>, returning a lock guard if …","",""],"i":[0,0,1,4,1,4,1,4,4,4,1,4,1,1,4,1,1,4,1,1,1,1,0,1,4,1,4,1,1,4],"f":[0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[1,[-1]]],[2,3]],[[[4,[-1]]],-1,2],[[[4,[-1]]],-1,2],[[[4,[-1]]],5,2],[[[1,[-1]],6],7,[2,8]],[[[4,[-1]],6],7,[2,8]],[[[1,[-1]]],5,2],[-1,-1,[]],[-1,-1,[]],[[[1,[-1]]],-1,2],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],-1,[]],[[[1,[-1]]],9,2],[[[1,[-1]]],[[4,[-1]]],2],[-1,[[1,[-1]]],[]],0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[[[1,[-1]]],[[11,[[4,[-1]]]]],2],[-1,12,[]],[-1,12,[]]],"c":[],"p":[[5,"Mutex",0],[10,"Sized",30],[10,"Default",31],[5,"MutexGuard",0],[1,"tuple"],[5,"Formatter",32],[8,"Result",32],[10,"Debug",32],[1,"bool"],[6,"Result",33],[6,"Option",34],[5,"TypeId",35]],"b":[]},\
"axtask":{"doc":"ArceOS task management module.","t":"IPFJPJJPPPPPPPPGFKFFGKKFNNNNNNNNNNNNNNNNMNNNNNNNNNOHHNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNHOOOHOOMNNNNNHNNNNNNNNHHHHHHNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNMNNNNNHH","n":["AxTaskRef","Blocked","CurrentTask","EXITED_TASKS","Exited","IDLE_TASK","RUN_QUEUE","Ready","Running","SCHED_BATCH","SCHED_FIFO","SCHED_IDLE","SCHED_OTHER","SCHED_RR","SCHED_UNKNOWN","SchedPolicy","SchedStatus","SignalCaller","TaskId","TaskInner","TaskState","VforkCheck","VforkSet","WaitQueue","as_task_ref","as_u64","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_vfork","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cpu_set","current","current_may_uninit","default","deref","drop","eq","eq","eq","exit","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_clear_child_tid","get_cpu_set","get_ctx","get_first_trap_frame","get_kernel_stack_top","get_page_table_token","get_process_id","get_sched_status","get_sig_child","id","id_name","init_scheduler","init_scheduler_secondary","into","into","into","into","into","into","into","is_leader","is_vfork","join","name","new","new","new","notify_all","notify_one","notify_task","on_timer_tick","page_table_token","policy","priority","run_idle","sched_status","send_sigchld_when_exit","send_signal","set_child_tid","set_clear_child_tid","set_cpu_set","set_leader","set_name","set_priority","set_process_id","set_sched_status","set_sig_child","set_state","set_timer","set_tls_force","set_trap_context","set_trap_in_kernel_stack","sleep","sleep","sleep_until","sleep_until","spawn","spawn_raw","state","time_stat_clear","time_stat_from_kernel_to_user","time_stat_from_user_to_kernel","time_stat_output","time_stat_when_switch_from","time_stat_when_switch_to","timer_output","to_owned","to_owned","to_owned","to_owned","trap_frame","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vfork_set","wait","wait_timeout","wait_timeout_until","wait_until","with_capacity","yield_now","yield_now"],"q":[[0,"axtask"],[172,"core::option"],[173,"core::fmt"],[174,"core::fmt"],[175,"axhal::arch::x86_64::context"],[176,"core::ops::function"],[177,"core::marker"],[178,"core::time"],[179,"axhal::time"],[180,"core::result"],[181,"core::any"],[182,"core::ops::function"]],"d":["The reference type of a task.","","A wrapper of <code>AxTaskRef</code> as the current task.","The exited task-queue of the kernel.","","The idle task of the kernel.","The running task-queue of the kernel.","","","The batch scheduler","The first-in, first-out scheduler","The idle task scheduler","The default time-sharing scheduler","The round-robin scheduler","Unknown scheduler","The policy of the scheduler","The status of the scheduler","Handler to send signals.","A unique identifier for a thread.","The inner task structure.","The possible states of a task.","The interface for checking whether the task is blocked by …","VforkSet for syscall vfork","A queue to store sleeping tasks.","Converts <code>CurrentTask</code> to <code>AxTaskRef</code>.","Convert the task ID to a <code>u64</code>.","","","","","","","","","","","","","","","Called to check whether vforked","清空计数器，为了给单元测试使用 保留了gc, …","","","","","","","","","TODO: to support the sched_setaffinity","Gets the current task.","Gets the current task, or returns <code>None</code> if the current task …","","","","","","","Exits the current task.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","get the pointer to the child thread ID","to get the CPU set","get the task context for task switch","获取内核栈的第一个trap上下文","获取内核栈栈顶","get the page table token of the process which the task …","get the process ID of the task","get the scheduling policy and priority","whether to send SIG_CHILD when the task exits","Gets the ID of the task.","Get a combined string of the task ID and name.","Initializes the task scheduler (for the primary CPU).","Initializes the task scheduler for secondary CPUs.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","whether the task is the main thread of the process","获取父进程blocked_by_vfork布尔值","Wait for the task to exit, and return the exit code.","Gets the name of the task.","Create a new task with the given entry function and stack …","Creates an empty wait queue.","Create a new task ID.","Wakes all tasks in the wait queue.","Wakes up one task in the wait queue, usually the first one.","Wake up the given task in the wait queue.","Handles periodic timer ticks for the task manager.","the page table token of the process which the task belongs …","The policy of the scheduler","The priority of the scheduler policy","The idle task routine.","The scheduler status of the task, which defines the …","退出时是否向父进程发送SIG_CHILD","Handles interrupt requests for the given IRQ number.","store the child thread ID at the location pointed to by …","clear (zero) the child thread ID at the location pointed …","设置CPU set，其中set_size为bytes长度","set the flag whether the task is the main thread of the …","Sets the name of the task.","Set the priority for current task.","set the process ID of the task","set the scheduling policy and priority","set whether to send SIG_CHILD when the task exits","set the state of the task","设置计时器信息","Safety","设置Trap上下文","将trap上下文直接写入到内核栈上 …","Current task is going to sleep for the given duration.","Current task is going to sleep for the given duration.","Current task is going to sleep, it will be woken up at the …","Current task is going to sleep, it will be woken up at the …","Spawns a new task with the default parameters.","Spawns a new task with the given parameters.","the state of the task","重置统计时间","update the time information when the task is switched from …","update the time information when the task is switched from …","…","update the time information when the task is switched out","update the time information when the task is ready to be …","输出计时器信息 …","","","","","初始化的trap上下文","","","","","","","","","","","","","","","","","","","","","","Set vfork status through process_id","Blocks the current task and put it into the wait queue, …","Blocks the current task and put it into the wait queue, …","Blocks the current task and put it into the wait queue, …","Blocks the current task and put it into the wait queue, …","Creates an empty wait queue with space for at least …","Current task gives up the CPU time voluntarily, and …","Current task gives up the CPU time voluntarily, and …"],"i":[0,8,0,0,8,0,0,8,8,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,1,3,12,1,25,3,8,9,10,12,1,25,3,8,9,10,5,3,3,8,9,10,3,8,9,10,12,0,0,3,1,12,3,8,9,0,12,3,8,12,1,25,3,8,8,9,9,10,12,12,12,12,12,12,12,12,12,12,12,0,0,12,1,25,3,8,9,10,12,12,12,12,12,25,3,25,25,25,0,12,10,10,0,12,12,34,12,12,12,12,12,0,12,12,12,12,12,12,12,12,0,0,0,0,0,0,12,12,12,12,12,12,12,12,3,8,9,10,12,12,1,25,3,8,9,10,12,1,25,3,8,9,10,12,1,25,3,8,9,10,31,25,25,25,25,25,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[5,4],6],[[],7],[3,3],[8,8],[9,9],[10,10],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],0,[[],1],[[],[[11,[1]]]],[[],3],[1,-1,[]],[12,7],[[3,3],6],[[8,8],6],[[9,9],6],[13,14],[[12,15],16],[[3,15],16],[[8,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[17,8],[-1,-1,[]],[18,9],[-1,-1,[]],[12,18],[12,18],[12,19],[12,20],[12,[[11,[18]]]],[12,18],[12,4],[12,10],[12,6],[12,3],[12,21],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[12,6],[12,6],[12,[[11,[13]]]],[12,22],[[-1,21,18,4,18,6],2,[23,24]],[[],25],[[],3],[[25,6],7],[[25,6],6],[[25,6,2],6],[[],7],0,0,0,[[],14],0,0,[[26,26],7],[[12,18],7],[[12,18],7],[[12,18,18],7],[[12,6],7],[[12,22],7],[26,6],[[12,4],7],[[12,10],7],[[12,6],7],[[12,8],7],[[12,18,18,18],6],[[12,18],7],[[12,20],7],[12,7],[27,7],[27,7],[28,7],[28,7],[-1,2,[23,24]],[[-1,21,18],2,[23,24]],[12,8],[12,7],[12,7],[12,7],[12,[[7,[18,18,18,18]]]],[12,7],[12,7],[12,[[7,[18,18]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[[31,4,6],7],[25,7],[[25,27],6],[[25,27,-1],6,[[33,[],[[32,[6]]]]]],[[25,-1],7,[[33,[],[[32,[6]]]]]],[18,25],[[],7],[[],7]],"c":[],"p":[[5,"CurrentTask",0],[8,"AxTaskRef",0],[5,"TaskId",0],[1,"u64"],[10,"VforkCheck",0],[1,"bool"],[1,"tuple"],[6,"TaskState",0],[6,"SchedPolicy",0],[5,"SchedStatus",0],[6,"Option",172],[5,"TaskInner",0],[1,"i32"],[1,"never"],[5,"Formatter",173],[8,"Result",173],[1,"u8"],[1,"usize"],[5,"TaskContext",174],[5,"TrapFrame",174],[5,"String",175],[1,"str"],[10,"FnOnce",176],[10,"Send",177],[5,"WaitQueue",0],[1,"isize"],[5,"Duration",178],[8,"TimeValue",179],[6,"Result",180],[5,"TypeId",181],[10,"VforkSet",0],[17,"Output"],[10,"Fn",176],[10,"SignalCaller",0]],"b":[]},\
"capability":{"doc":"Provide basic capability-based security.","t":"FFTTTFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Cap","CapError","EXECUTE","READ","WRITE","WithCap","access","access_or_err","access_unchecked","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","can_access","cap","clone","clone","complement","contains","default","default","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","insert","intersection","intersects","into","into","into","into_iter","is_all","is_empty","iter","iter_names","new","not","remove","set","sub","sub_assign","symmetric_difference","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union"],"q":[[0,"capability"],[80,"core::result"],[81,"core::clone"],[82,"core::iter::traits::collect"],[83,"core::fmt"],[84,"core::fmt"],[85,"bitflags::iter"],[86,"bitflags::iter"]],"d":["Capabilities (access rights).","Error type for capability violation.","Executable access.","Readable access.","Writable access.","A wrapper that holds a type with a capability.","Access the inner value with the given capability, or …","Access the inner value with the given capability, or …","Access the inner value without capability check.","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","Check if the inner data can be accessed with the given …","Get the capability.","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","","","The intersection of a source flags value with the …","Get a flags value with all bits unset.","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Create a new instance with the given capability.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values."],"i":[0,0,2,2,2,0,1,1,1,2,2,2,2,2,2,2,2,2,2,3,1,2,3,1,1,1,2,1,2,2,2,3,2,2,3,2,2,2,2,2,2,3,2,3,1,2,2,2,2,2,2,2,2,2,2,3,1,2,2,2,2,2,1,2,2,2,2,2,2,2,2,3,1,2,3,1,2,3,1,2],"f":[0,0,0,0,0,0,[[[1,[-1]],2],[[4,[-1,3]]],[]],[[[1,[-1]],2,-2],[[4,[-1,-2]]],[],[]],[[[1,[-1]]],-1,[]],[[],2],[[2,2],2],[[2,2],5],[[2,2],2],[[2,2],5],[2,6],[2,6],[[2,2],2],[[2,2],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]],2],7,[]],[[[1,[-1]]],2,[]],[2,2],[[[1,[-1]]],[[1,[-1]]],8],[2,2],[[2,2],7],[[],2],[[],3],[[2,2],2],[[],2],[[3,3],7],[[2,-1],5,[[10,[],[[9,[2]]]]]],[[2,11],12],[[2,11],12],[[2,11],12],[[2,11],12],[[2,11],12],[[3,11],12],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[6,[[13,[2]]]],[6,2],[6,2],[6,2],[-1,2,[[10,[],[[9,[2]]]]]],[14,[[13,[2]]]],[[2,2],5],[[2,2],2],[[2,2],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,-1,[]],[2,7],[2,7],[2,[[15,[2]]]],[2,[[16,[2]]]],[[-1,2],[[1,[-1]]],[]],[2,2],[[2,2],5],[[2,2,7],5],[[2,2],2],[[2,2],5],[[2,2],2],[[2,2],5],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[[2,2],2]],"c":[],"p":[[5,"WithCap",0],[5,"Cap",0],[5,"CapError",0],[6,"Result",80],[1,"tuple"],[1,"u32"],[1,"bool"],[10,"Clone",81],[17,"Item"],[10,"IntoIterator",82],[5,"Formatter",83],[8,"Result",83],[6,"Option",84],[1,"str"],[5,"Iter",85],[5,"IterNames",85],[5,"TypeId",86]],"b":[[14,"impl-Cap"],[15,"impl-Flags-for-Cap"],[36,"impl-Binary-for-Cap"],[37,"impl-UpperHex-for-Cap"],[38,"impl-LowerHex-for-Cap"],[39,"impl-Debug-for-Cap"],[40,"impl-Octal-for-Cap"],[46,"impl-Cap"],[47,"impl-Flags-for-Cap"]]},\
"crate_interface":{"doc":"crate_interface","t":"QXX","n":["call_interface","def_interface","impl_interface"],"q":[[0,"crate_interface"]],"d":["Call a function in the interface.","Define an interface.","Implement the interface for a struct."],"i":[0,0,0],"f":[0,0,0],"c":[],"p":[],"b":[]},\
"driver_block":{"doc":"Common traits and types for block storage device drivers …","t":"EKEEECMMMCMMFNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNN","n":["BaseDriverOps","BlockDriverOps","DevError","DevResult","DeviceType","bcm2835sdhci","block_size","flush","num_blocks","ramdisk","read_block","write_block","SDHCIDriver","block_size","borrow","borrow_mut","device_name","device_type","flush","from","into","num_blocks","read_block","try_from","try_into","try_new","type_id","write_block","RamDisk","block_size","borrow","borrow_mut","copy_from_slice","default","device_name","device_type","flush","from","from","into","new","num_blocks","read_block","size","try_from","try_into","type_id","write_block"],"q":[[0,"driver_block"],[12,"driver_block::bcm2835sdhci"],[28,"driver_block::ramdisk"],[48,"driver_common"],[49,"driver_common"],[50,"core::any"]],"d":["","Operations that require a block storage device driver to …","","","","SD card driver for raspi4","The size of each block in bytes.","Flushes the device to write all pending data to the …","The number of blocks in this storage device.","Mock block devices that store data in RAM.","Reads blocked data from the given block.","Writes blocked data to the given block.","BCM2835 SDHCI driver (Raspberry Pi SD card).","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Initialize the SDHCI driver, returns <code>Ok</code> if successful.","","","A RAM disk that stores data in a vector.","","","","Copies the data from the given slice to the RAM disk.","","","","","Returns the argument unchanged.","Creates a new RAM disk from the exiting data.","Calls <code>U::from(self)</code>.","Creates a new RAM disk with the given size hint.","","","Returns the size of the RAM disk in bytes.","","","",""],"i":[0,0,0,0,0,0,1,1,1,0,1,1,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"f":[0,0,0,0,0,0,[1,2],[1,3],[1,4],0,[[1,4,[6,[5]]],3],[[1,4,[6,[5]]],3],0,[7,2],[-1,-2,[],[]],[-1,-2,[],[]],[7,8],[7,9],[7,3],[-1,-1,[]],[-1,-2,[],[]],[7,4],[[7,4,[6,[5]]],3],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[[],[[3,[7]]]],[-1,11,[]],[[7,4,[6,[5]]],3],0,[12,2],[-1,-2,[],[]],[-1,-2,[],[]],[[12,5],13],[[],12],[12,8],[12,9],[12,3],[-1,-1,[]],[[[6,[5]]],12],[-1,-2,[],[]],[2,12],[12,4],[[12,4,[6,[5]]],3],[12,2],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[[12,4,[6,[5]]],3]],"c":[],"p":[[10,"BlockDriverOps",0],[1,"usize"],[8,"DevResult",48],[1,"u64"],[1,"u8"],[1,"slice"],[5,"SDHCIDriver",12],[1,"str"],[6,"DeviceType",48],[6,"Result",49],[5,"TypeId",50],[5,"RamDisk",28],[1,"tuple"]],"b":[]},\
"driver_common":{"doc":"Device driver interfaces used by ArceOS. It provides …","t":"PPPKPPGIGPPPPPPPPPNNNNNMMNNNNNNNNNNNNN","n":["Again","AlreadyExists","BadState","BaseDriverOps","Block","Char","DevError","DevResult","DeviceType","Display","Err","InvalidParam","Io","Net","NoMemory","Ok","ResourceBusy","Unsupported","borrow","borrow","borrow_mut","borrow_mut","clone","device_name","device_type","eq","fmt","fmt","from","from","into","into","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"driver_common"],[38,"core::fmt"],[39,"core::fmt"],[40,"core::any"]],"d":["Try again, for non-blocking APIs.","An entity already exists.","Bad internal state.","Common operations that require all device drivers to …","Block storage device (e.g., disk).","Character device (e.g., serial port).","The error type for device operation failures.","A specialized <code>Result</code> type for device operations.","All supported device types.","Graphic display device (e.g., GPU)","Contains the error value","Invalid parameter/argument.","Input/output error.","Network device (e.g., ethernet card).","Not enough space/cannot allocate memory (DMA).","Contains the success value","Device or resource is busy.","This operation is unsupported or unimplemented.","","","","","","The name of the device.","The type of the device.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","",""],"i":[7,7,7,0,1,1,0,0,0,1,10,7,7,1,7,10,7,7,1,7,1,7,1,2,2,1,1,7,1,7,1,7,1,7,1,7,1,7],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,3],[2,1],[[1,1],4],[[1,5],6],[[7,5],6],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]]],"c":[],"p":[[6,"DeviceType",0],[10,"BaseDriverOps",0],[1,"str"],[1,"bool"],[5,"Formatter",38],[8,"Result",38],[6,"DevError",0],[6,"Result",39],[5,"TypeId",40],[8,"DevResult",0]],"b":[]},\
"driver_display":{"doc":"Common traits and types for graphics display device …","t":"EEEEKFFNNNNNMOOMNNNNNOMNNMNNNNNNO","n":["BaseDriverOps","DevError","DevResult","DeviceType","DisplayDriverOps","DisplayInfo","FrameBuffer","borrow","borrow","borrow_mut","borrow_mut","clone","fb","fb_base_vaddr","fb_size","flush","fmt","from","from","from_raw_parts_mut","from_slice","height","info","into","into","need_flush","try_from","try_from","try_into","try_into","type_id","type_id","width"],"q":[[0,"driver_display"],[33,"driver_common"],[34,"core::fmt"],[35,"core::fmt"],[36,"core::any"]],"d":["","","","","Operations that require a graphics device driver to …","The information of the graphics device.","The framebuffer.","","","","","","Get the framebuffer.","The base virtual address of the framebuffer.","The size of the framebuffer in bytes.","Flush framebuffer to the screen.","","Returns the argument unchanged.","Returns the argument unchanged.","Use the given raw pointer and size as the framebuffer.","Use the given slice as the framebuffer.","The visible height.","Get the display information.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Whether need to flush the framebuffer to the screen.","","","","","","","The visible width."],"i":[0,0,0,0,0,0,0,3,1,3,1,1,2,1,1,2,1,3,1,3,3,1,2,3,1,2,3,1,3,1,3,1,1],"f":[0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,3],0,0,[2,4],[[1,5],6],[-1,-1,[]],[-1,-1,[]],[[7,8],3],[[[9,[7]]],3],0,[2,1],[-1,-2,[],[]],[-1,-2,[],[]],[2,10],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],0],"c":[],"p":[[5,"DisplayInfo",0],[10,"DisplayDriverOps",0],[5,"FrameBuffer",0],[8,"DevResult",33],[5,"Formatter",34],[8,"Result",34],[1,"u8"],[1,"usize"],[1,"slice"],[1,"bool"],[6,"Result",35],[5,"TypeId",36]],"b":[]},\
"driver_net":{"doc":"Common traits and types for network device (NIC) drivers.","t":"EEEEFFIFFKNNMNNNNNNNNNMMNNNNNNNNNNNNNNNNCMNNNNNNNNNNNMMMMNNMNNNNNNNNMNNNNSSKFINNNNNNNMMNNNNMMNNNNNNNNNM","n":["BaseDriverOps","DevError","DevResult","DeviceType","EthernetAddress","NetBuf","NetBufBox","NetBufPool","NetBufPtr","NetDriverOps","alloc","alloc_boxed","alloc_tx_buffer","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_len","can_receive","can_transmit","capacity","capacity","drop","from","from","from","from","from","from_buf_ptr","header","header_len","into","into","into","into","into_buf_ptr","ixgbe","mac_address","new","new","packet","packet","packet_len","packet_mut","packet_mut","packet_with_header","raw_buf","raw_buf_mut","raw_ptr","receive","recycle_rx_buffer","recycle_tx_buffers","rx_queue_size","set_header_len","set_packet_len","transmit","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tx_queue_size","type_id","type_id","type_id","type_id","INTEL_82599","INTEL_VEND","IxgbeHal","IxgbeNic","PhysAddr","alloc_tx_buffer","borrow","borrow_mut","can_receive","can_transmit","device_name","device_type","dma_alloc","dma_dealloc","from","init","into","mac_address","mmio_phys_to_virt","mmio_virt_to_phys","receive","recycle_rx_buffer","recycle_tx_buffers","rx_queue_size","transmit","try_from","try_into","tx_queue_size","type_id","wait_until"],"q":[[0,"driver_net"],[73,"driver_net::ixgbe"],[103,"alloc::sync"],[104,"core::option"],[105,"driver_common"],[106,"ixgbe_driver::ixgbe"],[107,"alloc::boxed"],[108,"core::ptr::non_null"],[109,"core::result"],[110,"core::any"],[111,"driver_common"]],"d":["","","","","The ethernet address of the NIC (MAC address).","A RAII network buffer.","A RAII network buffer wrapped in a <code>Box</code>.","A pool of <code>NetBuf</code>s to speed up buffer allocation.","A raw buffer struct for network device.","Operations that require a network device (NIC) driver to …","Allocates a buffer from the pool.","Allocates a buffer wrapped in a <code>Box</code> from the pool.","Allocate a memory buffer of a specified size for network …","","","","","","","","","Returns the length of each buffer.","Whether can receive packets.","Whether can transmit packets.","Returns the capacity of the buffer.","Returns the capacity of the pool.","Deallocates the buffer into the <code>NetBufPool</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Restore <code>NetBuf</code> struct from a raw pointer.","Returns the header part of the buffer.","Returns the length of the header part.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts the buffer into a <code>NetBufPtr</code>.","ixgbe NIC device driver.","The ethernet address of the NIC.","Creates a new pool with the given <code>capacity</code>, and all buffer …","Create a new <code>NetBufPtr</code>.","Returns the packet part of the buffer.","Return <code>NetBufPtr</code> buffer as &amp;u8.","Return <code>NetBufPtr</code> buffer len.","Returns the mutable reference to the packet part.","Return <code>NetBufPtr</code> buffer as &amp;mut u8.","Returns both the header and the packet parts, as a …","Returns the entire buffer.","Returns the mutable reference to the entire buffer.","Return raw pointer of the original object.","Receives a packet from the network and store it in the …","Gives back the <code>rx_buf</code> to the receive queue for later …","Poll the transmit queue and gives back the buffers for …","Size of the receive queue.","Set the length of the header part.","Set the length of the packet part.","Transmits a packet in the buffer to the network, without …","","","","","","","","","Size of the transmit queue.","","","","","Device ID for the 82599ES, used to identify the device …","Vendor ID for Intel.","The interface which a particular hardware implementation …","The ixgbe NIC device driver.","Phyaical Address","","","","","","","","Allocates and zeroes the given number of contiguous …","Deallocates the given contiguous physical DMA memory pages.","Returns the argument unchanged.","Creates a net ixgbe NIC instance and initialize, or …","Calls <code>U::from(self)</code>.","","Converts a physical address used for MMIO to a virtual …","Converts a virtual address used by the driver to access …","","","","","","","","","","Wait until reaching the given deadline."],"i":[0,0,0,0,0,0,0,0,0,0,1,1,6,3,1,16,8,3,1,16,8,1,6,6,3,1,3,3,1,16,8,8,3,3,3,3,1,16,8,3,0,6,1,8,3,8,8,3,8,3,3,3,8,6,6,6,6,3,3,6,3,1,16,8,3,1,16,8,6,3,1,16,8,0,0,0,0,0,20,20,20,20,20,20,20,21,21,20,20,20,20,21,21,20,20,20,20,20,20,20,20,20,21],"f":[0,0,0,0,0,0,0,0,0,0,[[[2,[1]]],[[4,[3]]]],[[[2,[1]]],[[4,[5]]]],[[6,7],[[9,[8]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,7],[6,10],[6,10],[3,7],[1,7],[3,11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[12,8],[-1,-1,[]],[8,[[13,[3]]]],[3,[[15,[14]]]],[3,7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[13,[3]]],8],0,[6,16],[[7,7],[[9,[[2,[1]]]]]],[[[17,[14]],[17,[14]],7],8],[3,[[15,[14]]]],[8,[[15,[14]]]],[8,7],[3,[[15,[14]]]],[8,[[15,[14]]]],[3,[[15,[14]]]],[3,[[15,[14]]]],[3,[[15,[14]]]],[8],[6,[[9,[8]]]],[[6,8],9],[6,9],[6,7],[[3,7],11],[[3,7],11],[[6,8],9],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[6,7],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,0,0,0,0,[[[20,[-1]],7],[[9,[8]]],21],[-1,-2,[],[]],[-1,-2,[],[]],[[[20,[-1]]],10,21],[[[20,[-1]]],10,21],[[[20,[-1]]],22,21],[[[20,[-1]]],23,21],[7,[[11,[7,[17,[14]]]]]],[[7,[17,[14]],7],24],[-1,-1,[]],[[7,7],[[9,[[20,[-1]]]]],21],[-1,-2,[],[]],[[[20,[-1]]],16,21],[[7,7],[[17,[14]]]],[[[17,[14]],7],7],[[[20,[-1]]],[[9,[8]]],21],[[[20,[-1]],8],9,21],[[[20,[-1]]],9,21],[[[20,[-1]]],7,21],[[[20,[-1]],8],9,21],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[[[20,[-1]]],7,21],[-1,19,[]],[25,[[18,[11,22]]]]],"c":[],"p":[[5,"NetBufPool",0],[5,"Arc",103],[5,"NetBuf",0],[6,"Option",104],[8,"NetBufBox",0],[10,"NetDriverOps",0],[1,"usize"],[5,"NetBufPtr",0],[8,"DevResult",105],[1,"bool"],[1,"tuple"],[5,"IxgbeNetBuf",106],[5,"Box",107],[1,"u8"],[1,"slice"],[5,"EthernetAddress",0],[5,"NonNull",108],[6,"Result",109],[5,"TypeId",110],[5,"IxgbeNic",73],[10,"IxgbeHal",73],[1,"str"],[6,"DeviceType",105],[1,"i32"],[5,"Duration",111]],"b":[]},\
"driver_pci":{"doc":"Structures and functions for PCI bus operations.","t":"TGPTGFFTFFPTTGTTPTPTTTTPGPTPGPFFTTTTTTPFPTPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNONNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOO","n":["BUS_MASTER","BarInfo","Below1MiB","CAPABILITIES_LIST","Cam","CapabilityInfo","Command","DETECTED_PARITY_ERROR","DeviceFunction","DeviceFunctionInfo","Ecam","FAST_BACK_TO_BACK_CAPABLE","FAST_BACK_TO_BACK_ENABLE","HeaderType","INTERRUPT_DISABLE","INTERRUPT_STATUS","IO","IO_SPACE","InvalidBarType","MASTER_DATA_PARITY_ERROR","MEMORY_SPACE","MEMORY_WRITE_AND_INVALIDATE_ENABLE","MHZ_66_CAPABLE","Memory","MemoryBarType","MmioCam","PARITY_ERROR_RESPONSE","PciCardbusBridge","PciError","PciPciBridge","PciRangeAllocator","PciRoot","RECEIVED_MASTER_ABORT","RECEIVED_TARGET_ABORT","SERR_ENABLE","SIGNALED_SYSTEM_ERROR","SIGNALED_TARGET_ABORT","SPECIAL_CYCLES","Standard","Status","Unrecognised","VGA_PALETTE_SNOOP","Width32","Width64","all","all","alloc","bar_info","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bus","capabilities","class","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","complement","complement","contains","contains","default","default","device","device_id","difference","difference","empty","empty","enumerate_bus","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_name","from_name","function","get_status_command","header_type","id","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","memory_address_size","new","new","not","not","offset","private_header","prog_if","remove","remove","revision","set","set","set_bar_32","set_bar_64","set_command","size","sub","sub","sub_assign","sub_assign","subclass","symmetric_difference","symmetric_difference","takes_two_entries","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","valid","vendor_id","address","address","address_type","prefetchable","size","size"],"q":[[0,"driver_pci"],[298,"driver_pci::BarInfo"],[304,"core::option"],[305,"core::result"],[306,"virtio_drivers::transport::pci::bus"],[307,"virtio_drivers::transport::pci::bus"],[308,"core::fmt"],[309,"core::fmt"],[310,"bitflags::iter"],[311,"core::any"]],"d":["The device can behave as a bus master.","Information about a PCI Base Address Register.","The BAR must be mapped below 1MiB.","The device has a linked list of capabilities.","A PCI Configuration Access Mechanism.","Information about a PCI device capability.","The command register in PCI configuration space.","The device detects a parity error, even if parity error …","An identifier for a PCI bus, device and function.","Information about a PCI device function.","The PCIe memory-mapped Enhanced Configuration Access …","The device can accept fast back-to-back transactions not …","The device is allowed to generate fast back-to-back …","The type of a PCI device function header.","Assertion of the device’s INTx# signal is disabled.","The state of the device’s INTx# signal.","The BAR is for an I/O region.","The device can respond to I/O Space accesses.","The device reported an invalid BAR type.","The bus agent observed a parity error (if parity error …","The device can respond to Memory Space accesses.","The device can generate the Memory Write and Invalidate …","The device is capabile of running at 66 MHz rather than 33 …","The BAR is for a memory region.","The location allowed for a memory BAR.","The PCI memory-mapped Configuration Access Mechanism.","The device should take its normal action when a parity …","A PCI to CardBus bridge.","Errors accessing a PCI device.","A PCI to PCI bridge.","Used to allocate MMIO regions for PCI BARs.","The root complex of a PCI bus.","A master device transaction was terminated with …","A master device transaction was terminated with …","The SERR# driver is enabled.","A device asserts SERR#.","A target device terminated a transaction with target-abort.","The device can monitor Special Cycle operations.","A normal PCI device.","The status register in PCI configuration space.","Unrecognised header type.","The device will snoop palette register data.","The BAR has a 32-bit address and can be mapped anywhere in …","The BAR has a 64-bit address and can be mapped anywhere in …","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Allocates a memory region with the given size.","Gets information about the given BAR of the given device …","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","The PCI bus number, between 0 and 255.","Gets an iterator over the capabilities of the given device …","The PCI class.","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","","The device number on the bus, between 0 and 31.","The PCI device ID.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Enumerates PCI devices on the given bus.","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","The function number of the device, between 0 and 7.","Reads the status and command registers of the given device …","The type of PCI device.","The ID of the capability.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Returns the address and size of this BAR if it is a memory …","Creates a new allocator from a memory range.","Wraps the PCI root complex with the given MMIO base …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The offset of the capability in the PCI configuration …","The third and fourth bytes of the capability, to save …","The PCI programming interface byte.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The PCI revision ID.","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Sets the address of the given 32-bit memory or I/O BAR of …","Sets the address of the given 64-bit memory BAR of the …","Sets the command register of the given device function.","Returns the total size in bytes of the memory-mapped …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The PCI subclass.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Returns whether this BAR is a 64-bit memory region, and so …","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Returns whether the device and function numbers are valid, …","The PCI vendor ID.","The memory address, always 16-byte aligned.","The I/O address, always 4-byte aligned.","The size of the BAR address and where it can be located.","If true, then reading from the region doesn’t have side …","The size of the BAR in bytes.","The size of the BAR in bytes."],"i":[2,0,16,1,0,0,0,1,0,0,15,1,2,0,2,1,9,2,10,1,2,2,1,9,0,15,2,19,0,19,0,0,1,1,2,1,1,2,19,0,19,2,16,16,1,2,3,6,1,2,1,2,1,2,1,2,1,1,2,2,1,2,1,2,3,1,2,10,6,15,9,16,17,7,18,19,3,1,2,10,6,15,9,16,17,7,18,19,7,6,18,1,2,10,15,9,16,17,7,18,19,1,2,10,15,9,16,17,7,18,19,1,2,1,2,1,2,7,18,1,2,1,2,6,1,2,10,15,9,16,17,7,18,19,1,2,1,1,1,1,1,2,2,2,2,2,10,10,6,15,9,9,16,17,7,7,18,18,19,3,1,2,10,6,15,9,16,17,7,18,19,19,1,2,1,1,2,2,1,2,1,2,1,2,7,6,18,17,1,2,1,2,1,2,3,1,2,10,6,15,9,16,17,7,18,19,1,2,1,2,1,2,1,2,1,2,9,3,6,1,2,17,17,18,1,2,18,1,2,6,6,6,15,1,2,1,2,18,1,2,9,1,2,10,15,9,16,17,7,18,19,10,9,7,18,1,2,3,1,2,10,6,15,9,16,16,17,7,18,19,3,1,2,10,6,15,9,16,17,7,18,19,3,1,2,10,6,15,9,16,17,7,18,19,1,2,7,18,32,33,32,32,32,33],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],2],[[3,4],[[5,[4]]]],[[6,7,8],[[11,[9,10]]]],[[1,1],1],[[2,2],2],[[1,1],12],[[2,2],12],[[1,1],1],[[2,2],2],[[1,1],12],[[2,2],12],[1,13],[1,13],[2,13],[2,13],[[1,1],1],[[2,2],2],[[1,1],12],[[2,2],12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[6,7],14],0,[1,1],[2,2],[10,10],[15,15],[9,9],[16,16],[17,17],[7,7],[18,18],[19,19],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[1,1],[2,2],[[1,1],20],[[2,2],20],[[],1],[[],2],0,0,[[1,1],1],[[2,2],2],[[],1],[[],2],[[6,8],21],[[1,1],20],[[2,2],20],[[10,10],20],[[15,15],20],[[9,9],20],[[16,16],20],[[17,17],20],[[7,7],20],[[18,18],20],[[19,19],20],[[1,-1],12,[[23,[],[[22,[1]]]]]],[[2,-1],12,[[23,[],[[22,[2]]]]]],[[1,24],[[11,[12,25]]]],[[1,24],[[11,[12,25]]]],[[1,24],[[11,[12,25]]]],[[1,24],[[11,[12,25]]]],[[1,24],[[11,[12,25]]]],[[2,24],[[11,[12,25]]]],[[2,24],[[11,[12,25]]]],[[2,24],[[11,[12,25]]]],[[2,24],[[11,[12,25]]]],[[2,24],[[11,[12,25]]]],[[10,24],[[11,[12,25]]]],[[10,24],[[11,[12,25]]]],[[6,24],[[11,[12,25]]]],[[15,24],[[11,[12,25]]]],[[9,24],[[11,[12,25]]]],[[9,24],[[11,[12,25]]]],[[16,24],[[11,[12,25]]]],[[17,24],[[11,[12,25]]]],[[7,24],[[11,[12,25]]]],[[7,24],[[11,[12,25]]]],[[18,24],[[11,[12,25]]]],[[18,24],[[11,[12,25]]]],[[19,24],[[11,[12,25]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[8,19],[13,[[5,[1]]]],[13,[[5,[2]]]],[13,1],[13,1],[13,2],[13,2],[13,1],[13,2],[-1,1,[[23,[],[[22,[1]]]]]],[-1,2,[[23,[],[[22,[2]]]]]],[26,[[5,[1]]]],[26,[[5,[2]]]],0,[[6,7],[[12,[1,2]]]],0,0,[[1,1],12],[[2,2],12],[[1,1],1],[[2,2],2],[[1,1],20],[[2,2],20],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1],[2],[1,20],[2,20],[1,20],[2,20],[1,[[27,[1]]]],[2,[[27,[2]]]],[1,[[28,[1]]]],[2,[[28,[2]]]],[9,[[5,[[12,[4,29]]]]]],[[4,4],3],[[8,15],6],[1,1],[2,2],0,0,0,[[1,1],12],[[2,2],12],0,[[1,1,20],12],[[2,2,20],12],[[6,7,8,29],12],[[6,7,8,4],12],[[6,7,2],12],[15,29],[[1,1],1],[[2,2],2],[[1,1],12],[[2,2],12],0,[[1,1],1],[[2,2],2],[9,20],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[[1,1],12],[[2,2],12],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[8,[[11,[16]]]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[[1,1],1],[[2,2],2],[7,20],0,0,0,0,0,0,0],"c":[],"p":[[5,"Status",0],[5,"Command",0],[5,"PciRangeAllocator",0],[1,"u64"],[6,"Option",304],[5,"PciRoot",0],[5,"DeviceFunction",0],[1,"u8"],[6,"BarInfo",0],[6,"PciError",0],[6,"Result",305],[1,"tuple"],[1,"u16"],[5,"CapabilityIterator",306],[6,"Cam",0],[6,"MemoryBarType",0],[5,"CapabilityInfo",0],[5,"DeviceFunctionInfo",0],[6,"HeaderType",0],[1,"bool"],[5,"BusDeviceIterator",306],[17,"Item"],[10,"IntoIterator",307],[5,"Formatter",308],[5,"Error",308],[1,"str"],[5,"Iter",309],[5,"IterNames",309],[1,"u32"],[5,"String",310],[5,"TypeId",311],[15,"Memory",298],[15,"IO",298]],"b":[[56,"impl-Flags-for-Status"],[57,"impl-Status"],[58,"impl-Flags-for-Command"],[59,"impl-Command"],[136,"impl-Binary-for-Status"],[137,"impl-Octal-for-Status"],[138,"impl-Debug-for-Status"],[139,"impl-LowerHex-for-Status"],[140,"impl-UpperHex-for-Status"],[141,"impl-Debug-for-Command"],[142,"impl-UpperHex-for-Command"],[143,"impl-LowerHex-for-Command"],[144,"impl-Octal-for-Command"],[145,"impl-Binary-for-Command"],[146,"impl-Display-for-PciError"],[147,"impl-Debug-for-PciError"],[150,"impl-Debug-for-BarInfo"],[151,"impl-Display-for-BarInfo"],[154,"impl-Display-for-DeviceFunction"],[155,"impl-Debug-for-DeviceFunction"],[156,"impl-Debug-for-DeviceFunctionInfo"],[157,"impl-Display-for-DeviceFunctionInfo"],[174,"impl-Flags-for-Status"],[175,"impl-Status"],[176,"impl-Command"],[177,"impl-Flags-for-Command"]]},\
"driver_virtio":{"doc":"Wrappers of some devices in the <code>virtio-drivers</code> crate, that …","t":"PGPPFFIKFFKFMNNNNNNNNNNNNNNNNNNNNNMNNNNNMNNNNNMMNNNNNNNNNNNNNNNNMNNNNNNNNNNMNNMNNNMNNNCHHMNNMNNMNNNMNNNNNMNNNMNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNMNNNMNNTGPFTGFFFTFFPTTGTTPTPTTTTPGPTSPGPFTTTTTTPFPTPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNONNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOO","n":["Both","BufferDirection","DeviceToDriver","DriverToDevice","MmioTransport","PciTransport","PhysAddr","Transport","VirtIoBlkDev","VirtIoGpuDev","VirtIoHal","VirtIoNetDev","ack_interrupt","ack_interrupt","ack_interrupt","alloc_tx_buffer","begin_init","block_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_receive","can_transmit","clone","clone_into","config_space","config_space","config_space","device_name","device_name","device_name","device_type","device_type","device_type","device_type","device_type","device_type","dma_alloc","dma_dealloc","drop","drop","eq","fb","finish_init","flush","flush","fmt","fmt","fmt","from","from","from","from","from","from","get_status","get_status","get_status","info","into","into","into","into","into","into","mac_address","max_queue_size","max_queue_size","max_queue_size","mmio_phys_to_virt","need_flush","new","new","notify","notify","notify","num_blocks","pci","probe_mmio_device","probe_pci_device","queue_set","queue_set","queue_set","queue_unset","queue_unset","queue_unset","queue_used","queue_used","queue_used","read_block","read_device_features","read_device_features","read_device_features","receive","recycle_rx_buffer","recycle_tx_buffers","requires_legacy_layout","requires_legacy_layout","requires_legacy_layout","rx_queue_size","set_guest_page_size","set_guest_page_size","set_guest_page_size","set_status","set_status","set_status","share","to_owned","transmit","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_new","try_new","tx_queue_size","type_id","type_id","type_id","type_id","type_id","type_id","unshare","vendor_id","version","write_block","write_driver_features","write_driver_features","write_driver_features","BUS_MASTER","BarInfo","Below1MiB","BusDeviceIterator","CAPABILITIES_LIST","Cam","CapabilityInfo","CapabilityIterator","Command","DETECTED_PARITY_ERROR","DeviceFunction","DeviceFunctionInfo","Ecam","FAST_BACK_TO_BACK_CAPABLE","FAST_BACK_TO_BACK_ENABLE","HeaderType","INTERRUPT_DISABLE","INTERRUPT_STATUS","IO","IO_SPACE","InvalidBarType","MASTER_DATA_PARITY_ERROR","MEMORY_SPACE","MEMORY_WRITE_AND_INVALIDATE_ENABLE","MHZ_66_CAPABLE","Memory","MemoryBarType","MmioCam","PARITY_ERROR_RESPONSE","PCI_CAP_ID_VNDR","PciCardbusBridge","PciError","PciPciBridge","PciRoot","RECEIVED_MASTER_ABORT","RECEIVED_TARGET_ABORT","SERR_ENABLE","SIGNALED_SYSTEM_ERROR","SIGNALED_TARGET_ABORT","SPECIAL_CYCLES","Standard","Status","Unrecognised","VGA_PALETTE_SNOOP","Width32","Width64","all","all","bar_info","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bus","capabilities","class","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","complement","complement","contains","contains","default","default","device","device_id","difference","difference","empty","empty","enumerate_bus","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_name","from_name","function","get_status_command","header_type","id","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","memory_address_size","new","next","next","not","not","offset","private_header","prog_if","remove","remove","revision","set","set","set_bar_32","set_bar_64","set_command","size","sub","sub","sub_assign","sub_assign","subclass","symmetric_difference","symmetric_difference","takes_two_entries","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","valid","vendor_id","address","address","address_type","prefetchable","size","size"],"q":[[0,"driver_virtio"],[147,"driver_virtio::pci"],[458,"driver_virtio::pci::BarInfo"],[464,"driver_net"],[465,"driver_common"],[466,"core::ptr::non_null"],[467,"virtio_drivers"],[468,"core::result"],[469,"virtio_drivers::transport"],[470,"driver_common"],[471,"core::fmt"],[472,"core::fmt"],[473,"virtio_drivers::transport::mmio"],[474,"core::option"],[475,"core::any"],[476,"virtio_drivers::transport::mmio"],[477,"bitflags::iter"],[478,"bitflags::iter"]],"d":["The buffer may be read or written by both the device and …","The direction in which a buffer is passed.","The buffer may be read or written by the device, but only …","The buffer may be read or written by the driver, but only …","MMIO Device Register Interface.","PCI transport for VirtIO.","A physical address as used for virtio.","A VirtIO transport layer.","The VirtIO block device driver.","The VirtIO GPU device driver.","The interface which a particular hardware implementation …","The VirtIO network device driver.","Acknowledges an interrupt.","","","","Begins initializing the device.","","","","","","","","","","","","","","","","","","Gets the pointer to the config space.","","","","","","Gets the device type.","","","","","","Allocates and zeroes the given number of contiguous …","Deallocates the given contiguous physical DMA memory pages.","","","","","Finishes initializing the device.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets the device status.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Gets the max size of the given queue.","","","Converts a physical address used for MMIO to a virtual …","","Constructs a new VirtIO MMIO transport, or returns an …","Construct a new PCI VirtIO device driver for the given …","Notifies the given queue on the device.","","","","Module for dealing with a PCI bus in general, without …","Try to probe a VirtIO MMIO device from the given memory …","Try to probe a VirtIO PCI device from the given PCI …","Sets up the given queue.","","","Disables and resets the given queue.","","","Returns whether the queue is in use, i.e. has a nonzero …","","","","Reads device features.","","","","","","Returns whether the transport requires queues to use the …","","","","Sets the guest page size.","","","Sets the device status.","","","Shares the given memory range with the device, and returns …","","","","","","","","","","","","","","","Creates a new driver instance and initializes the device, …","Creates a new driver instance and initializes the device, …","Creates a new driver instance and initializes the device, …","","","","","","","","Unshares the given memory range from the device and (if …","Gets the vendor ID.","Gets the version of the VirtIO MMIO transport.","","Writes device features.","","","The device can behave as a bus master.","Information about a PCI Base Address Register.","The BAR must be mapped below 1MiB.","An iterator which enumerates PCI devices and functions on …","The device has a linked list of capabilities.","A PCI Configuration Access Mechanism.","Information about a PCI device capability.","Iterator over capabilities for a device.","The command register in PCI configuration space.","The device detects a parity error, even if parity error …","An identifier for a PCI bus, device and function.","Information about a PCI device function.","The PCIe memory-mapped Enhanced Configuration Access …","The device can accept fast back-to-back transactions not …","The device is allowed to generate fast back-to-back …","The type of a PCI device function header.","Assertion of the device’s INTx# signal is disabled.","The state of the device’s INTx# signal.","The BAR is for an I/O region.","The device can respond to I/O Space accesses.","The device reported an invalid BAR type.","The bus agent observed a parity error (if parity error …","The device can respond to Memory Space accesses.","The device can generate the Memory Write and Invalidate …","The device is capabile of running at 66 MHz rather than 33 …","The BAR is for a memory region.","The location allowed for a memory BAR.","The PCI memory-mapped Configuration Access Mechanism.","The device should take its normal action when a parity …","ID for vendor-specific PCI capabilities.","A PCI to CardBus bridge.","Errors accessing a PCI device.","A PCI to PCI bridge.","The root complex of a PCI bus.","A master device transaction was terminated with …","A master device transaction was terminated with …","The SERR# driver is enabled.","A device asserts SERR#.","A target device terminated a transaction with target-abort.","The device can monitor Special Cycle operations.","A normal PCI device.","The status register in PCI configuration space.","Unrecognised header type.","The device will snoop palette register data.","The BAR has a 32-bit address and can be mapped anywhere in …","The BAR has a 64-bit address and can be mapped anywhere in …","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Gets information about the given BAR of the given device …","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","The PCI bus number, between 0 and 255.","Gets an iterator over the capabilities of the given device …","The PCI class.","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","","The device number on the bus, between 0 and 31.","The PCI device ID.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Enumerates PCI devices on the given bus.","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","The function number of the device, between 0 and 7.","Reads the status and command registers of the given device …","The type of PCI device.","The ID of the capability.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Returns the address and size of this BAR if it is a memory …","Wraps the PCI root complex with the given MMIO base …","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The offset of the capability in the PCI configuration …","The third and fourth bytes of the capability, to save …","The PCI programming interface byte.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The PCI revision ID.","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Sets the address of the given 32-bit memory or I/O BAR of …","Sets the address of the given 64-bit memory BAR of the …","Sets the command register of the given device function.","Returns the total size in bytes of the memory-mapped …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The PCI subclass.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Returns whether this BAR is a 64-bit memory region, and so …","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Returns whether the device and function numbers are valid, …","The PCI vendor ID.","The memory address, always 16-byte aligned.","The I/O address, always 4-byte aligned.","The size of the BAR address and where it can be located.","If true, then reading from the region doesn’t have side …","The size of the BAR in bytes.","The size of the BAR in bytes."],"i":[11,0,11,11,0,0,0,0,0,0,0,0,1,3,4,5,1,10,10,17,5,11,3,4,10,17,5,11,3,4,5,5,11,11,1,3,4,10,17,5,1,10,17,5,3,4,9,9,3,4,11,17,1,10,17,11,3,4,10,17,5,11,3,4,1,3,4,17,10,17,5,11,3,4,5,1,3,4,9,17,3,4,1,3,4,10,0,0,0,1,3,4,1,3,4,1,3,4,10,1,3,4,5,5,5,1,3,4,5,1,3,4,1,3,4,9,11,5,10,17,5,11,3,4,10,17,5,11,3,4,10,17,5,5,10,17,5,11,3,4,9,3,3,10,1,3,4,42,0,47,0,41,0,0,0,0,41,0,0,46,41,42,0,42,41,43,42,44,41,42,42,41,43,0,46,42,0,49,0,49,0,41,41,42,41,41,42,49,0,49,42,47,47,41,42,32,41,42,41,42,41,42,41,42,41,41,42,42,41,42,41,42,41,42,44,32,46,43,47,45,48,50,33,37,49,41,42,44,32,46,43,47,45,48,50,33,37,49,33,32,37,41,42,44,46,43,47,48,33,37,49,41,42,44,46,43,47,48,33,37,49,41,42,41,42,41,42,33,37,41,42,41,42,32,41,42,44,46,43,47,48,33,37,49,41,42,41,41,41,41,41,42,42,42,42,42,44,44,32,46,43,43,47,45,48,50,33,33,37,37,49,41,42,44,32,46,43,47,45,48,50,33,37,49,49,41,42,41,41,42,42,41,42,41,42,41,42,33,32,37,48,41,42,41,42,41,42,41,42,44,32,46,43,47,45,48,50,33,37,49,41,42,45,50,41,42,41,42,41,42,41,42,43,32,45,50,41,42,48,48,37,41,42,37,41,42,32,32,32,46,41,42,41,42,37,41,42,43,41,42,44,46,43,47,48,33,37,49,44,43,33,37,41,42,41,42,44,32,46,43,47,47,45,48,50,33,37,49,41,42,44,32,46,43,47,45,48,50,33,37,49,41,42,44,32,46,43,47,45,48,50,33,37,49,41,42,33,37,56,57,56,56,56,57],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,2],[4,2],[[[5,[-1,-2]],6],[[8,[7]]],9,1],[[1,-1],-1,[]],[[[10,[-1,-2]]],6,9,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[5,[-1,-2]]],2,9,1],[[[5,[-1,-2]]],2,9,1],[11,11],[[-1,-2],12,[],[]],[1,[[15,[[13,[-1]],14]]],[]],[3,[[15,[[13,[-1]],14]]],[]],[4,[[15,[[13,[-1]],14]]],[]],[[[10,[-1,-2]]],16,9,1],[[[17,[-1,-2]]],16,9,1],[[[5,[-1,-2]]],16,9,1],[1,18],[[[10,[-1,-2]]],19,9,1],[[[17,[-1,-2]]],19,9,1],[[[5,[-1,-2]]],19,9,1],[3,18],[4,18],[[6,11],[[12,[6,[13,[20]]]]]],[[6,[13,[20]],6],21],[3,12],[4,12],[[11,11],2],[[[17,[-1,-2]]],22,9,1],[1,12],[[[10,[-1,-2]]],8,9,1],[[[17,[-1,-2]]],8,9,1],[[11,23],[[15,[12,24]]]],[[3,23],[[15,[12,24]]]],[[4,23],[[15,[12,24]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[1,25],[3,25],[4,25],[[[17,[-1,-2]]],26,9,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[5,[-1,-2]]],27,9,1],[[1,28],29],[[3,28],29],[[4,28],29],[[6,6],[[13,[20]]]],[[[17,[-1,-2]]],2,9,1],[[[13,[30]]],[[15,[3,31]]]],[[32,33],[[15,[4,34]]]],[[1,28],12],[[3,28],12],[[4,28],12],[[[10,[-1,-2]]],35,9,1],0,[[20,6],[[36,[[12,[19,3]]]]]],[[32,33,37],[[36,[[12,[19,4]]]]]],[[1,28,29,6,6,6],12],[[3,28,29,6,6,6],12],[[4,28,29,6,6,6],12],[[1,28],12],[[3,28],12],[[4,28],12],[[1,28],2],[[3,28],2],[[4,28],2],[[[10,[-1,-2]],35,[38,[20]]],8,9,1],[1,35],[3,35],[4,35],[[[5,[-1,-2]]],[[8,[7]]],9,1],[[[5,[-1,-2]],7],8,9,1],[[[5,[-1,-2]]],8,9,1],[1,2],[3,2],[4,2],[[[5,[-1,-2]]],6,9,1],[[1,29],12],[[3,29],12],[[4,29],12],[[1,25],12],[[3,25],12],[[4,25],12],[[[13,[[38,[20]]]],11],6],[-1,-2,[],[]],[[[5,[-1,-2]],7],8,9,1],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[8,[[10,[-2,-1]]]]],1,9],[-1,[[8,[[17,[-2,-1]]]]],1,9],[-1,[[8,[[5,[-2,-1]]]]],1,9],[[[5,[-1,-2]]],6,9,1],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[[6,[13,[[38,[20]]]],11],12],[3,29],[3,40],[[[10,[-1,-2]],35,[38,[20]]],8,9,1],[[1,35],12],[[3,35],12],[[4,35],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],41],[[],42],[[32,33,20],[[15,[43,44]]]],[[41,41],41],[[42,42],42],[[41,41],12],[[42,42],12],[[41,41],41],[[42,42],42],[[41,41],12],[[42,42],12],[41,28],[41,28],[42,28],[42,28],[[41,41],41],[[42,42],42],[[41,41],12],[[42,42],12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[32,33],45],0,[41,41],[42,42],[44,44],[46,46],[43,43],[47,47],[48,48],[33,33],[37,37],[49,49],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[41,41],[42,42],[[41,41],2],[[42,42],2],[[],41],[[],42],0,0,[[41,41],41],[[42,42],42],[[],41],[[],42],[[32,20],50],[[41,41],2],[[42,42],2],[[44,44],2],[[46,46],2],[[43,43],2],[[47,47],2],[[48,48],2],[[33,33],2],[[37,37],2],[[49,49],2],[[41,-1],12,[[52,[],[[51,[41]]]]]],[[42,-1],12,[[52,[],[[51,[42]]]]]],[[41,23],[[15,[12,24]]]],[[41,23],[[15,[12,24]]]],[[41,23],[[15,[12,24]]]],[[41,23],[[15,[12,24]]]],[[41,23],[[15,[12,24]]]],[[42,23],[[15,[12,24]]]],[[42,23],[[15,[12,24]]]],[[42,23],[[15,[12,24]]]],[[42,23],[[15,[12,24]]]],[[42,23],[[15,[12,24]]]],[[44,23],[[15,[12,24]]]],[[44,23],[[15,[12,24]]]],[[32,23],[[15,[12,24]]]],[[46,23],[[15,[12,24]]]],[[43,23],[[15,[12,24]]]],[[43,23],[[15,[12,24]]]],[[47,23],[[15,[12,24]]]],[[45,23],[[15,[12,24]]]],[[48,23],[[15,[12,24]]]],[[50,23],[[15,[12,24]]]],[[33,23],[[15,[12,24]]]],[[33,23],[[15,[12,24]]]],[[37,23],[[15,[12,24]]]],[[37,23],[[15,[12,24]]]],[[49,23],[[15,[12,24]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[20,49],[-1,-1,[]],[28,[[36,[41]]]],[28,[[36,[42]]]],[28,41],[28,41],[28,42],[28,42],[28,41],[28,42],[-1,41,[[52,[],[[51,[41]]]]]],[-1,42,[[52,[],[[51,[42]]]]]],[16,[[36,[41]]]],[16,[[36,[42]]]],0,[[32,33],[[12,[41,42]]]],0,0,[[41,41],12],[[42,42],12],[[41,41],41],[[42,42],42],[[41,41],2],[[42,42],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[41],[42],[-1,-2,[],[]],[-1,-2,[],[]],[41,2],[42,2],[41,2],[42,2],[41,[[53,[41]]]],[42,[[53,[42]]]],[41,[[54,[41]]]],[42,[[54,[42]]]],[43,[[36,[[12,[35,29]]]]]],[[20,46],32],[45,36],[50,36],[41,41],[42,42],0,0,0,[[41,41],12],[[42,42],12],0,[[41,41,2],12],[[42,42,2],12],[[32,33,20,29],12],[[32,33,20,35],12],[[32,33,42],12],[46,29],[[41,41],41],[[42,42],42],[[41,41],12],[[42,42],12],0,[[41,41],41],[[42,42],42],[43,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[[41,41],12],[[42,42],12],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[20,[[15,[47]]]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[[41,41],41],[[42,42],42],[33,2],0,0,0,0,0,0,0],"c":[],"p":[[10,"Transport",0],[1,"bool"],[5,"MmioTransport",0],[5,"PciTransport",0],[5,"VirtIoNetDev",0],[1,"usize"],[5,"NetBufPtr",464],[8,"DevResult",465],[10,"VirtIoHal",0],[5,"VirtIoBlkDev",0],[6,"BufferDirection",0],[1,"tuple"],[5,"NonNull",466],[6,"Error",467],[6,"Result",468],[1,"str"],[5,"VirtIoGpuDev",0],[6,"DeviceType",469],[6,"DeviceType",465],[1,"u8"],[1,"i32"],[5,"FrameBuffer",470],[5,"Formatter",471],[5,"Error",471],[5,"DeviceStatus",469],[5,"DisplayInfo",470],[5,"EthernetAddress",464],[1,"u16"],[1,"u32"],[5,"VirtIOHeader",472],[6,"MmioError",472],[5,"PciRoot",147],[5,"DeviceFunction",147],[6,"VirtioPciError",473],[1,"u64"],[6,"Option",474],[5,"DeviceFunctionInfo",147],[1,"slice"],[5,"TypeId",475],[6,"MmioVersion",472],[5,"Status",147],[5,"Command",147],[6,"BarInfo",147],[6,"PciError",147],[5,"CapabilityIterator",147],[6,"Cam",147],[6,"MemoryBarType",147],[5,"CapabilityInfo",147],[6,"HeaderType",147],[5,"BusDeviceIterator",147],[17,"Item"],[10,"IntoIterator",476],[5,"Iter",477],[5,"IterNames",477],[5,"String",478],[15,"Memory",458],[15,"IO",458]],"b":[[204,"impl-Flags-for-Status"],[205,"impl-Status"],[206,"impl-Flags-for-Command"],[207,"impl-Command"],[286,"impl-Binary-for-Status"],[287,"impl-Debug-for-Status"],[288,"impl-UpperHex-for-Status"],[289,"impl-LowerHex-for-Status"],[290,"impl-Octal-for-Status"],[291,"impl-Binary-for-Command"],[292,"impl-UpperHex-for-Command"],[293,"impl-LowerHex-for-Command"],[294,"impl-Octal-for-Command"],[295,"impl-Debug-for-Command"],[296,"impl-Debug-for-PciError"],[297,"impl-Display-for-PciError"],[300,"impl-Debug-for-BarInfo"],[301,"impl-Display-for-BarInfo"],[306,"impl-Display-for-DeviceFunction"],[307,"impl-Debug-for-DeviceFunction"],[308,"impl-Display-for-DeviceFunctionInfo"],[309,"impl-Debug-for-DeviceFunctionInfo"],[327,"impl-Flags-for-Status"],[328,"impl-Status"],[329,"impl-Flags-for-Command"],[330,"impl-Command"]]},\
"dw_apb_uart":{"doc":"Definitions for snps,dw-apb-uart serial driver. Uart …","t":"FNNNNNNNNNNNN","n":["DW8250","borrow","borrow_mut","from","getchar","init","into","new","putchar","set_ier","try_from","try_into","type_id"],"q":[[0,"dw_apb_uart"],[13,"core::option"],[14,"core::result"],[15,"core::any"]],"d":["dw-apb-uart serial driver: DW8250","","","Returns the argument unchanged.","DW8250 serial input","DW8250 initialize","Calls <code>U::from(self)</code>.","New a DW8250","DW8250 serial output","DW8250 serial interrupt enable or disable","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[1,[[3,[2]]]],[1,4],[-1,-2,[],[]],[5,1],[[1,2],4],[[1,6],4],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]]],"c":[],"p":[[5,"DW8250",0],[1,"u8"],[6,"Option",13],[1,"tuple"],[1,"usize"],[1,"bool"],[6,"Result",14],[5,"TypeId",15]],"b":[]},\
"elf_parser":{"doc":"To parse the elf file and map it to the memory space","t":"FCNNOONHHHHENONNNOFNNOONNHNONNN","n":["ELFSegment","arch","borrow","borrow_mut","data","flags","from","get_app_stack_region","get_auxv_vector","get_elf_entry","get_elf_segments","get_relocate_pairs","into","size","try_from","try_into","type_id","vaddr","RelocatePair","borrow","borrow_mut","count","dst","fmt","from","get_relocate_pairs","into","src","try_from","try_into","type_id"],"q":[[0,"elf_parser"],[18,"elf_parser::arch"],[31,"alloc::string"],[32,"alloc::vec"],[33,"alloc::collections::btree::map"],[34,"memory_addr"],[35,"xmas_elf"],[36,"core::option"],[37,"core::result"],[38,"core::any"],[39,"core::fmt"],[40,"core::fmt"]],"d":["The segment of the elf file, which is used to map the elf …","Architecture-specific types and operations.","","","The data of the segment","The flags of the segment which is used to set the page …","Returns the argument unchanged.","To get the app stack and the information on the stack from …","To parse the elf file and get the auxv vectors","To parse the elf file and return the segments of the elf …","To parse the elf file and return the segments of the elf …","","Calls <code>U::from(self)</code>.","The size of the segment","","","","The start virtual address of the segment","To describe the relocation pair in the ELF","","","the set of bits affected by this relocation","the destination address of the relocation","","Returns the argument unchanged.","To parse the elf file and get the relocate pairs","Calls <code>U::from(self)</code>.","the source address of the relocation","","",""],"i":[0,0,11,11,11,11,11,0,0,0,0,0,11,11,11,11,11,11,0,14,14,14,14,14,14,0,14,14,14,14,14],"f":[0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-1,[]],[[[2,[1]],[3,[1]],[6,[4,5]],7,5],[[8,[[2,[4]],5]]]],[[9,[10,[5]]],[[6,[4,5]]]],[[9,[10,[5]]],7],[[9,[10,[5]]],[[2,[11]]]],0,[-1,-2,[],[]],0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[14,15],16],[-1,-1,[]],[[9,[10,[5]]],[[2,[14]]]],[-1,-2,[],[]],0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]]],"c":[],"p":[[5,"String",31],[5,"Vec",32],[1,"slice"],[1,"u8"],[1,"usize"],[5,"BTreeMap",33],[5,"VirtAddr",34],[1,"tuple"],[5,"ElfFile",35],[6,"Option",36],[5,"ELFSegment",0],[6,"Result",37],[5,"TypeId",38],[5,"RelocatePair",18],[5,"Formatter",39],[8,"Result",39]],"b":[]},\
"flatten_objects":{"doc":"<code>FlattenObjects</code> is a container that stores numbered objects.","t":"FNNNNNNNNNNNNNNNN","n":["FlattenObjects","add","add_at","borrow","borrow_mut","capacity","count","from","get","get_mut","into","is_assigned","new","remove","try_from","try_into","type_id"],"q":[[0,"flatten_objects"],[17,"core::option"],[18,"core::result"],[19,"core::any"]],"d":["A container that stores numbered objects.","Add an object and assigns it a unique ID.","Add an object and assigns it a specific ID.","","","Returns the maximum number of objects that can be held.","Returns the number of objects that have been added.","Returns the argument unchanged.","Returns the reference of the element with the given <code>id</code> if …","Returns the mutable reference of the element with the …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the given <code>id</code> is already be assigned.","Creates a new empty <code>FlattenObjects</code>.","Removes the object with the given ID.","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[[[1,[-1]],-1],[[3,[2]]],[]],[[[1,[-1]],2,-1],[[3,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],2,[]],[[[1,[-1]]],2,[]],[-1,-1,[]],[[[1,[-1]],2],[[3,[-1]]],[]],[[[1,[-1]],2],[[3,[-1]]],[]],[-1,-2,[],[]],[[[1,[-1]],2],4,[]],[[],[[1,[-1]]],[]],[[[1,[-1]],2],[[3,[-1]]],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,6,[]]],"c":[],"p":[[5,"FlattenObjects",0],[1,"usize"],[6,"Option",17],[1,"bool"],[6,"Result",18],[5,"TypeId",19]],"b":[]},\
"handler_table":{"doc":"handler_table","t":"IFNNNNNNNNNN","n":["Handler","HandlerTable","borrow","borrow_mut","from","handle","into","new","register_handler","try_from","try_into","type_id"],"q":[[0,"handler_table"],[12,"core::result"],[13,"core::any"]],"d":["The type of an event handler.","A lock-free table of event handlers.","","","Returns the argument unchanged.","Handles the event with the given index.","Calls <code>U::from(self)</code>.","Creates a new handler table with all entries empty.","Registers a handler for the given index.","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,1],"f":[0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[1,2],3],[-1,-2,[],[]],[[],1],[[1,2,4],3],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,6,[]]],"c":[],"p":[[5,"HandlerTable",0],[1,"usize"],[1,"bool"],[8,"Handler",0],[6,"Result",12],[5,"TypeId",13]],"b":[]},\
"kernel_guard":{"doc":"RAII wrappers to create a critical section with local IRQs …","t":"KFKFFFRMNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNMNNNNNNNNNNNNNNNN","n":["BaseGuard","IrqSave","KernelGuardIf","NoOp","NoPreempt","NoPreemptIrqSave","State","acquire","acquire","acquire","acquire","acquire","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","default","default","disable_preempt","drop","drop","drop","drop","enable_preempt","from","from","from","from","into","into","into","into","new","new","new","new","release","release","release","release","release","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":[[0,"kernel_guard"],[58,"core::result"],[59,"core::any"]],"d":["A base trait that all guards implement.","A guard that disables/enables local IRQs around the …","Low-level interfaces that must be implemented by the crate …","A no-op guard that does nothing around the critical …","A guard that disables/enables kernel preemption around the …","A guard that disables/enables both kernel preemption and …","The saved state when entering the critical section.","Something that must be done before entering the critical …","","","","","","","","","","","","","","","","How to disable kernel preemption.","","","","","How to enable kernel preemption.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new <code>NoOp</code> guard.","Creates a new <code>IrqSave</code> guard.","Creates a new <code>NoPreempt</code> guard.","Creates a new <code>NoPreemptIrqSave</code> guard.","Something that must be done after leaving the critical …","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,8,8,5,1,2,3,5,1,2,3,5,1,2,3,1,2,3,9,5,1,2,3,9,5,1,2,3,5,1,2,3,5,1,2,3,8,5,1,2,3,5,1,2,3,5,1,2,3,5,1,2,3],"f":[0,0,0,0,0,0,0,[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],2],[[],3],[[],4],[5,4],[1,4],[2,4],[3,4],[[],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],5],[[],1],[[],2],[[],3],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]]],"c":[],"p":[[5,"IrqSave",0],[5,"NoPreempt",0],[5,"NoPreemptIrqSave",0],[1,"tuple"],[5,"NoOp",0],[6,"Result",58],[5,"TypeId",59],[10,"BaseGuard",0],[10,"KernelGuardIf",0]],"b":[]},\
"lazy_init":{"doc":"A wrapper for lazy initialized values.","t":"FNNNNNNNNNNNNNNNNN","n":["LazyInit","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","get_mut_unchecked","get_unchecked","init_by","into","is_init","new","try_from","try_get","try_into","type_id"],"q":[[0,"lazy_init"],[18,"core::fmt"],[19,"core::fmt"],[20,"core::option"],[21,"core::any"]],"d":["A wrapper of a lazy initialized value.","","","","","","","Returns the argument unchanged.","Get a mutable reference to the value without checking if …","Gets the reference to the value without checking if it is …","Initializes the value.","Calls <code>U::from(self)</code>.","Checks whether the value is initialized.","Creates a new uninitialized value.","","Gets a reference to the value.","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],-1,[]],[[[1,[-1]]],-1,[]],[[[1,[-1]]],2,[]],[[[1,[-1]],3],4,5],[-1,-1,[]],[[[1,[-1]]],-1,[]],[[[1,[-1]]],-1,[]],[[[1,[-1]],-1],2,[]],[-1,-2,[],[]],[[[1,[-1]]],6,[]],[[],[[1,[-1]]],[]],[-1,[[7,[-2]]],[],[]],[[[1,[-1]]],[[8,[-1]]],[]],[-1,[[7,[-2]]],[],[]],[-1,9,[]]],"c":[],"p":[[5,"LazyInit",0],[1,"tuple"],[5,"Formatter",18],[8,"Result",18],[10,"Debug",18],[1,"bool"],[6,"Result",19],[6,"Option",20],[5,"TypeId",21]],"b":[]},\
"linked_list":{"doc":"Linked lists that supports arbitrary removal in constant …","t":"EKEEFRKMNNNNNNNMNNNMNNNNNNNNCKFRFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNN","n":["Adapter","AdapterWrapped","Cursor","Links","List","Wrapped","Wrapper","as_ref","back","borrow","borrow_mut","cursor_front","default","drop","from","from_pointer","front","insert_after","into","into_pointer","is_empty","new","pop_front","push_back","remove","try_from","try_into","type_id","unsafe_list","Adapter","Cursor","EntryType","Iterator","Links","List","back","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","current","cursor_back","cursor_front","from","from","from","from","front","insert_after","insert_before","insert_only_entry","into","into","into","into","into_iter","into_iter","is_empty","iter","iter_back","move_next","move_prev","new","new","next","next_back","push_back","push_front","remove","to_links","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":[[0,"linked_list"],[29,"linked_list::unsafe_list"],[86,"core::marker"],[87,"core::option"],[88,"core::ptr::non_null"],[89,"core::result"],[90,"core::any"],[91,"core::iter::traits::double_ended"]],"d":["","A descriptor of wrapped list elements.","","","A linked list.","Specifies which wrapper (e.g., <code>Box</code> and <code>Arc</code>) wraps the list …","Wraps an object to be inserted in a linked list.","Returns a reference to the wrapped object.","Returns the last element of the list, if one exists.","","","Returns a cursor starting on the first (front) element of …","","","Returns the argument unchanged.","Converts the object back from the pointer representation.","Returns the first element of the list, if one exists.","Inserts the given object after <code>existing</code>.","Calls <code>U::from(self)</code>.","Converts the wrapped object into a pointer that represents …","Returns whether the list is empty.","Constructs a new empty linked list.","Removes the element currently at the front of the list and …","Adds the given object to the end (back) of the list.","Removes the given entry.","","","","Intrusive circular doubly-linked lists.","A linked-list adapter.","A list cursor that allows traversing a linked list and …","The type of the enties in the list.","An iterator for the linked list.","Links of a linked list.","An intrusive circular doubly-linked list.","Returns the last element of the list, if one exists.","","","","","","","","","Returns the element the cursor is currently positioned on.","Returns a cursor starting on the last (back) element of …","Returns a cursor starting on the first (front) element of …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the first element of the list, if one exists.","Adds the given object after another object already in the …","Adds the given object before another object already in the …","Inserts the only entry to a list.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Determines if the list is empty.","Returns an iterator for the list starting at the first …","Returns an iterator for the list starting at the last …","Moves the cursor to the next element.","Moves the cursor to the previous element.","Constructs a new empty list.","Constructs a new instance of the linked-list links.","","","Adds the given object to the end of the list.","Adds the given object to the beginning of the list.","Removes the given object from the list.","Retrieves the linked list links for the given object.","","","","","","","","","","","",""],"i":[0,0,0,0,0,5,0,1,3,3,3,3,3,3,3,1,3,3,3,1,3,3,3,3,3,3,3,3,0,0,0,13,0,0,0,12,12,14,17,6,12,14,17,6,6,12,12,12,14,17,6,12,12,12,12,12,14,17,6,12,14,12,12,12,6,6,12,17,14,14,12,12,12,13,12,14,17,6,12,14,17,6,12,14,17,6],"f":[0,0,0,0,0,0,0,[1,-1,2],[[[3,[-1]]],4,5],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[-1]]],[[6,[-1]]],5],[[],[[3,[-1]]],5],[[[3,[-1]]],7,5],[-1,-1,[]],[[[8,[-1]]],1,2],[[[3,[-1]]],4,5],[[[3,[-1]],8],7,5],[-1,-2,[],[]],[1,[[8,[-1]]],2],[[[3,[-1]]],9,5],[[],[[3,[-1]]],5],[[[3,[-1]]],4,5],[[[3,[-1]]],7,5],[[[3,[-1]]],4,5],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],0,0,0,0,0,0,0,[[[12,[-1]]],[[4,[8]]],[13,2]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[6,[-1]]],4,[13,2]],[[[12,[-1]]],[[6,[-1]]],[13,2]],[[[12,[-1]]],[[6,[-1]]],[13,2]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[12,[-1]]],[[4,[8]]],[13,2]],[[[12,[-1]],8],7,[13,2]],[[[12,[-1]],8],7,[13,2]],[[[12,[-1]]],7,[13,2]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[12,[-1]]],-2,[13,2],[]],[-1,-2,[],[]],[[[12,[-1]]],9,[13,2]],[[[12,[-1]]],[[14,[-1]]],[13,2]],[[[12,[-1]]],[[0,[[16,[],[[15,[]]]]]]],[13,2]],[[[6,[-1]]],7,[13,2]],[[[6,[-1]]],7,[13,2]],[[],[[12,[-1]]],[13,2]],[[],[[17,[-1]]],2],[[[14,[-1]]],[[4,[-2]]],[13,2],[]],[[[14,[-1]]],[[4,[-2]]],[13,2],[]],[[[12,[-1]]],7,[13,2]],[[[12,[-1]]],7,[13,2]],[[[12,[-1]]],7,[13,2]],[-1,[[17,[-1]]],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]]],"c":[],"p":[[10,"Wrapper",0],[10,"Sized",86],[5,"List",0],[6,"Option",87],[10,"AdapterWrapped",0],[5,"Cursor",29],[1,"tuple"],[5,"NonNull",88],[1,"bool"],[6,"Result",89],[5,"TypeId",90],[5,"List",29],[10,"Adapter",29],[5,"Iterator",29],[17,"Item"],[10,"DoubleEndedIterator",91],[5,"Links",29]],"b":[]},\
"memory_addr":{"doc":"memory_addr","t":"SFFNNNNHNNHNNHNNHNNHNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNHNNNNNNNNNNNNNN","n":["PAGE_SIZE_4K","PhysAddr","VirtAddr","add","add","add_assign","add_assign","align_down","align_down","align_down","align_down_4k","align_down_4k","align_down_4k","align_offset","align_offset","align_offset","align_offset_4k","align_offset_4k","align_offset_4k","align_up","align_up","align_up","align_up_4k","align_up_4k","align_up_4k","as_mut_ptr","as_ptr","as_usize","as_usize","borrow","borrow","borrow_mut","borrow_mut","clone","clone","cmp","cmp","default","default","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","is_aligned","is_aligned","is_aligned","is_aligned_4k","is_aligned_4k","is_aligned_4k","partial_cmp","partial_cmp","sub","sub","sub_assign","sub_assign","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"memory_addr"],[73,"core::convert"],[74,"core::cmp"],[75,"core::fmt"],[76,"core::fmt"],[77,"core::result"],[78,"core::any"]],"d":["The size of a 4K page (4096 bytes).","A physical memory address.","A virtual memory address.","","","","","Align address downwards.","Aligns the address downwards to the given alignment.","Aligns the address downwards to the given alignment.","Align address downwards to 4096 (bytes).","Aligns the address downwards to 4096 (bytes).","Aligns the address downwards to 4096 (bytes).","Returns the offset of the address within the alignment.","Returns the offset of the address within the given …","Returns the offset of the address within the given …","Returns the offset of the address within a 4K-sized page.","Returns the offset of the address within a 4K-sized page.","Returns the offset of the address within a 4K-sized page.","Align address upwards.","Aligns the address upwards to the given alignment.","Aligns the address upwards to the given alignment.","Align address upwards to 4096 (bytes).","Aligns the address upwards to 4096 (bytes).","Aligns the address upwards to 4096 (bytes).","Converts the virtual address to a mutable raw pointer.","Converts the virtual address to a raw pointer.","Converts the address to an <code>usize</code>.","Converts the address to an <code>usize</code>.","","","","","","","","","","","","","","","","","","","Converts an <code>usize</code> to a physical address.","","Returns the argument unchanged.","","Returns the argument unchanged.","Converts an <code>usize</code> to a virtual address.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks whether the address has the demanded alignment.","Checks whether the address has the demanded alignment.","Checks whether the address has the demanded alignment.","Checks whether the address is 4K-aligned.","Checks whether the address is 4K-aligned.","Checks whether the address is 4K-aligned.","","","","","","","","","","","",""],"i":[0,0,0,1,3,1,3,0,1,3,0,1,3,0,1,3,0,1,3,0,1,3,0,1,3,3,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,1,1,3,3,3,1,1,1,3,3,3,1,3,0,1,3,0,1,3,1,3,1,3,1,3,1,3,1,3,1,3],"f":[0,0,0,[[1,2],1],[[3,2],3],[[1,2],4],[[3,2],4],[[2,2],2],[[1,-1],1,[[5,[2]]]],[[3,-1],3,[[5,[2]]]],[2,2],[1,1],[3,3],[[2,2],2],[[1,-1],2,[[5,[2]]]],[[3,-1],2,[[5,[2]]]],[2,2],[1,2],[3,2],[[2,2],2],[[1,-1],1,[[5,[2]]]],[[3,-1],3,[[5,[2]]]],[2,2],[1,1],[3,3],[3,6],[3,6],[1,2],[3,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[3,3],[[1,1],7],[[3,3],7],[[],1],[[],3],[[1,1],8],[[3,3],8],[[1,9],10],[[1,9],10],[[1,9],10],[[3,9],10],[[3,9],10],[[3,9],10],[2,1],[2,1],[-1,-1,[]],[2,3],[-1,-1,[]],[2,3],[-1,-2,[],[]],[-1,-2,[],[]],[[2,2],8],[[1,-1],8,[[5,[2]]]],[[3,-1],8,[[5,[2]]]],[2,8],[1,8],[3,8],[[1,1],[[11,[7]]]],[[3,3],[[11,[7]]]],[[1,2],1],[[3,2],3],[[1,2],4],[[3,2],4],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]]],"c":[],"p":[[5,"PhysAddr",0],[1,"usize"],[5,"VirtAddr",0],[1,"tuple"],[10,"Into",73],[1,"u8"],[6,"Ordering",74],[1,"bool"],[5,"Formatter",75],[8,"Result",75],[6,"Option",76],[6,"Result",77],[5,"TypeId",78]],"b":[[41,"impl-UpperHex-for-PhysAddr"],[42,"impl-LowerHex-for-PhysAddr"],[43,"impl-Debug-for-PhysAddr"],[44,"impl-Debug-for-VirtAddr"],[45,"impl-UpperHex-for-VirtAddr"],[46,"impl-LowerHex-for-VirtAddr"],[47,"impl-PhysAddr"],[48,"impl-From%3Cusize%3E-for-PhysAddr"],[50,"impl-From%3Cusize%3E-for-VirtAddr"],[52,"impl-VirtAddr"]]},\
"monolithic_userboot":{"doc":"The userboot of the operating system, which will start the …","t":"CCHHSHHH","n":["batch","fs","get_envs","main","SDCARD_TESTCASES","get_args","run_batch_testcases","fs_init"],"q":[[0,"monolithic_userboot"],[4,"monolithic_userboot::batch"],[7,"monolithic_userboot::fs"],[8,"alloc::string"],[9,"alloc::vec"]],"d":["To allow for batch testing, we define a list of test cases …","Init some files and links for the apps","To get the environment variables of the application","","","分割命令行参数","","在执行系统调用前初始化文件系统"],"i":[0,0,0,0,0,0,0,0],"f":[0,0,[[],[[2,[1]]]],[[],3],0,[[[5,[4]]],[[2,[1]]]],[[[2,[1]]],3],[[],3]],"c":[],"p":[[5,"String",8],[5,"Vec",9],[1,"tuple"],[1,"u8"],[1,"slice"]],"b":[]},\
"of":{"doc":"A pure-Rust #![no_std] crate for parsing Flattened …","t":"FFHNNNNNNHHHNNNHNHNNCHHHNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNN","n":["Cpu","MachineFdt","bootargs","borrow","borrow","borrow_mut","borrow_mut","clock_frequency","clone","cpus","fdt_size","find_compatible_node","fmt","from","from","get_fdt_ptr","ids","init_fdt_ptr","into","into","kernel_nodes","machin_name","memory_nodes","pcsi","properties","property","timebase_frequency","try_from","try_from","try_into","try_into","type_id","type_id","Memory","Pcsi","borrow","borrow","borrow_mut","borrow_mut","clone","clone","compatible","cpu_off","cpu_on","cpu_suspend","from","from","into","into","method","migrate","regions","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"of"],[33,"of::kernel_nodes"],[58,"core::option"],[59,"core::iter::traits::iterator"],[60,"fdt::node"],[61,"core::fmt"],[62,"core::fmt"],[63,"fdt::standard_nodes"],[64,"fdt::node"],[65,"fdt::standard_nodes"]],"d":["Represents a <code>/cpus/cpu*</code> node with specific helper methods","","","","","","","<code>clock-frequency</code> property","","","","Searches for a node which contains a <code>compatible</code> property …","","Returns the argument unchanged.","Returns the argument unchanged.","","Return the IDs for the given CPU","Safety","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Root Node found model or first compatible","","","Returns an iterator over all of the properties for the CPU …","Attempts to find the a property by its name","<code>timebase-frequency</code> property","","","","","","","","","","","","","","","<code>compatible</code> property","Optional<code>cpu_off</code> property","Optional<code>cpu_on</code> property","Optional<code>cpu_suspend</code> property","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","<code>method</code> property","Optional<code>migrate</code> property","Returns an iterator over all of the available memory …","","","","","",""],"i":[0,0,0,21,3,21,3,3,3,0,0,0,3,21,3,0,3,0,21,3,0,0,0,0,3,3,3,21,3,21,3,21,3,0,0,15,16,15,16,15,16,16,16,16,16,15,16,15,16,16,16,15,15,16,15,16,15,16],"f":[0,0,[[],[[2,[1]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,4],[3,3],[[],[[0,[[6,[],[[5,[3]]]]]]]],[[],4],[[[7,[1]]],[[0,[[6,[],[[5,[8]]]]]]]],[[3,9],[[12,[10,11]]]],[-1,-1,[]],[-1,-1,[]],[[],[[2,[13]]]],[3,14],[13,10],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],1],[[],[[0,[[6,[],[[5,[15]]]]]]]],[[],[[2,[16]]]],[3,[[0,[[6,[],[[5,[17]]]]]]]],[[3,1],[[2,[17]]]],[3,4],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[15,15],[16,16],[16,1],[16,[[2,[19]]]],[16,[[2,[19]]]],[16,[[2,[19]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,1],[16,[[2,[19]]]],[15,[[0,[[6,[],[[5,[20]]]]]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,18,[]],[-1,18,[]]],"c":[],"p":[[1,"str"],[6,"Option",58],[5,"Cpu",0],[1,"usize"],[17,"Item"],[10,"Iterator",59],[1,"slice"],[5,"FdtNode",60],[5,"Formatter",61],[1,"tuple"],[5,"Error",61],[6,"Result",62],[1,"u8"],[5,"CpuIds",63],[5,"Memory",33],[5,"Pcsi",33],[5,"NodeProperty",60],[5,"TypeId",64],[1,"u32"],[5,"MemoryRegion",63],[5,"MachineFdt",0]],"b":[]},\
"page_table":{"doc":"This crate provides generic, unified, …","t":"PPETPEPPPPTTGFGKKIPPPTCMNNNNNNNNMNNNNNNNNNNNNNNNNNNMNCNNNNNNNNNNNNNNNNNNCIFNNNNNNNNNNNFIFINNNNNNNNNNNNNNNNNNNNIFNNNNNNN","n":["AlreadyMapped","Err","GenericPTE","LEVELS","MappedToHugePage","MappingFlags","NoMemory","NotAligned","NotMapped","Ok","PA_MAX_ADDR","PA_MAX_BITS","PageSize","PageTable64","PagingError","PagingIf","PagingMetaData","PagingResult","Size1G","Size2M","Size4K","VA_MAX_BITS","aarch64","alloc_frame","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","dealloc_frame","drop","eq","fmt","fmt","from","from","from","get_entry_mut","into","into","into","is_huge","map","map_fault","map_fault_region","map_overwrite","map_region","paddr_is_valid","phys_to_virt","query","riscv","root_paddr","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_new","type_id","type_id","type_id","unmap","unmap_region","update","update_region","vaddr_is_valid","walk","x86_64","A64PageTable","A64PagingMetaData","borrow","borrow_mut","clone","clone_into","from","into","to_owned","try_from","try_into","type_id","vaddr_is_valid","Sv39MetaData","Sv39PageTable","Sv48MetaData","Sv48PageTable","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","from","from","into","into","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","X64PageTable","X64PagingMetaData","borrow","borrow_mut","from","into","try_from","try_into","type_id"],"q":[[0,"page_table"],[73,"page_table::aarch64"],[86,"page_table::riscv"],[110,"page_table::x86_64"],[119,"memory_addr"],[120,"core::option"],[121,"page_table_entry"],[122,"core::fmt"],[123,"core::fmt"],[124,"core::any"],[125,"core::ops::function"]],"d":["The mapping is already present.","Contains the error value","","The number of levels of the hardware page table.","The page table entry represents a huge page, but the …","","Cannot allocate memory.","The address is not aligned to the page size.","The mapping is not present.","Contains the success value","The maximum physical address.","The maximum number of bits of physical address.","The page sizes supported by the hardware page table.","A generic page table struct for 64-bit platform.","The error type for page table operation failures.","The low-level <strong>OS-dependent</strong> helpers that must be provided …","The <strong>architecture-dependent</strong> metadata that must be provided …","The specialized <code>Result</code> type for page table operations.","Size of 1 gigabytes (230 bytes).","Size of 2 megabytes (221 bytes).","Size of 4 kilobytes (212 bytes).","The maximum number of bits of virtual address.","AArch64 specific page table structures.","Request to allocate a 4K-sized physical frame.","","","","","","","","","Request to free a allocated physical frame.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","To get the mutable reference of the page table entry of …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Whether this page size is considered huge (larger than 4K).","Maps a virtual page to a physical frame with the given …","Maps a fault page starts with <code>vaddr</code>.","TODO: huge page","Same as <code>PageTable64::map()</code>. This function will error if …","Map a contiguous virtual memory region to a contiguous …","Whether a given physical address is valid.","Returns a virtual address that maps to the given physical …","Query the result of the mapping starts with <code>vaddr</code>.","RISC-V specific page table structures.","Returns the physical address of the root page table.","","","","","","","","Creates a new page table instance or returns the error.","","","","Unmaps the mapping starts with <code>vaddr</code>.","Unmap a contiguous virtual memory region.","Updates the target or flags of the mapping starts with …","Update the mapping flags of a contiguous virtual memory …","Whether a given virtual address is valid.","Walk the page table recursively.","x86 specific page table structures.","AArch64 VMSAv8-64 translation table.","Metadata of AArch64 page tables.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Metadata of RISC-V Sv39 page tables.","Sv39: Page-Based 39-bit (3 levels) Virtual-Memory System.","Metadata of RISC-V Sv48 page tables.","Sv48: Page-Based 48-bit (4 levels) Virtual-Memory System.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","x86_64 page table.","metadata of x86_64 page tables.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","",""],"i":[10,14,0,6,10,0,10,10,10,14,6,6,0,0,0,0,0,0,3,3,3,6,0,8,5,10,3,5,10,3,3,3,8,5,3,10,3,5,10,3,5,5,10,3,3,5,5,5,5,5,6,8,5,0,5,3,5,10,3,5,10,3,5,5,10,3,5,5,5,5,6,5,0,0,0,20,20,20,20,20,20,20,20,20,20,20,0,0,0,0,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,0,0,23,23,23,23,23,23,23],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[2,[1]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,3],[[-1,-2],4,[],[]],[1,4],[[[5,[-1,-2,-3]]],4,6,7,8],[[3,3],9],[[10,11],12],[[3,11],12],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[5,[-1,-2,-3]],13],[[14,[[4,[-2,3]]]]],6,7,8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,9],[[[5,[-1,-2,-3]],13,1,3,15],14,6,7,8],[[[5,[-1,-2,-3]],13,3,15],14,6,7,8],[[[5,[-1,-2,-3]],13,16,15],14,6,7,8],[[[5,[-1,-2,-3]],13,1,3,15],14,6,7,8],[[[5,[-1,-2,-3]],13,1,16,15,9],14,6,7,8],[16,9],[1,13],[[[5,[-1,-2,-3]],13],[[14,[[4,[1,15,3]]]]],6,7,8],0,[[[5,[-1,-2,-3]]],1,6,7,8],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[[],[[14,[[5,[-1,-2,-3]]]]],6,7,8],[-1,18,[]],[-1,18,[]],[-1,18,[]],[[[5,[-1,-2,-3]],13],[[14,[[4,[1,3]]]]],6,7,8],[[[5,[-1,-2,-3]],13,16],14,6,7,8],[[[5,[-1,-2,-3]],13,[2,[1]],[2,[15]]],[[14,[3]]],6,7,8],[[[5,[-1,-2,-3]],13,16,15],14,6,7,8],[16,9],[[[5,[-1,-2,-3]],16,-4],14,6,7,8,[[19,[16,16,13,-2]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[20,20],[[-1,-2],4,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,18,[]],[16,9],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[21,21],[22,22],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,18,[]]],"c":[],"p":[[5,"PhysAddr",119],[6,"Option",120],[6,"PageSize",0],[1,"tuple"],[5,"PageTable64",0],[10,"PagingMetaData",0],[10,"GenericPTE",121],[10,"PagingIf",0],[1,"bool"],[6,"PagingError",0],[5,"Formatter",122],[8,"Result",122],[5,"VirtAddr",119],[8,"PagingResult",0],[5,"MappingFlags",121],[1,"usize"],[6,"Result",123],[5,"TypeId",124],[10,"Fn",125],[5,"A64PagingMetaData",73],[5,"Sv39MetaData",86],[5,"Sv48MetaData",86],[5,"X64PagingMetaData",110]],"b":[]},\
"page_table_entry":{"doc":"This crate provides the definition of page table entry for …","t":"TTKFTTTTCNNNNNNNNNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNMMMNNNMMNMNCNMMNNNNNNNNCFTTTTTTTFPTTGTTTTPPTTTTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTTTFTFTTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTTTTTTTTTTTTTTTTTTTTTFTTTFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["DEVICE","EXECUTE","GenericPTE","MappingFlags","READ","UNCACHED","USER","WRITE","aarch64","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow_mut","clear","clone","complement","contains","difference","empty","extend","flags","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","insert","intersection","intersects","into","into_iter","is_all","is_empty","is_huge","is_present","is_unused","iter","iter_names","new_fault_page","new_page","new_table","not","paddr","remove","riscv","set","set_flags","set_paddr","sub","sub_assign","symmetric_difference","toggle","try_from","try_into","type_id","union","x86_64","A64PTE","AF","AP_EL0","AP_NO_EL0_TABLE","AP_NO_WRITE_TABLE","AP_RO","ATTR_INDX","CONTIGUOUS","DescriptorAttr","Device","INNER","MAIR_VALUE","MemAttr","NG","NON_BLOCK","NS","NS_TABLE","Normal","NormalNonCacheable","PXN","PXN_TABLE","SHAREABLE","UXN","VALID","XN_TABLE","all","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","complement","complement","contains","contains","difference","difference","empty","empty","empty","eq","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_mem_attr","from_name","from_name","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into_iter","is_all","is_all","is_empty","is_empty","is_huge","is_present","is_unused","iter","iter","iter_names","iter_names","mem_attr","new_fault_page","new_page","new_table","not","paddr","remove","remove","set","set","set_flags","set_paddr","sub","sub_assign","symmetric_difference","symmetric_difference","toggle","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","union","A","D","G","PTEFlags","R","Rv64PTE","U","V","W","X","all","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clear","clone","complement","complement","contains","contains","difference","difference","empty","empty","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_name","from_name","insert","insert","intersection","intersection","intersects","intersects","into","into","into_iter","is_all","is_all","is_empty","is_empty","is_huge","is_present","is_unused","iter","iter","iter_names","iter_names","new_fault_page","new_page","new_table","not","paddr","remove","remove","set","set","set_flags","set_paddr","sub","sub_assign","symmetric_difference","symmetric_difference","toggle","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","union","ACCESSED","BIT_10","BIT_11","BIT_52","BIT_53","BIT_54","BIT_55","BIT_56","BIT_57","BIT_58","BIT_59","BIT_60","BIT_61","BIT_62","BIT_9","DIRTY","GLOBAL","HUGE_PAGE","NO_CACHE","NO_EXECUTE","PRESENT","PTF","USER_ACCESSIBLE","WRITABLE","WRITE_THROUGH","X64PTE","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","cmp","complement","contains","difference","empty","eq","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","into","is_all","is_empty","is_huge","is_present","is_unused","new_fault_page","new_page","new_table","not","paddr","partial_cmp","remove","set","set_flags","set_paddr","sub","sub_assign","symmetric_difference","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union"],"q":[[0,"page_table_entry"],[74,"page_table_entry::aarch64"],[203,"page_table_entry::riscv"],[304,"page_table_entry::x86_64"],[398,"core::iter::traits::collect"],[399,"core::fmt"],[400,"core::fmt"],[401,"bitflags::iter"],[402,"bitflags::iter"],[403,"core::result"],[404,"core::any"],[405,"core::cmp"],[406,"core::fmt"]],"d":["The memory is device memory.","The memory is executable.","A generic page table entry.","Generic page table entry flags that indicate the …","The memory is readable.","The memory is uncached.","The memory is user accessible.","The memory is writable.","AArch64 VMSAv8-64 translation table format descriptors.","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","Set this entry to zero.","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","The bitwise or (<code>|</code>) of the bits in each flags value.","Returns the flags of this entry.","","","","","","","Returns the argument unchanged.","","","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","For non-last level translation, returns whether this entry …","Returns whether this entry flag indicates present.","Returns whether this entry is zero.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Creates a fault page table entry.","Creates a page table entry point to a terminate page or …","Creates a page table entry point to a next level page …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Returns the physical address mapped by this entry.","The intersection of a source flags value with the …","RISC-V page table entries.","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Set flags of the entry.","Set mapped physical address of the entry.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","x86 page table entries on 64-bit paging.","A VMSAv8-64 translation table descriptor.","The Access flag.","Access permission: accessable at EL0.","Access permissions limit for subsequent levels of lookup: …","Access permissions limit for subsequent levels of lookup: …","Access permission: read-only.","Memory attributes index field.","Indicates that 16 adjacent translation table entries point …","Memory attribute fields in the VMSAv8-64 translation table …","Device-nGnRE memory","Shareability: Inner Shareable (otherwise Outer Shareable).","The MAIR_ELx register should be set to this value to match …","The memory attributes index field in the descriptor, which …","The not global bit.","The descriptor gives the address of the next level of …","Non-secure bit. For memory accesses from Secure state, …","For memory accesses from Secure state, specifies the …","Normal memory","Normal non-cacheable memory","The Privileged execute-never field.","PXN limit for subsequent levels of lookup.","Shareability: Inner or Outer Shareable (otherwise …","The Execute-never or Unprivileged execute-never field.","Whether the descriptor is valid.","XN limit for subsequent levels of lookup.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Creates an empty descriptor with all bits set to zero.","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Constructs a descriptor from the memory index, leaving the …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","","","","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Returns the memory attribute index field.","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Indicates the virtual page has been read, written, or …","Indicates the virtual page has been written since the last …","Designates a global mapping.","Page-table entry flags.","Whether the page is readable.","Sv39 and Sv48 page table entry for RV64 systems.","Whether the page is accessible to user mode.","Whether the PTE is valid.","Whether the page is writable.","Whether the page is executable.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","","","","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Set by the CPU when the mapped frame or page table is …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Set by the CPU on a write to the mapped frame.","Indicates that the mapping is present in all address …","Specifies that the entry maps a huge frame instead of a …","Disables caching for the pointed entry is cacheable.","Forbid code execution from the mapped frames.","Specifies whether the mapped frame or page table is loaded …","Possible flags for a page table entry.","Controls whether accesses from userspace (i.e. ring 3) are …","Controls whether writes to the mapped frames are allowed.","If this bit is set, a “write-through” policy is used …","An x86_64 page table entry.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","","Creates a fault page table entry.","","","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>."],"i":[1,1,0,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,4,1,1,1,1,1,1,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,4,4,1,1,4,4,4,1,4,1,0,1,4,4,1,1,1,1,1,1,1,1,0,0,11,11,11,11,11,11,11,0,22,11,22,0,11,11,11,11,22,22,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,22,21,11,22,21,21,22,21,11,11,11,11,11,11,11,11,21,22,11,21,11,11,11,11,11,22,21,11,11,22,21,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,22,21,11,11,11,11,11,21,21,21,11,11,11,11,11,21,21,21,11,21,11,11,11,11,21,21,11,11,11,11,11,11,11,22,21,11,22,21,11,22,21,11,11,12,12,12,0,12,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,23,12,23,23,23,12,12,12,12,12,12,12,12,12,23,12,12,12,12,12,23,12,12,23,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,23,12,12,12,12,12,23,23,23,12,12,12,12,23,23,23,12,23,12,12,12,12,23,23,12,12,12,12,12,12,12,23,12,23,12,23,12,12,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,10,10,10,0,10,10,10,10,10,10,10,10,24,10,24,10,24,24,10,10,10,10,10,10,10,10,24,24,10,10,10,10,10,24,10,10,10,10,10,10,10,10,10,10,24,10,10,10,24,24,24,24,24,24,10,24,10,10,10,24,24,10,10,10,10,24,10,24,10,24,10,10],"f":[0,0,0,0,0,0,0,0,0,[[],1],[[1,1],1],[[1,1],2],[[1,1],1],[[1,1],2],[1,3],[1,3],[[1,1],1],[[1,1],2],[-1,-2,[],[]],[-1,-2,[],[]],[4,2],[1,1],[1,1],[[1,1],5],[[1,1],1],[[],1],[[1,-1],2,[[7,[],[[6,[1]]]]]],[4,1],[[1,8],9],[[1,8],9],[[1,8],9],[[1,8],9],[[1,8],9],[10,1],[-1,-1,[]],[11,1],[12,1],[3,[[13,[1]]]],[3,1],[3,1],[3,1],[-1,1,[[7,[],[[6,[1]]]]]],[14,[[13,[1]]]],[[1,1],2],[[1,1],1],[[1,1],5],[-1,-2,[],[]],[1,-1,[]],[1,5],[1,5],[4,5],[4,5],[4,5],[1,[[15,[1]]]],[1,[[16,[1]]]],[[1,5],4],[[17,1,5],4],[17,4],[1,1],[4,17],[[1,1],2],0,[[1,1,5],2],[[4,1,5],2],[[4,17],2],[[1,1],1],[[1,1],2],[[1,1],1],[[1,1],2],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[[1,1],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],11],[[],11],[[11,11],11],[[11,11],2],[[11,11],11],[[11,11],2],[11,20],[11,20],[11,20],[[11,11],11],[[11,11],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[21,2],[22,22],[21,21],[11,11],[11,11],[[11,11],5],[[11,11],5],[[11,11],11],[[11,11],11],[[],11],[[],11],[[],21],[[22,22],5],[[11,-1],2,[[7,[],[[6,[11]]]]]],[21,1],[[11,8],9],[[11,8],9],[[11,8],9],[[11,8],9],[[11,8],9],[[22,8],9],[[21,8],9],[1,11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[20,[[13,[11]]]],[20,[[13,[11]]]],[20,11],[20,11],[20,11],[20,11],[20,11],[-1,11,[[7,[],[[6,[11]]]]]],[22,11],[14,[[13,[11]]]],[14,[[13,[11]]]],[[11,11],2],[[11,11],2],[[11,11],11],[[11,11],11],[[11,11],5],[[11,11],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[11,-1,[]],[11,5],[11,5],[11,5],[11,5],[21,5],[21,5],[21,5],[11,[[15,[11]]]],[11,[[15,[11]]]],[11,[[16,[11]]]],[11,[[16,[11]]]],[11,[[13,[22]]]],[[1,5],21],[[17,1,5],21],[17,21],[11,11],[21,17],[[11,11],2],[[11,11],2],[[11,11,5],2],[[11,11,5],2],[[21,1,5],2],[[21,17],2],[[11,11],11],[[11,11],2],[[11,11],11],[[11,11],11],[[11,11],2],[[11,11],2],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[[11,11],11],[[11,11],11],0,0,0,0,0,0,0,0,0,0,[[],12],[[],12],[[12,12],12],[[12,12],2],[[12,12],12],[[12,12],2],[12,3],[12,3],[12,3],[[12,12],12],[[12,12],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[23,2],[23,23],[12,12],[12,12],[[12,12],5],[[12,12],5],[[12,12],12],[[12,12],12],[[],12],[[],12],[[12,-1],2,[[7,[],[[6,[12]]]]]],[23,1],[[12,8],9],[[12,8],9],[[12,8],9],[[12,8],9],[[12,8],9],[[23,8],9],[1,12],[-1,-1,[]],[-1,-1,[]],[3,[[13,[12]]]],[3,[[13,[12]]]],[3,12],[3,12],[3,12],[3,12],[3,12],[-1,12,[[7,[],[[6,[12]]]]]],[14,[[13,[12]]]],[14,[[13,[12]]]],[[12,12],2],[[12,12],2],[[12,12],12],[[12,12],12],[[12,12],5],[[12,12],5],[-1,-2,[],[]],[-1,-2,[],[]],[12,-1,[]],[12,5],[12,5],[12,5],[12,5],[23,5],[23,5],[23,5],[12,[[15,[12]]]],[12,[[15,[12]]]],[12,[[16,[12]]]],[12,[[16,[12]]]],[[1,5],23],[[17,1,5],23],[17,23],[12,12],[23,17],[[12,12],2],[[12,12],2],[[12,12,5],2],[[12,12,5],2],[[23,1,5],2],[[23,17],2],[[12,12],12],[[12,12],2],[[12,12],12],[[12,12],12],[[12,12],2],[[12,12],2],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[[12,12],12],[[12,12],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],10],[[10,10],10],[[10,10],2],[[10,10],10],[[10,10],2],[10,20],[[10,10],10],[[10,10],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[24,2],[24,24],[10,10],[[10,10],25],[10,10],[[10,10],5],[[10,10],10],[[],10],[[10,10],5],[[10,-1],2,[[7,[],[[6,[10]]]]]],[24,1],[[24,8],9],[[10,8],[[18,[2,26]]]],[[10,8],[[18,[2,26]]]],[[10,8],[[18,[2,26]]]],[[10,8],[[18,[2,26]]]],[[10,8],[[18,[2,26]]]],[-1,-1,[]],[1,10],[-1,-1,[]],[20,[[13,[10]]]],[20,10],[20,10],[-1,10,[[7,[],[[6,[10]]]]]],[[10,-1],2,27],[[10,10],2],[[10,10],10],[[10,10],5],[-1,-2,[],[]],[-1,-2,[],[]],[10,5],[10,5],[24,5],[24,5],[24,5],[[1,5],24],[[17,1,5],24],[17,24],[10,10],[24,17],[[10,10],[[13,[25]]]],[[10,10],2],[[10,10,5],2],[[24,1,5],2],[[24,17],2],[[10,10],10],[[10,10],2],[[10,10],10],[[10,10],2],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[[10,10],10]],"c":[],"p":[[5,"MappingFlags",0],[1,"tuple"],[1,"usize"],[10,"GenericPTE",0],[1,"bool"],[17,"Item"],[10,"IntoIterator",398],[5,"Formatter",399],[8,"Result",399],[5,"PTF",304],[5,"DescriptorAttr",74],[5,"PTEFlags",203],[6,"Option",400],[1,"str"],[5,"Iter",401],[5,"IterNames",401],[5,"PhysAddr",402],[6,"Result",403],[5,"TypeId",404],[1,"u64"],[5,"A64PTE",74],[6,"MemAttr",74],[5,"Rv64PTE",203],[5,"X64PTE",304],[6,"Ordering",405],[5,"Error",399],[10,"Hasher",406]],"b":[[14,"impl-Flags-for-MappingFlags"],[15,"impl-MappingFlags"],[28,"impl-Binary-for-MappingFlags"],[29,"impl-LowerHex-for-MappingFlags"],[30,"impl-UpperHex-for-MappingFlags"],[31,"impl-Octal-for-MappingFlags"],[32,"impl-Debug-for-MappingFlags"],[33,"impl-From%3CPageTableFlags%3E-for-MappingFlags"],[35,"impl-From%3CDescriptorAttr%3E-for-MappingFlags"],[36,"impl-From%3CPTEFlags%3E-for-MappingFlags"],[38,"impl-MappingFlags"],[39,"impl-Flags-for-MappingFlags"],[99,"impl-DescriptorAttr"],[100,"impl-DescriptorAttr"],[105,"impl-Flags-for-DescriptorAttr"],[106,"impl-DescriptorAttr"],[107,"impl-DescriptorAttr"],[119,"impl-DescriptorAttr"],[120,"impl-DescriptorAttr"],[121,"impl-DescriptorAttr"],[122,"impl-DescriptorAttr"],[123,"impl-DescriptorAttr"],[124,"impl-DescriptorAttr"],[125,"impl-DescriptorAttr"],[126,"impl-DescriptorAttr"],[131,"impl-Binary-for-DescriptorAttr"],[132,"impl-Debug-for-DescriptorAttr"],[133,"impl-LowerHex-for-DescriptorAttr"],[134,"impl-UpperHex-for-DescriptorAttr"],[135,"impl-Octal-for-DescriptorAttr"],[142,"impl-DescriptorAttr"],[143,"impl-DescriptorAttr"],[144,"impl-DescriptorAttr"],[145,"impl-DescriptorAttr"],[146,"impl-Flags-for-DescriptorAttr"],[147,"impl-DescriptorAttr"],[148,"impl-DescriptorAttr"],[151,"impl-DescriptorAttr"],[152,"impl-DescriptorAttr"],[153,"impl-DescriptorAttr"],[154,"impl-DescriptorAttr"],[155,"impl-DescriptorAttr"],[156,"impl-DescriptorAttr"],[157,"impl-DescriptorAttr"],[158,"impl-DescriptorAttr"],[163,"impl-DescriptorAttr"],[164,"impl-DescriptorAttr"],[165,"impl-DescriptorAttr"],[166,"impl-DescriptorAttr"],[170,"impl-DescriptorAttr"],[171,"impl-DescriptorAttr"],[172,"impl-DescriptorAttr"],[173,"impl-DescriptorAttr"],[180,"impl-DescriptorAttr"],[181,"impl-DescriptorAttr"],[182,"impl-DescriptorAttr"],[183,"impl-DescriptorAttr"],[188,"impl-DescriptorAttr"],[189,"impl-DescriptorAttr"],[190,"impl-DescriptorAttr"],[191,"impl-DescriptorAttr"],[201,"impl-DescriptorAttr"],[202,"impl-DescriptorAttr"],[213,"impl-PTEFlags"],[214,"impl-PTEFlags"],[219,"impl-PTEFlags"],[220,"impl-Flags-for-PTEFlags"],[221,"impl-PTEFlags"],[230,"impl-PTEFlags"],[231,"impl-PTEFlags"],[232,"impl-PTEFlags"],[233,"impl-PTEFlags"],[234,"impl-PTEFlags"],[235,"impl-PTEFlags"],[236,"impl-PTEFlags"],[237,"impl-PTEFlags"],[240,"impl-Binary-for-PTEFlags"],[241,"impl-Debug-for-PTEFlags"],[242,"impl-UpperHex-for-PTEFlags"],[243,"impl-LowerHex-for-PTEFlags"],[244,"impl-Octal-for-PTEFlags"],[249,"impl-PTEFlags"],[250,"impl-PTEFlags"],[251,"impl-PTEFlags"],[252,"impl-Flags-for-PTEFlags"],[253,"impl-PTEFlags"],[254,"impl-PTEFlags"],[255,"impl-PTEFlags"],[257,"impl-PTEFlags"],[258,"impl-PTEFlags"],[259,"impl-PTEFlags"],[260,"impl-PTEFlags"],[261,"impl-PTEFlags"],[262,"impl-PTEFlags"],[263,"impl-PTEFlags"],[264,"impl-PTEFlags"],[268,"impl-PTEFlags"],[269,"impl-PTEFlags"],[270,"impl-PTEFlags"],[271,"impl-PTEFlags"],[275,"impl-PTEFlags"],[276,"impl-PTEFlags"],[277,"impl-PTEFlags"],[278,"impl-PTEFlags"],[284,"impl-PTEFlags"],[285,"impl-PTEFlags"],[286,"impl-PTEFlags"],[287,"impl-PTEFlags"],[292,"impl-PTEFlags"],[293,"impl-PTEFlags"],[294,"impl-PTEFlags"],[295,"impl-PTEFlags"],[302,"impl-PTEFlags"],[303,"impl-PTEFlags"],[354,"impl-UpperHex-for-PageTableFlags"],[355,"impl-LowerHex-for-PageTableFlags"],[356,"impl-Octal-for-PageTableFlags"],[357,"impl-Binary-for-PageTableFlags"],[358,"impl-Debug-for-PageTableFlags"]]},\
"percpu":{"doc":"Define and access per-CPU data structures.","t":"JFNNNNNXNHHNNHHNNHNNNNNN","n":["EXAMPLE_PERCPU_DATA","EXAMPLE_PERCPU_DATA_WRAPPER","borrow","borrow_mut","current_ptr","current_ref_mut_raw","current_ref_raw","def_percpu","from","get_local_thread_pointer","init","into","offset","percpu_area_base","percpu_area_size","read_current","read_current_raw","set_local_thread_pointer","try_from","try_into","type_id","with_current","write_current","write_current_raw"],"q":[[0,"percpu"],[24,"core::result"],[25,"core::any"],[26,"core::ops::function"]],"d":["Example per-CPU data for documentation only.","Wrapper struct for the per-CPU data <code>EXAMPLE_PERCPU_DATA</code>","","","Returns the raw pointer of this per-CPU data on the …","Returns the mutable reference of the per-CPU data on the …","Returns the reference of the per-CPU data on the current …","Defines a per-CPU data structure.","Returns the argument unchanged.","Read the architecture-specific thread pointer register on …","Initialize the per-CPU data area for <code>max_cpu_num</code> CPUs.","Calls <code>U::from(self)</code>.","Returns the offset relative to the per-CPU data area base …","Returns the base address of the per-CPU data area on the …","Returns the per-CPU data area size for one CPU.","Returns the value of the per-CPU data on the current CPU. …","Returns the value of the per-CPU data on the current CPU.","Set the architecture-specific thread pointer register to …","","","","Manipulate the per-CPU data on the current CPU in the …","Set the value of the per-CPU data on the current CPU. …","Set the value of the per-CPU data on the current CPU."],"i":[0,0,1,1,1,1,1,0,1,0,0,1,1,0,0,1,1,0,1,1,1,1,1,1],"f":[0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,2],[1,2],[1,2],0,[-1,-1,[]],[[],2],[2,3],[-1,-2,[],[]],[1,2],[2,2],[[],2],[1,2],[1,2],[2,3],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,5,[]],[[1,-2],-1,[],[[7,[2],[[6,[-1]]]]]],[[1,2],3],[[1,2],3]],"c":[],"p":[[5,"EXAMPLE_PERCPU_DATA_WRAPPER",0],[1,"usize"],[1,"tuple"],[6,"Result",24],[5,"TypeId",25],[17,"Output"],[10,"FnOnce",26]],"b":[]},\
"percpu_macros":{"doc":"Macros to define and access a per-CPU data structure.","t":"X","n":["def_percpu"],"q":[[0,"percpu_macros"]],"d":["Defines a per-CPU data structure."],"i":[0],"f":[0],"c":[],"p":[],"b":[]},\
"ratio":{"doc":"The type of ratios and related operations.","t":"FNNNNNNNNNNNNNN","n":["Ratio","borrow","borrow_mut","eq","fmt","from","into","inverse","mul_round","mul_trunc","new","try_from","try_into","type_id","zero"],"q":[[0,"ratio"],[15,"core::fmt"],[16,"core::fmt"],[17,"core::any"]],"d":["The ratio type.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Get the inverse ratio.","Multiplies the ratio by a value and rounds the result to …","Multiplies the ratio by a value and rounds the result down.","Creates a new ratio <code>numerator / denominator</code>.","","","","The zero ratio."],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[-1,-2,[],[]],[-1,-2,[],[]],[[1,1],2],[[1,3],4],[-1,-1,[]],[-1,-2,[],[]],[1,1],[[1,5],5],[[1,5],5],[[6,6],1],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[[],1]],"c":[],"p":[[5,"Ratio",0],[1,"bool"],[5,"Formatter",15],[8,"Result",15],[1,"u64"],[1,"u32"],[6,"Result",16],[5,"TypeId",17]],"b":[]},\
"scheduler":{"doc":"Various scheduler algorithms in a unified interface.","t":"KFFFFFFRMNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNMNNNMNNNMNNNNNNMNNNMNNNNNNNNNNNNNNNNNNNNNN","n":["BaseScheduler","CFSTask","CFScheduler","FifoScheduler","FifoTask","RRScheduler","RRTask","SchedItem","add_task","add_task","add_task","add_task","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","from","from","from","from","from","from","init","init","init","init","inner","inner","inner","into","into","into","into","into","into","new","new","new","new","new","new","pick_next_task","pick_next_task","pick_next_task","pick_next_task","put_prev_task","put_prev_task","put_prev_task","put_prev_task","remove_task","remove_task","remove_task","remove_task","scheduler_name","scheduler_name","scheduler_name","set_priority","set_priority","set_priority","set_priority","task_tick","task_tick","task_tick","task_tick","to_links","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"scheduler"],[94,"core::option"],[95,"linked_list::unsafe_list"],[96,"core::result"],[97,"core::any"]],"d":["The base scheduler trait that all schedulers should …","task for CFS","A simple Completely Fair Scheduler (CFS).","A simple FIFO (First-In-First-Out) cooperative scheduler.","A task wrapper for the <code>FifoScheduler</code>.","A simple Round-Robin (RR) preemptive scheduler.","A task wrapper for the <code>RRScheduler</code>.","Type of scheduled entities. Often a task struct.","Adds a task to the scheduler.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Initializes the scheduler.","","","","Returns a reference to the inner task struct.","Returns a reference to the inner task struct.","Returns a reference to the inner task struct.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","new with default values","Creates a new empty <code>CFScheduler</code>.","Creates a new <code>FifoTask</code> from the inner task struct.","Creates a new empty <code>FifoScheduler</code>.","Creates a new <code>RRTask</code> from the inner task struct.","Creates a new empty <code>RRScheduler</code>.","Picks the next task to run, it will be removed from the …","","","","Puts the previous task back to the scheduler. The previous …","","","","Removes a task by its reference from the scheduler. …","","","","get the name of scheduler","get the name of scheduler","get the name of scheduler","set priority for a task","","","","Advances the scheduler state at each timer tick. Returns …","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,2,2,4,5,6,7,4,8,5,9,6,7,4,8,5,9,6,7,8,9,7,4,8,5,9,6,2,4,5,6,7,8,9,7,4,8,5,9,6,7,4,8,5,9,6,2,4,5,6,2,4,5,6,2,4,5,6,4,5,6,2,4,5,6,2,4,5,6,8,7,4,8,5,9,6,7,4,8,5,9,6,7,4,8,5,9,6],"f":[0,0,0,0,0,0,0,0,[[[2,[],[[1,[-1]]]],-1],3,[]],[[[4,[-1]],-2],3,[],[]],[[[5,[-1]],-2],3,[],[]],[[[6,[-1]],-2],3,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[7,[-1]]],-2,[],[]],[[[8,[-1]]],-2,[],[]],[[[9,[-1]]],-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[2,[],[[1,[-1]]]]],3,[]],[[[4,[-1]]],3,[]],[[[5,[-1]]],3,[]],[[[6,[-1]]],3,[]],[[[7,[-1]]],-1,[]],[[[8,[-1]]],-1,[]],[[[9,[-1]]],-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-1]]],[]],[[],[[4,[-1]]],[]],[-1,[[8,[-1]]],[]],[[],[[5,[-1]]],[]],[-1,[[9,[-1]]],[]],[[],[[6,[-1]]],[]],[[[2,[],[[1,[-1]]]]],[[10,[-1]]],[]],[[[4,[-1]]],[[10,[-2]]],[],[]],[[[5,[-1]]],[[10,[-2]]],[],[]],[[[6,[-1]]],[[10,[-2]]],[],[]],[[[2,[],[[1,[-1]]]],-1,11],3,[]],[[[4,[-1]],-2,11],3,[],[]],[[[5,[-1]],-2,11],3,[],[]],[[[6,[-1]],-2,11],3,[],[]],[[[2,[],[[1,[-1]]]],-1],[[10,[-1]]],[]],[[[4,[-1]],-2],[[10,[-2]]],[],[]],[[[5,[-1]],-2],[[10,[-2]]],[],[]],[[[6,[-1]],-2],[[10,[-2]]],[],[]],[[],12],[[],12],[[],12],[[[2,[],[[1,[-1]]]],-1,13],11,[]],[[[4,[-1]],-2,13],11,[],[]],[[[5,[-1]],-2,13],11,[],[]],[[[6,[-1]],-2,13],11,[],[]],[[[2,[],[[1,[-1]]]],-1],11,[]],[[[4,[-1]],-2],11,[],[]],[[[5,[-1]],-2],11,[],[]],[[[6,[-1]],-2],11,[],[]],[[[8,[-1]]],[[14,[[8,[-1]]]]],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]]],"c":[],"p":[[17,"SchedItem"],[10,"BaseScheduler",0],[1,"tuple"],[5,"CFScheduler",0],[5,"FifoScheduler",0],[5,"RRScheduler",0],[5,"CFSTask",0],[5,"FifoTask",0],[5,"RRTask",0],[6,"Option",94],[1,"bool"],[1,"str"],[1,"isize"],[5,"Links",95],[6,"Result",96],[5,"TypeId",97]],"b":[]},\
"slab_allocator":{"doc":"Slab allocator for <code>no_std</code> systems. It uses multiple slabs …","t":"FNNNNNNNNNNNNNNN","n":["Heap","add_memory","allocate","available_bytes","borrow","borrow_mut","deallocate","from","into","new","total_bytes","try_from","try_into","type_id","usable_size","used_bytes"],"q":[[0,"slab_allocator"],[16,"core::alloc::layout"],[17,"core::alloc"],[18,"core::result"],[19,"core::any"]],"d":["A fixed size heap backed by multiple slabs with blocks of …","Adds memory to the heap. The start address must be valid …","Allocates a chunk of the given size with the given …","Returns available memory size in bytes.","","","Frees the given allocation. <code>ptr</code> must be a pointer returned …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates a new heap with the given <code>heap_start_addr</code> and …","Returns total memory size in bytes of the heap.","","","","Returns bounds on the guaranteed usable size of a …","Returns allocated memory size in bytes."],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[[1,2,2],3],[[1,4],[[6,[2,5]]]],[1,2],[-1,-2,[],[]],[-1,-2,[],[]],[[1,2,4],3],[-1,-1,[]],[-1,-2,[],[]],[[2,2],1],[1,2],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[[1,4],[[3,[2,2]]]],[1,2]],"c":[],"p":[[5,"Heap",0],[1,"usize"],[1,"tuple"],[5,"Layout",16],[5,"AllocError",17],[6,"Result",18],[5,"TypeId",19]],"b":[]},\
"spinlock":{"doc":"<code>no_std</code> spin lock implementation that can disable kernel …","t":"FFIIIIIINNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["BaseSpinLock","BaseSpinLockGuard","SpinNoIrq","SpinNoIrqGuard","SpinNoPreempt","SpinNoPreemptGuard","SpinRaw","SpinRawGuard","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref_mut","drop","fmt","fmt","force_unlock","from","from","get_mut","into","into","into_inner","is_locked","lock","new","try_from","try_from","try_into","try_into","try_lock","type_id","type_id"],"q":[[0,"spinlock"],[35,"kernel_guard"],[36,"core::marker"],[37,"core::default"],[38,"core::fmt"],[39,"core::fmt"],[40,"core::option"],[41,"core::any"]],"d":["A spin lock providing mutually exclusive access to data.","A guard that provides mutable data access.","A spin lock that disables kernel preemption and local IRQs …","A guard that provides mutable data access for <code>SpinNoIrq</code>.","A spin lock that disables kernel preemption while trying …","A guard that provides mutable data access for <code>SpinNoPreempt</code>…","A raw spin lock that does nothing while trying to lock.","A guard that provides mutable data access for <code>SpinRaw</code>.","","","","","","","","The dropping of the <code>BaseSpinLockGuard</code> will release the …","","","Force unlock this <code>BaseSpinLock</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>BaseSpinLock</code> and unwraps the underlying data.","Returns <code>true</code> if the lock is currently held.","Locks the <code>BaseSpinLock</code> and returns a guard that permits …","Creates a new <code>BaseSpinLock</code> wrapping the supplied data.","","","","","Try to lock this <code>BaseSpinLock</code>, returning a lock guard if …","",""],"i":[0,0,0,0,0,0,0,0,1,5,1,5,1,5,5,5,1,5,1,1,5,1,1,5,1,1,1,1,1,5,1,5,1,1,5],"f":[0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[1,[-1,-2]]],2,[3,4]],[[[5,[-1,-2]]],-2,2,3],[[[5,[-1,-2]]],-2,2,3],[[[5,[-1,-2]]],6,2,3],[[[1,[-1,-2]],7],8,2,[3,9]],[[[5,[-1,-2]],7],8,2,[3,9]],[[[1,[-1,-2]]],6,2,3],[-1,-1,[]],[-1,-1,[]],[[[1,[-1,-2]]],-2,2,3],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1,-2]]],-2,2,[]],[[[1,[-1,-2]]],10,2,3],[[[1,[-1,-2]]],[[5,[-1,-2]]],2,3],[-1,[[1,[-2,-1]]],[],2],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[[[1,[-1,-2]]],[[12,[[5,[-1,-2]]]]],2,3],[-1,13,[]],[-1,13,[]]],"c":[],"p":[[5,"BaseSpinLock",0],[10,"BaseGuard",35],[10,"Sized",36],[10,"Default",37],[5,"BaseSpinLockGuard",0],[1,"tuple"],[5,"Formatter",38],[8,"Result",38],[10,"Debug",38],[1,"bool"],[6,"Result",39],[6,"Option",40],[5,"TypeId",41]],"b":[]},\
"timer_list":{"doc":"A list of timed events that will be triggered sequentially …","t":"IKFFNNNNMNNNNNNNNNNNNNNNNNNN","n":["TimeValue","TimerEvent","TimerEventFn","TimerList","borrow","borrow","borrow_mut","borrow_mut","callback","callback","cancel","default","expire_one","from","from","into","into","is_empty","new","new","next_deadline","set","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"timer_list"],[28,"core::ops::function"],[29,"core::option"],[30,"core::ops::function"],[31,"core::any"]],"d":["The type of the time value.","A trait that all timed events must implement.","A simple wrapper of a closure that implements the …","A list of timed events.","","","","","Callback function that will be called when the timer …","","Cancel all events that meet the condition.","","Try to expire the earliest event that passed the deadline …","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Whether there is no timed event.","Creates a new empty timer list.","Constructs a new <code>TimerEventFn</code> from a closure.","Get the deadline of the most recent event.","Set a timed event that will be triggered at <code>deadline</code>.","","","","","",""],"i":[0,0,0,0,5,4,5,4,1,4,5,5,5,5,4,5,4,5,5,4,5,5,5,4,5,4,5,4],"f":[0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,2],3],[[4,2],3],[[[5,[-1]],-2],3,1,[[8,[-1],[[6,[7]]]]]],[[],[[5,[-1]]],1],[[[5,[-1]],2],[[9,[[3,[2,-1]]]]],1],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[5,[-1]]],7,1],[[],[[5,[-1]]],1],[-1,4,[[10,[2]]]],[[[5,[-1]]],[[9,[2]]],1],[[[5,[-1]],2,-1],3,1],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]],[-1,12,[]]],"c":[],"p":[[10,"TimerEvent",0],[8,"TimeValue",0],[1,"tuple"],[5,"TimerEventFn",0],[5,"TimerList",0],[17,"Output"],[1,"bool"],[10,"Fn",28],[6,"Option",29],[10,"FnOnce",28],[6,"Result",30],[5,"TypeId",31]],"b":[]},\
"tuple_for_each":{"doc":"Provides macros and methods to iterate over the fields of …","t":"Y","n":["TupleForEach"],"q":[[0,"tuple_for_each"]],"d":["Provides macros and methods to iterate over the fields of …"],"i":[0],"f":[0],"c":[],"p":[],"b":[]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
